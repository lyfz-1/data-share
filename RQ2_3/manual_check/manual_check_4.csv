commitId,commitTime,diff,message,isImplicit
b9145beab6672e7c8cae96e227ffab00d433350e,2014-07-04 16:48:28+02:00,"mmm KVMHAMonitor . java <nl> ppp KVMHAMonitor . java <nl> + import java . util . HashSet ; <nl> + import java . util . Set ; <nl> - this . _storagePool . put(pool . _poolUUID, pool) ; <nl> + _storagePool . put(pool . _poolUUID, pool) ; <nl> - this . _hostIP = host ; <nl> + _hostIP = host ; <nl> - this . _storagePool . put(pool . _poolUUID, pool) ; <nl> + _storagePool . put(pool . _poolUUID, pool) ; <nl> - NfsStoragePool pool = this . _storagePool . get(uuid) ; <nl> + NfsStoragePool pool = _storagePool . <nl>",fix cid 1116267 do not modify the set while the iterator be still in use,1
4f969057b2434cf09562c05a503592f661e7d83e,2014-07-07 13:38:47+05:30,mmm ClusterManager . java <nl> ppp ClusterManager . java <nl> + public long getManagementRunId(long msId) ; <nl> mmm ClusterManagerImpl . java <nl> ppp ClusterManagerImpl . java <nl> + @Override <nl> + public long getManagementRunId(long msId) { <nl> + ManagementServerHostVO mshost = _mshostDao . findByMsid(msId) ; <nl> + if (mshost != null) { <nl> + return mshost . getRunid() ; <nl> + } <nl> + return -1 ; <nl> + } <nl> mmm VmwareManagerImpl . java <nl> ppp VmwareManagerImpl . java <nl> - if (msid == _clusterMgr . getManagementNodeId() && runid != _clusterMgr . getCurrentRunId()) { <nl> + if (runid <nl>,"after the restart of m in a clustered m pool , not all hung worker vms be recycle",1
4be369c94c4c9a2609f922fa414178191753c8bd,2014-07-07 17:40:06+05:30,mmm VirtualMachineMO . java <nl> ppp VirtualMachineMO . java <nl> - int deviceNumber = -1 ; <nl> + List<Integer> existingUnitNumbers = new ArrayList<Integer>() ; <nl> + int deviceNumber = 0 ; <nl> - if (device . getUnitNumber() != null && device . getUnitNumber() . intValue() > deviceNumber) { <nl> - deviceNumber = device . getUnitNumber() . intValue() ; <nl> - } <nl> + existingUnitNumbers . add(device . getUnitNumber()) ; <nl> - return ++deviceNumber ; <nl> + while (true) { <nl> + if (!existingUnitNumbers . contains(Integer . valueOf(deviceNumber))) { <nl> + break ; <nl> + } <nl> + } <nl> <nl>,volume attachment fail with ' a specify parameter be not correct ' error,1
70e68be4f32538b7965e916cce1f51334fadbbd5,2014-07-22 13:12:47+02:00,mmm ConfigHelper . java <nl> ppp ConfigHelper . java <nl> + import java . io . UnsupportedEncodingException ; <nl> + import java . util . HashMap ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import org . apache . commons . codec . binary . Base64 ; <nl> + import com . google . gson . Gson ; <nl> - import com . google . gson . Gson ; <nl> - import org . apache . commons <nl>,fix string encode problem report by coverity,1
1d2124dcbf48d15d23ddbdea23a29f0ab21be6f3,2014-07-22 17:45:24+02:00,"mmm VmwareStorageProcessor . java <nl> ppp VmwareStorageProcessor . java <nl> + if (context == null) { <nl> + return new CopyCmdAnswer(""Failed to create a Vmware context, check the management server logs or the ssvm log for details"") ; <nl> + } <nl> - chapInitiatorUsername, chapInitiatorSecret, chapTargetUsername, chapTargetSecret) ; <nl> + chapInitiatorUsername, chapInitiatorSecret, chapTargetUsername, chapTargetSecret) ; <nl> - managedStoragePoolRootVolumeName, VmwareStorageLayoutType . VMWARE, false) ; <nl> + managedStoragePoolRootVolumeName, VmwareStorageLayoutType . VMWARE, false) ; <nl> - managedStoragePoolRootVolumeName, VmwareStorageLayoutType . CLOUDSTACK_LEGACY, false) ; <nl> + managedStoragePoolRootVolumeName, VmwareStorageLayoutType . CLOUDSTACK_LEGACY, false) ; <nl> - details . get(DiskTO . CHAP_INITIATOR_USERNAME), details . get(DiskTO . CHAP_INITIATOR_SECRET), <nl>","fix npe report on irc , provide the user an informative error message",1
dfa607fb443cbd0c3f2c264c2abfa9f1844a16ce,2014-08-05 10:00:00+05:30,mmm VirtualMachineMO . java <nl> ppp VirtualMachineMO . java <nl> - } else if (attachedNetworkSummary . endsWith("DistributedVirtualPortBackingInfo . summary")) { <nl> + } else if (attachedNetworkSummary . endsWith("DistributedVirtualPortBackingInfo . summary") || attachedNetworkSummary . startsWith("DVSwitch")) { <nl>,"sourcenat , staticnat and portfowrding be not work with vmware dvs in vcenter 5.5",0
328599ae0b2582d641e51c2922ecad2972e1f03a,2014-08-13 09:02:04+02:00,mmm BaremetalKickStartServiceImpl . java <nl> ppp BaremetalKickStartServiceImpl . java <nl> + import java . io . File ; <nl> + import java . net . URI ; <nl> + import java . net . URL ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import javax . ejb . Local ; <nl> + import javax . inject . Inject ; <nl>,do not depend on static path especially if we be already check that,1
5811ebeee7040c3af66d57671d4546a9d0547786,2014-09-03 14:40:00-07:00,mmm XcpServerDiscoverer . java <nl> ppp XcpServerDiscoverer . java <nl> + host . setHypervisorVersion(prodVersion) ; <nl> mmm CitrixResourceBase . java <nl> ppp CitrixResourceBase . java <nl> + if (guestOsTypeName . toLowerCase() . contains("windows")) { <nl> + vmr . VCPUsMax = (long)vmSpec . getCpus() ; <nl> + } else { <nl> + vmr . VCPUsMax = 2L * vmSpec . getCpus() ; <nl> + if (vmr . VCPUsMax > 16) <nl> + { <nl> + vmr . VCPUsMax = 16L ; <nl> + } <nl> + } <nl> - vmr . memoryStaticMin = vmSpec . getMinRam() ; <nl> + vmr <nl>,"if vm scale be disable , do not set any scale option for vm",1
2b7b837b28f847eedf3cd7bd034dc23ba43d8a63,2014-09-10 13:26:24+02:00,"mmm VirtualMachineManagerImpl . java <nl> ppp VirtualMachineManagerImpl . java <nl> - VirtualMachineProfile profile = new VirtualMachineProfileImpl(vm) ; <nl> + VirtualMachineProfile profile = new VirtualMachineProfileImpl(vm, null, _offeringDao . findById(vm . getId(), vm . getServiceOfferingId()), null, null) ; <nl>",live migration be fail for vm deploy use dynaic compute offering with npe,1
de26a7228e1298d0a5d4d2c0bf00c924a99cd505,2014-09-16 16:43:32+02:00,"mmm Link . java <nl> ppp Link . java <nl> + import java . security . GeneralSecurityException ; <nl> - engResult . getStatus() != SSLEngineResult . Status . OK) { <nl> + engResult . getStatus() != SSLEngineResult . Status . OK) { <nl> - engResult . getStatus() != SSLEngineResult . Status . OK) { <nl> + engResult . getStatus() != SSLEngineResult . Status . OK) { <nl> - public static SSLContext initSSLContext(boolean isClient) throws Exception { <nl> + public static SSLContext initSSLContext(boolean isClient) throws GeneralSecurityException, IOException { <nl> mmm NioClient . java <nl> ppp NioClient . java <nl> + <nl>",fix resource leak on exception path,1
086b8c0c4a61e3930c0440bda9116f23cbfd6a9f,2014-09-17 11:40:40+02:00,"mmm Upgrade410to420 . java <nl> ppp Upgrade410to420 . java <nl> - conn . prepareStatement(""insert into `cloud` . `configuration` (`category`, `instance`, `component`, `name`, `value`, `description`) VALUES ('Advanced', 'DEFAULT', 'UserVmManager', 'vmware . create . full . clone' , 'false', 'If set to true, creates VMs as full clones on ESX hypervisor') ;"") ; <nl> + conn . prepareStatement(""insert into `cloud` . `configuration` (`category`, `instance`, `component`, `name`, `value`, `description`) VALUES ('Advanced', 'DEFAULT', 'UserVmManager', 'vmware . create . full . clone' , 'false', 'If set to true, creates VMs as full clones on ESX hypervisor') ;"") ; <nl> - conn . prepareStatement(""insert into <nl>",fix resource leak cid-1116654,1
6f54d48772fc6e3a7b756c330b9569a5a2215b74,2014-09-19 11:54:21+02:00,"mmm Script . java <nl> ppp Script . java <nl> - this . result = null ; <nl> + result = null ; <nl> - path = path . replace(""/"", File . separator) ; <nl> + if (path == null) { <nl> + s_logger . warn(""No search path specified, unable to look for "" script) ; <nl> + return null ; <nl> + } <nl> + path = path . replace(""/"", File . separator) ; <nl>","path can be null , make sure that be properly handle",1
586e00cee1481a090b6fb9369195b1651cea6e2b,2014-09-30 11:43:02+02:00,mmm LibvirtStorageAdaptor . java <nl> ppp LibvirtStorageAdaptor . java <nl> + import java . util . HashMap ; <nl> - import java . util . HashMap ; <nl> + if (spd == null) { <nl> + throw new CloudRuntimeException("Unable to parse the storage pool definition for storage pool " uuid) ; <nl> + } <nl> - || pool . getType() == StoragePoolType . Gluster) { <nl> + || pool . getType() == StoragePoolType . Gluster) { <nl> - + pool . getUuid() + " with size " + size) ; <nl> + pool . getUuid() " with size " <nl>,fix potential npe,1
47ac3e4fd1aa9b117b5ce72035e6d09239f1ca4f,2014-10-02 09:54:53+02:00,"mmm TemplateServiceImpl . java <nl> ppp TemplateServiceImpl . java <nl> - import java . io . File ; <nl> - ""Private Template ("" + tmplt + "") with install path "" + tmpltInfo . getInstallPath() + <nl> + ""Private Template ("" tmplt "") with install path "" tmpltInfo . getInstallPath() + <nl> - com . cloud . configuration . Resource . ResourceType . secondary_storage, <nl> - tmpltInfo . getSize() UriUtils . getRemoteSize(tmplt . getUrl())) ; <nl> + com . cloud . configuration . Resource . ResourceType . secondary_storage, <nl> + tmpltInfo . getSize() - UriUtils . getRemoteSize(tmplt . getUrl())) <nl>",file.separator should not be use in this case,1
350ac4c4b0e71156ed27307b2d625f46453500a2,2014-10-13 17:51:02+05:30,mmm Upgrade441to450 . java <nl> ppp Upgrade441to450 . java <nl> - PreparedStatement pstmt = null ; <nl> - ResultSet rs = null ; <nl> - try{ <nl> + try { <nl> - try { <nl> - pstmt = conn . prepareStatement("select distinct(hypervisor_type) from `cloud` . `cluster` where removed is null") ; <nl> - rs = pstmt . executeQuery() ; <nl> - while(rs . next()){ <nl> - switch (Hypervisor . HypervisorType . getType(rs . getString(1))) { <nl> - case XenServer: hypervisorsListInUse . add(Hypervisor . HypervisorType . XenServer) ; <nl> - break ; <nl> - case KVM:     <nl>,fix resource leak,1
95c7ffbd46f9f674b8813a7b992c17019eb00137,2014-10-13 10:49:45-07:00,mmm CitrixResourceBase . java <nl> ppp CitrixResourceBase . java <nl> - if (parentVDI != null) <nl> + if (!isRefNull(parentVDI)) <nl> - s_logger . debug("Exception occurs when calculate " + "snapshot capacity for volumes: " + e . getMessage()) ; <nl> + s_logger . debug("Exception occurs when calculate snapshot capacity for volumes: due to " e . toString()) ; <nl> - size = size + memoryVDI . getParent(conn) . getPhysicalUtilisation(conn) ; <nl> - size = size + memoryVDI . getPhysicalUtilisation(conn) ; <nl> + if (!isRefNull(memoryVDI)) { <nl> + size = size memoryVDI . getPhysicalUtilisation(conn) ; <nl> + VDI pMemoryVDI = <nl>,fix npe on calculate vm snasphot volume size,1
02c75251b33c74a9d7d2abe67effa1e6e2007dea,2014-10-14 15:08:09+02:00,"mmm VpcNetworkHelperImpl . java <nl> ppp VpcNetworkHelperImpl . java <nl> + import javax . annotation . PostConstruct ; <nl> - protected final String noHypervisorsErrMsgDetails = StringUtils . join(this . vpcMgr . getSupportedVpcHypervisors(), ',') ; <nl> + protected String noHypervisorsErrMsgDetails ; <nl> + @PostConstruct <nl> + protected void setupNoHypervisorsErrMsgDetails() { <nl> + this . noHypervisorsErrMsgDetails = StringUtils . join(this . vpcMgr . getSupportedVpcHypervisors(), ',') ; <nl> + this . noHypervisorsErrMsgDetails += "" are the only supported Hypervisors"" ; <nl> + } <nl>",fix npe due to use of dependency before spring injection,1
4e21948f5c73e10cf5d9731b16da3e47a8d46093,2014-10-14 15:08:12+02:00,mmm NetworkHelperImpl . java <nl> ppp NetworkHelperImpl . java <nl> - return hypervisorsMap . get(hType) . valueIn(datacenterId) ; <nl> + String templateName = null ; <nl> + ConfigKey<String> hypervisorConfigKey = hypervisorsMap . get(hType) ; <nl> + if (hypervisorConfigKey != null) { <nl> + templateName = hypervisorConfigKey . valueIn(datacenterId) ; <nl> + } <nl> + return templateName ; <nl>,fix the networkhelperimpl class it be throw a npe due to a hypervisor type simulator not be in the hashmap,1
efe1e0a54440feeb7708b3a6c98897fa5d6909a0,2014-10-16 12:19:51+05:30,mmm Upgrade410to420 . java <nl> ppp Upgrade410to420 . java <nl> - ResultSet rs = null ; <nl> - PreparedStatement delete = null ; <nl> - PreparedStatement query = null ; <nl> - PreparedStatement update = null ; <nl> + String update_sql ; <nl> - try { <nl> - delete = conn . prepareStatement("delete from `cloud` . `configuration` where name='vmware . create . full . clone' ;") ; <nl> + try (PreparedStatement delete = conn . prepareStatement("delete from `cloud` . `configuration` where name='vmware . create . full . clone' ;") ;) <nl> + { <nl> - query = conn . <nl>,fix coverity and other resource leak issue,1
45611a0f83024d055adcce0d05b5fcfb567e329b,2014-10-21 11:14:15-07:00,mmm CitrixResourceBase . java <nl> ppp CitrixResourceBase . java <nl> - import com . xensource . xenapi . VMGuestMetrics ; <nl> - boolean isHVM ; <nl> - if (vm . getPVBootloader(conn) . equalsIgnoreCase("")) { <nl> - isHVM = true ; <nl> - } else { <nl> - isHVM = false ; <nl> - } <nl> - VMGuestMetrics vgm = vm . getGuestMetrics(conn) ; <nl> - boolean pvDrvInstalled = false ; <nl> - if (!isRefNull(vgm) && vgm . getPVDriversUpToDate(conn)) { <nl> - pvDrvInstalled = true ; <nl> - } <nl> - if (isHVM && !pvDrvInstalled) { <nl> - s_logger . <nl>,"do not need to check if pv driver be update , old pv driver should work",1
c52e14730eca5c9c7deb586e18e997bd22d50a9d,2014-10-22 15:07:40-07:00,"mmm Status . java <nl> ppp Status . java <nl> - s_fsm . addTransition(Status . Connecting, Event . HostDown, Status . Alert) ; <nl> + s_fsm . addTransition(Status . Connecting, Event . HostDown, Status . Down) ; <nl> mmm AgentManagerImpl . java <nl> ppp AgentManagerImpl . java <nl> + if ((host . getType() != Host . Type . SecondaryStorage) && (host . getType() != Host . Type . ConsoleProxy)) { <nl> + _alertMgr . sendAlert(AlertManager . AlertType . ALERT_TYPE_HOST, host . getDataCenterId(), host . getPodId(), ""Host disconnected, "" host . getId(), <nl> + ""Host is down: "" host . <nl>","when host be pingtimeout and ccp can not determine the host status , put the host to alert status , no vm ha",1
32dc09f2c35b41fdc9c2c9434c2be66b0b343634,2014-10-23 16:10:18-07:00,mmm XenServerInvestigator . java <nl> ppp XenServerInvestigator . java <nl> - return ans . isAlive() ? Status . Up : Status . Down ; <nl> + return ans . isAlive() ? null : Status . Down ; <nl>,"even xenserverinvestigator return true , that mean host be up , but xapi may not work",1
b8d6396409d13e98f2df0d1d276956dd00bb049c,2014-10-30 10:27:34-07:00,mmm XenServerStorageProcessor . java <nl> ppp XenServerStorageProcessor . java <nl> - import com . xensource . xenapi . VMGuestMetrics ; <nl> - boolean isHVM = vm . getPVBootloader(conn) . equalsIgnoreCase("") ; <nl> - VMGuestMetrics vgm = vm . getGuestMetrics(conn) ; <nl> - boolean pvDrvInstalled = false ; <nl> - if (!this . hypervisorResource . isRefNull(vgm) && vgm . getPVDriversUpToDate(conn)) { <nl> - pvDrvInstalled = true ; <nl> - } <nl> - if (isHVM && !pvDrvInstalled) { <nl> - s_logger . warn(": You attempted an operation on a VM which requires PV drivers to be installed but the drivers were <nl>,"do not need to check if pv driver be update , old pv driver should work",1
ef6ec7b27675ea44d45c68b30eb2f508655703be,2014-11-13 17:26:24+05:30,mmm CreateEgressFirewallRuleCmd . java <nl> ppp CreateEgressFirewallRuleCmd . java <nl> - return publicStartPort . intValue() ; <nl> + return publicStartPort ; <nl> - return publicStartPort . intValue() ; <nl> + return publicStartPort ; <nl> - return publicEndPort . intValue() ; <nl> + return publicEndPort ; <nl> mmm DeleteEgressFirewallRuleCmd . java <nl> ppp DeleteEgressFirewallRuleCmd . java <nl> - return _firewallService . getFirewallRule(id) . getNetworkId() ; <nl> - } <nl> + FirewallRule fw = _firewallService . getFirewallRule(id) ; <nl> + if (fw != null) <nl> + return fw . getNetworkId() ; <nl> + return null ; <nl> + } <nl> mmm <nl>,"fix few coverity issue like invalid box unboxing issue , resource leak , null dereferences",1
16de4a71761efe69053fefb6f77f16ddfff63c0f,2014-11-18 14:12:14+01:00,mmm NetUtils . java <nl> ppp NetUtils . java <nl> - import com . cloud . utils . IteratorUtil ; <nl> - import com . cloud . utils . Pair ; <nl> - import com . cloud . utils . script . Script ; <nl> - import com . googlecode . ipv6 . IPv6Address ; <nl> - import com . googlecode . ipv6 . IPv6AddressRange ; <nl> - import com . googlecode . ipv6 . IPv6Network ; <nl> - import org . apache . commons . lang . SystemUtils ; <nl> - import org . apache . commons . <nl>,fix for potential npe,1
fe0168f6d2d1ee144a1a6e0580464420f1dfa5fe,2014-11-18 14:30:55+01:00,mmm UsageServer . java <nl> ppp UsageServer . java <nl> - import org . springframework . context . ApplicationContext ; <nl> - UsageManager mgr ; <nl> + private UsageManager mgr ; <nl> + private ClassPathXmlApplicationContext appContext ; <nl> - ApplicationContext appContext = new ClassPathXmlApplicationContext("usageApplicationContext . xml") ; <nl> + appContext = new ClassPathXmlApplicationContext("usageApplicationContext . xml") ; <nl> + appContext . close() ; <nl>,fix resource leak,1
7b8fe0c8cd9716f85108856bedfe24d0235506b5,2014-12-04 19:31:03+05:30,"mmm VolumeApiServiceImpl . java <nl> ppp VolumeApiServiceImpl . java <nl> + @ActionEvent(eventType = EventTypes . EVENT_VOLUME_ATTACH, eventDescription = ""attaching volume"", async = true) <nl> - @ActionEvent(eventType = EventTypes . EVENT_VOLUME_ATTACH, eventDescription = ""attaching volume"", async = true) <nl>",attach volume event be not correctly show in event,1
d4605556c620f0475263a339ea4f646817bfaad5,2014-12-04 15:28:41+01:00,mmm RulesManagerImpl . java <nl> ppp RulesManagerImpl . java <nl> - VMInstanceVO vm = _vmInstanceDao . findById(sourceIp . getAssociatedWithVmId()) ; <nl> + VMInstanceVO vm = _vmInstanceDao . findByIdIncludingRemoved(sourceIp . getAssociatedWithVmId()) ; <nl>,fix npe when delete a domain,1
bca015306e5c16915b5a76d846294c593e1df15c,2014-12-09 03:27:31+05:30,"mmm VmwareResource . java <nl> ppp VmwareResource . java <nl> - ManagedObjectReference morSecDs = prepareSecondaryDatastoreOnHost(secStoreUrl) ; <nl> + ManagedObjectReference morSecDs = prepareSecondaryDatastoreOnSpecificHost(secStoreUrl, tgtHyperHost) ; <nl> + public synchronized ManagedObjectReference prepareSecondaryDatastoreOnSpecificHost(String storeUrl, VmwareHypervisorHost hyperHost) throws Exception { <nl> + String storeName = getSecondaryDatastoreUUID(storeUrl) ; <nl> + URI uri = new URI(storeUrl) ; <nl> + ManagedObjectReference morDatastore = hyperHost . mountDatastore(false, uri . getHost(), 0, uri . getPath(), storeName . replace(""-"", """")) ; <nl> + if (morDatastore == null) <nl> + throw new Exception(""Unable to mount secondary storage on host .  storeUrl: "" storeUrl) ; <nl> + return morDatastore ; <nl>",storage live migration of instance may not happen if instance have iso attach,1
01a325b2bfde3f82faca1361cfab3f66ee78a524,2015-01-07 14:17:30+05:30,"mmm ApiResponseHelper . java <nl> ppp ApiResponseHelper . java <nl> - NetworkVO network = _entityMgr . findByIdIncludingRemoved(NetworkVO . class, usageRecord . getNetworkId() . toString()) ; <nl> - if (network != null) { <nl> - usageRecResponse . setNetworkId(network . getUuid()) ; <nl> + if((usageRecord . getNetworkId() != null) && (usageRecord . getNetworkId() != 0)) { <nl> + NetworkVO network = _entityMgr . findByIdIncludingRemoved(NetworkVO . class, usageRecord . getNetworkId() . toString()) ; <nl> + if (network != null) { <nl> + usageRecResponse . setNetworkId(network . getUuid()) ; <nl> + } <nl>",network id for direct-network should not be include in usage record response direct network stats have network_id = 0 ignore network with id = 0 in usage record,1
bd190192b92a24de048b8a03edbe9d26a3fcef66,2015-02-05 13:47:22+05:30,"mmm DbTestUtils . java <nl> ppp DbTestUtils . java <nl> - FileReader reader ; <nl> - try { <nl> - reader = new FileReader(cleanScript) ; <nl> + try(FileReader reader = new FileReader(cleanScript) ;) <nl> + { <nl> + runner . runScript(reader) ; <nl> + conn . close() ; <nl> - } <nl> - try { <nl> - runner . runScript(reader) ; <nl> - } catch (IOException e) { <nl> + }catch (IOException e) { <nl> - } catch (SQLException e) { <nl> - throw new RuntimeException(""Unable to execute "" + file, e) ; <nl> - } <nl> - try <nl>",fix resource leak,1
68b5440d442aa5946cd3f37b6b7581e582946e68,2015-02-05 17:44:32+05:30,mmm AsyncJobManagerImpl . java <nl> ppp AsyncJobManagerImpl . java <nl> - if(job . getResult() != null) <nl> + if(job != null && job . getResult() != null) <nl> mmm LibvirtComputingResource . java <nl> ppp LibvirtComputingResource . java <nl> + } else { <nl> + throw new InternalErrorException("Error while mapping RBD device on host") ; <nl> mmm LibvirtStorageAdaptor . java <nl> ppp LibvirtStorageAdaptor . java <nl> + if (spd == null) { <nl> + throw new CloudRuntimeException("Unable to parse the storage pool definition for storage pool " uuid) ; <nl> + } <nl>,"fix npe case , throw exception early on",1
c37841817eabcce6957259a1e6f4a13e52f4a79c,2015-02-18 11:15:13+05:30,mmm VirtualMachine . java <nl> ppp VirtualMachine . java <nl> - if (oldState == State . Stopping && newState == State . Stopped) { <nl> + if ((oldState == State . Stopping && newState == State . Stopped) || <nl> + (oldState == State . Running && <nl> + newState == State . Stopped && <nl> + e == Event . FollowAgentPowerOffReport)) { <nl>,ensure agent reconciliation trigger event,1
04bda842995bc126760992199481a2bba6f38be4,2015-03-05 17:05:25+05:30,mmm LdapManagerImpl . java <nl> ppp LdapManagerImpl . java <nl> + LdapContext context = null ; <nl> - _ldapContextFactory . createBindContext(providerUrl) ; <nl> + context = _ldapContextFactory . createBindContext(providerUrl) ; <nl> + } finally { <nl> + closeContext(context) ; <nl>,fix coverity report resource leak in ldapmanagerimpl,1
3d411dc616a405860c0c10c056255b16244fcf67,2015-03-13 14:59:34+05:30,mmm SimulatorStorageProcessor . java <nl> ppp SimulatorStorageProcessor . java <nl> + template . setSize(new Long(100)) ; <nl> mmm VmwareStorageProcessor . java <nl> ppp VmwareStorageProcessor . java <nl> + newTemplate . setSize(new Long(0)) ; // TODO: replace 0 with correct template physical_size .  <nl>,fix simulator and vmware npe issue,1
c4de33d682930afe0bb0de25a858566461182d11,2015-03-16 11:35:38+01:00,"mmm MockNetworkManagerImpl . java <nl> ppp MockNetworkManagerImpl . java <nl> - String[][] rules = cmd . generateSRouteRules() ; <nl> + String[] rules = cmd . generateSRouteRules() ; <nl> - String[] srRules = rules[0] ; <nl> - for (int i = 0 ; i < srRules . length ; i++) { <nl> - sb . append(srRules[i]) . append(',') ; <nl> + for (int i = 0 ; i < rules . length ; i++) { <nl> + sb . append(rules[i]) . append(',') ; <nl>",fix compilation problem only visible upon simulator build,1
87855d6bb72abf33fdf7fe459f9db824090f9bed,2015-03-16 11:38:11+01:00,mmm RouterDeploymentDefinition . java <nl> ppp RouterDeploymentDefinition . java <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + import org . apache . log4j . Logger ; <nl> + import org . apache . cloudstack . engine . orchestration . service . NetworkOrchestrationService ; <nl> - import org . apache . cloudstack . engine . orchestration . service . NetworkOrchestrationService ; <nl> - import org . apache . log4j . Logger ; <nl> - import java . util . <nl>,fix a problem where virtual router be deploy multiple time in a network,1
159088cb9044d09d4bddf3b4cf93b493f21828fe,2015-03-16 11:39:55+01:00,"mmm SetNetworkAclConfigItem . java <nl> ppp SetNetworkAclConfigItem . java <nl> + import org . apache . log4j . Logger ; <nl> + public static final Logger s_logger = Logger . getLogger(SetNetworkAclConfigItem . class . getName()) ; <nl> - aclRule = new ProtocolAclRule(ruleParts[4], ""ACCEPT"" . equals(ruleParts[5]), Integer . parseInt(ruleParts[1])) ; <nl> + try { <nl> + aclRule = new ProtocolAclRule(ruleParts[5], false, Integer . parseInt(ruleParts[1])) ; <nl> + } catch (final Exception e) { <nl> + s_logger . warn(""Problem occured when reading the entries in the ruleParts array .  Actual array size is '"" ruleParts . length ""', but trying <nl>",fix array index problem on the acl command,1
3af2ce3f50406e88780c7117806040fe9db624c2,2015-03-16 11:40:03+01:00,"mmm VirtualNetworkApplianceManagerImpl . java <nl> ppp VirtualNetworkApplianceManagerImpl . java <nl> - final List<DomainRouterVO> checkingRouters = _routerDao . listByNetworkAndRole(routerGuestNtwkId, Role . VIRTUAL_ROUTER) ; <nl> + final List<DomainRouterVO> checkingRouters ; <nl> + Long vpcId = router . getVpcId() ; <nl> + if (vpcId != null) { <nl> + checkingRouters = _routerDao . listByVpcId(vpcId) ; <nl> + } else { <nl> + checkingRouters = _routerDao . listByNetworkAndRole(routerGuestNtwkId, Role . VIRTUAL_ROUTER) ; <nl> + } <nl> + recoverRedundantNetwork(masterRouter, r) ; <nl> + recoverRedundantNetwork(backupRouter, r) ; <nl> - if (masterRouter != null && backupRouter != null) { <nl> - if (_nwHelper . getRealPriority(masterRouter) DEFAULT_DELTA <nl>",fix checksanity we do not need to check the priority anymore,1
d93935caacb46dae183d21a260a112d43cf88caf,2015-03-31 10:38:33+02:00,mmm CitrixResourceBase . java <nl> ppp CitrixResourceBase . java <nl> - import com . cloud . agent . api . OvsSetTagAndFlowAnswer ; <nl> - import com . cloud . agent . api . OvsSetTagAndFlowCommand ; <nl> - import com . cloud . network . Networks . IsolationType ; <nl> - import com . cloud . vm . VirtualMachine ; <nl> - import com . xensource . xenapi . VGPU ; <nl> - return powerState == null ?  PowerState . PowerUnknown : powerState ; <nl> + return powerState == null ? PowerState . PowerUnknown : powerState ; <nl> - <nl>,"we do not need the start , stop , reboot command in the citrixrebaseclaas anymore",1
5506ec993689f7283f5f9e8cf9c87c6857cba7e2,2015-04-15 08:16:33-07:00,"mmm ClusteredAgentManagerImpl . java <nl> ppp ClusteredAgentManagerImpl . java <nl> - try (SocketChannel ch1 = SocketChannel . open(new InetSocketAddress(addr, Port . value())) ;){ <nl> + try { <nl> + SocketChannel ch1 = SocketChannel . open(new InetSocketAddress(addr, Port . value())) ; <nl> - _peers . put(peerName, ch) ; <nl> + _peers . put(peerName, ch1) ; <nl> + return ch1 ; <nl>",do not autoclose new mgmt server peer connection as soon a they open,1
d6232cb3d18fd6e1da51ba317903076a490bd4c1,2015-11-18 08:40:36+01:00,"mmm ManagementServerImpl . java <nl> ppp ManagementServerImpl . java <nl> - ssc . addOr(""vlanId"", SearchCriteria . Op . LIKE, ""%"" + keyword + ""%"") ; <nl> + ssc . addOr(""vlanTag"", SearchCriteria . Op . LIKE, ""%"" keyword ""%"") ; <nl> - sc . addAnd(""vlanId"", SearchCriteria . Op . SC, ssc) ; <nl> + sc . addAnd(""vlanTag"", SearchCriteria . Op . SC, ssc) ; <nl>",can not list vlanipranges by keyword,1
4bc6bcfa9ad5bedc9ea39c09f46ad69624f0f27d,2015-11-23 19:18:35+01:00,"mmm JuniperSRXExternalFirewallElement . java <nl> ppp JuniperSRXExternalFirewallElement . java <nl> - RemoteAccessVPNServiceProvider . class}) <nl> mmm NuageVspElement . java <nl> ppp NuageVspElement . java <nl> - DhcpServiceProvider . class, VpcProvider . class, NetworkACLServiceProvider . class}) <nl>",regression fix ; half the annotation be remove at several location,1
453333cc67ecc490d432383efc36c4d9b9544f2c,2015-11-26 09:08:40+01:00,mmm NuageVspManagerImpl . java <nl> ppp NuageVspManagerImpl . java <nl> + import com . cloud . util . NuageVspUtil ; <nl> - import org . apache . commons . codec . binary . Base64 ; <nl> - String cmsUserPasswordBase64 = org . apache . commons . codec . binary . StringUtils . newStringUtf8(Base64 . encodeBase64(cmd . getPassword() . getBytes())) ; <nl> + String cmsUserPasswordBase64 = NuageVspUtil . encodePassword(cmd . getPassword()) ; <nl> - String encodedNewPassword = org . apache . commons . codec . binary . StringUtils . newStringUtf8(Base64 . encodeBase64(command . getPassword() . getBytes())) ; <nl> + String <nl>,fix nuagevsp error for build-master-slowbuild,1
1e67a5d2c89009daabdcded86e9844824ec7d1ed,2015-11-27 13:48:18-05:00,mmm NfsSecondaryStorageResource . java <nl> ppp NfsSecondaryStorageResource . java <nl> - if (!downloadDirectory . mkdirs()) { <nl> - return new CopyCmdAnswer("Failed to create download directory " + downloadPath) ; <nl> + if (downloadDirectory . exists()) { <nl> + s_logger . debug("Directory " downloadPath " already exists") ; <nl> + } else { <nl> + if (!downloadDirectory . mkdirs()) { <nl> + final String errMsg = "Unable to create directory " downloadPath " to copy from Swift to cache . " ; <nl> + s_logger . error(errMsg) ; <nl> + return new CopyCmdAnswer(errMsg) ; <nl> + } <nl>,fix secondary storage not work with swift,1
cfe14462a3380c053ad174e0016632e6024e3573,2015-12-05 15:52:22+01:00,"mmm NiciraRestClient . java <nl> ppp NiciraRestClient . java <nl> - return handleSuccessResponse(response) ; <nl> + return handleSuccessResponse(request, response) ; <nl> - private CloseableHttpResponse handleSuccessResponse(final CloseableHttpResponse response) { <nl> - counter . resetExecutionCounter() ; <nl> + private CloseableHttpResponse handleSuccessResponse(final HttpUriRequest request, final CloseableHttpResponse response) { <nl> + if (!request . getURI() . getPath() . contains(loginUrl)) { <nl> + counter . resetExecutionCounter() ; <nl> + } <nl>",fix nsx rest client to not reset execution counter after a login,1
78fbaf7d4da995c0cdb0ae84606e66f72c6cf289,2016-01-11 09:57:35+01:00,"mmm NicProfileHelperImpl . java <nl> ppp NicProfileHelperImpl . java <nl> - final Nic privateNic = _nicDao . findByIp4AddressAndNetworkId(ipVO . getIpAddress(), privateNetwork . getId()) ; <nl> + Nic privateNic = null ; <nl> + if (ipVO != null) { <nl> + privateNic = _nicDao . findByIp4AddressAndNetworkId(ipVO . getIpAddress(), privateNetwork . getId()) ; <nl> + } <nl>",nullpointer exception in nicprofilehelperimpl,1
c35c4164d94cd6c1878b841080e96ac073342ddd,2016-01-18 09:24:32+01:00,mmm ExecutionCounter . java <nl> ppp ExecutionCounter . java <nl> - import java . util . concurrent . atomic . AtomicInteger ; <nl> - private final AtomicInteger executionCount = new AtomicInteger(0) ; <nl> + private final ThreadLocal<Integer> executionCount ; <nl> + executionCount = new ThreadLocal<Integer>() { <nl> + @Override <nl> + protected Integer initialValue() { <nl> + return new Integer(0) ; <nl> + } <nl> + } ; <nl> - executionCount . incrementAndGet() ; <nl> + executionCount . set(executionCount . get() 1) ; <nl> mmm ExecutionCounterTest . java <nl> ppp ExecutionCounterTest . java <nl> + import java . util <nl>,fix execution counter to support separate count per thread,1
d0453fc2962c325a4ad8a5d43c337e4c633dc6ac,2016-05-27 08:26:09+02:00,"mmm EngineHostVO . java <nl> ppp EngineHostVO . java <nl> - @Column(name = ""url"", length = 2048) <nl> + @Column(name = ""url"") <nl> mmm HostVO . java <nl> ppp HostVO . java <nl> - @Column(name = ""url"", length = 2048) <nl> + @Column(name = ""url"") <nl>",not need on host table,0
c9567495aba6894b80f95917a220dc3b40f33cf1,2016-05-31 14:39:43+02:00,new file <nl> ppp DriverLoader . java <nl> + package com . cloud . utils . db ; <nl> + import com . cloud . utils . exception . CloudRuntimeException ; <nl> + import org . apache . log4j . Logger ; <nl> + import java . util . ArrayList ; <nl> + import java . util . HashMap ; <nl> + import java . util . List ; <nl> + import java . util . Map ; <nl> + public class DriverLoader { <nl> + private static final Logger LOGGER = Logger . getLogger(DriverLoader . class . getName()) <nl>,make sure that the db driver be load before initiate connection,1
ba9dcba16df604d8d4b84084bc24c04cc27fb9ac,2016-09-12 15:24:47+05:30,"mmm NetworkService . java <nl> ppp NetworkService . java <nl> - Boolean changeCidr, String guestVmCidr, Boolean displayNetwork, String newUUID, boolean updateInSequence) ; <nl> + Boolean changeCidr, String guestVmCidr, Boolean displayNetwork, String newUUID, boolean updateInSequence, boolean forced) ; <nl> mmm RemoteAccessVpnService . java <nl> ppp RemoteAccessVpnService . java <nl> - boolean destroyRemoteAccessVpnForIp(long ipId, Account caller) throws ResourceUnavailableException ; <nl> + boolean destroyRemoteAccessVpnForIp(long ipId, Account caller, boolean forceCleanup) throws ResourceUnavailableException ; <nl> mmm UpdateNetworkCmdByAdmin . java <nl> ppp UpdateNetworkCmdByAdmin . java <nl> - callerUser, getNetworkDomain(), getNetworkOfferingId(), getChangeCidr(), getGuestVmCidr(), getDisplayNetwork(), getCustomId(), getUpdateInSequence()) ; <nl> + callerUser, getNetworkDomain(), getNetworkOfferingId(), getChangeCidr(), getGuestVmCidr(), getDisplayNetwork(), getCustomId(), <nl>",do not update network if one of the router 's state be unknown,1
97b6b117e1448115613318aef1679ac00c93375e,2016-12-05 14:25:27+05:30,"mmm CapacityDaoImpl . java <nl> ppp CapacityDaoImpl . java <nl> - import java . util . Map . Entry ; <nl> - finalQuery . append(LIST_CAPACITY_GROUP_BY_CLUSTER_TYPE_PART2) ; <nl> + finalQuery . append(LIST_CAPACITY_GROUP_BY_ZONE_TYPE_PART2) ; <nl> - finalQuery . append(LIST_CAPACITY_GROUP_BY_CLUSTER_TYPE_PART2) ; <nl> + finalQuery . append(LIST_CAPACITY_GROUP_BY_POD_TYPE_PART2) ; <nl> - HashMap<Integer, SummedCapacity> capacityMap = new HashMap<Integer, SummedCapacity>() ; <nl> - for (SummedCapacity result: results) { <nl> - if (capacityMap . containsKey(result . getCapacityType() . intValue())) { <nl> - SummedCapacity tempCapacity = capacityMap . get(result . getCapacityType() . intValue()) ; <nl> - tempCapacity . setUsedCapacity(tempCapacity . getUsedCapacity()+result . getUsedCapacity()) ; <nl> - tempCapacity . <nl>",the system capacity be not get calculate correctly,1
6749785caba78a9379e94bf3aaf0c1fbc44c5445,2016-12-07 14:33:24+05:30,"mmm IpAssociationConfigItem . java <nl> ppp IpAssociationConfigItem . java <nl> - ip . getVifMacAddress(), ip . getNicDevId(), ip . isNewNic()) ; <nl> + ip . getVifMacAddress(), ip . getNicDevId(), ip . isNewNic(), ip . getTrafficType() . toString()) ; <nl> - } <nl> + } <nl> mmm IpAddress . java <nl> ppp IpAddress . java <nl> + private String nwType ; <nl> - Integer nicDevId, boolean newNic) { <nl> + Integer nicDevId, boolean newNic, String nwType) { <nl> + this . nwType = nwType ; <nl> mmm ConfigHelperTest . java <nl> ppp ConfigHelperTest . java <nl> + import com . <nl>",virtual router do not handle multiple public interfaces correctly,1
cc06c5189a377fc6bc4b7e8bbed56e9058588863,2017-02-13 15:07:06+05:30,"mmm TemplateAdapterBase . java <nl> ppp TemplateAdapterBase . java <nl> - return prepare(false, CallContext . current() . getCallingUserId(), cmd . getTemplateName(), cmd . getDisplayText(), cmd . getBits(), cmd . isPasswordEnabled(), <nl> - cmd . getRequiresHvm(), cmd . getUrl(), cmd . isPublic(), cmd . isFeatured(), cmd . isExtractable(), cmd . getFormat(), cmd . getOsTypeId(), zoneId, <nl> - HypervisorType . getType(cmd . getHypervisor()), cmd . getChecksum(), true, cmd . getTemplateTag(), owner, cmd . getDetails(), cmd . isSshKeyEnabled(), null, <nl> - cmd . isDynamicallyScalable(), isRouting ? TemplateType . ROUTING : TemplateType . USER) ; <nl> + HypervisorType hypervisorType = HypervisorType . getType(cmd <nl>",hypervisor parameter check be not perform for,0
91bfedd2c7ed7db86a5b1167bb955977da0f1817,2017-02-21 14:31:39-06:00,"mmm VirtualMachineManagerImpl . java <nl> ppp VirtualMachineManagerImpl . java <nl> - final Step previousStep = work . getStep() ; <nl> - _workDao . updateStep(work, step) ; <nl> + Step previousStep = null ; <nl> + if (work != null) { <nl> + previousStep = work . getStep() ; <nl> + _workDao . updateStep(work, step) ; <nl> + } <nl> - if (!result) { <nl> + if (!result && work != null) { <nl> - if (s_logger . isDebugEnabled()) { <nl> + if (s_logger . isDebugEnabled() && work != null) { <nl>",fix npe in virtualmachinemanagerimpl.java,1
58c4d4b84a0712f0b8f16cb2d7d5473bc85d985d,2016-05-04 13:52:26+02:00,"mmm AbstractSootFieldRef . java <nl> ppp AbstractSootFieldRef . java <nl> - SootField clField = cl . getFieldUnsafe(name, type) ; <nl> - if (clField != null) { <nl> - return checkStatic(clField) ; <nl> - } <nl> - else if (Scene . v() . allowsPhantomRefs() && cl . isPhantom()) { <nl> - SootField f = new SootField(name, type, isStatic()?Modifier . STATIC:0) ; <nl> - f . setPhantom(true) ; <nl> - synchronized (cl) { <nl> - clField = cl . getFieldUnsafe(name, type) ; <nl> - if (clField != null) <nl> - return checkStatic(clField) ; <nl> - else { <nl> - cl . <nl>",fix a synchronization issue when two thread resolve sootfieldrefs with phantom field this could lead to a concurrentmodificationexception,1
64b85ac16d593bd2d45bf667a729a57fda258910,2016-06-02 17:12:53+02:00,mmm ClassSource . java <nl> ppp ClassSource . java <nl> + public void close() { <nl> + } <nl> mmm CoffiClassSource . java <nl> ppp CoffiClassSource . java <nl> + @Override <nl> + public void close() { <nl> + try { <nl> + if (classFile != null) <nl> + classFile . close() ; <nl> + } <nl> + catch (IOException e) { <nl> + e . printStackTrace() ; <nl> + } <nl> + } <nl> mmm JimpleClassSource . java <nl> ppp JimpleClassSource . java <nl> + @Override <nl> + public void close() { <nl> + try { <nl> + <nl>,fix a memory issue : stream be keep open infinitely,1
ace384fdd767de5470d5918a779cadc193f22f7a,2016-06-15 19:04:45+02:00,"mmm DexPrinter . java <nl> ppp DexPrinter . java <nl> - ZipOutputStream outputApk ; <nl> + ZipOutputStream outputApk = null ; <nl> - ZipFile original = new ZipFile(originalApk) ; <nl> - copyAllButClassesDexAndSigFiles(original, outputApk) ; <nl> - original . close() ; <nl> + ZipFile original = null ; <nl> + try { <nl> + original = new ZipFile(originalApk) ; <nl> + copyAllButClassesDexAndSigFiles(original, outputApk) ; <nl> + } <nl> + finally { <nl> + if (original != null) <nl> + original . close() ; <nl> + } <nl> - outputApk . close() ; <nl> + if (outputApk != null) <nl> + <nl>",make sure that filea be actually close after write out the apk,1
bc463ad07edb9bb60be1c5f70f41077d7fce6231,2016-08-19 13:17:09+02:00,mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> - if( !sootcls . isApplicationClass() ) { <nl> + if( !sootcls . isApplicationClass() && !sootcls . isPhantom() ) { <nl>,yet another fix for handle phantom class during callgraph construction,1
4ec07bd413f8b128e61b2b71175bdff47cb0716f,2016-08-25 11:36:27+02:00,"mmm AbstractSootFieldRef . java <nl> ppp AbstractSootFieldRef . java <nl> - synchronized (cl) { <nl> - SootField clField = cl . getFieldUnsafe(name, type) ; <nl> - if (clField != null) { <nl> - return checkStatic(clField) ; <nl> - } <nl> - else if (Scene . v() . allowsPhantomRefs() && cl . isPhantom()) { <nl> + SootField clField = cl . getFieldUnsafe(name, type) ; <nl> + if (clField != null) { <nl> + return checkStatic(clField) ; <nl> + } <nl> + else if (Scene . v() . allowsPhantomRefs() && cl . isPhantom()) { <nl> + synchronized (cl) { <nl> + <nl>",now that we have a thread-safe iterator in chain we can be more aggressive when resolve field,1
4fd8a69d245b0ac8ebd4a2250ec7cef4123287b6,2016-10-09 20:32:36-04:00,"mmm ClassSource . java <nl> ppp ClassSource . java <nl> + if(className == null) <nl> + throw new IllegalStateException(""Error: The class name must not be null . "") ; <nl> mmm CoffiClassProvider . java <nl> ppp CoffiClassProvider . java <nl> - return new CoffiClassSource(className, file . inputStream(), file . inputFile() . getAbsolutePath(), <nl> - file . zipFile == null ? null : file . zipFile . getName()) ; <nl> + return new CoffiClassSource(className, file) ; <nl> mmm CoffiClassSource . java <nl> ppp CoffiClassSource . java <nl> + import soot . SourceLocator . FoundFile ; <nl> - protected final InputStream <nl>",ensure source file in archive close their archive when the source file input stream be close before they would just remain open and become a resource leak,1
a7d726f43d7ee7a0d1daec7182a7f2d9802a5fae,2016-10-12 13:50:56+02:00,"mmm JavaClassProvider . java <nl> ppp JavaClassProvider . java <nl> - String javaClassName = SourceLocator . v() . getSourceForClass(className) ; <nl> - String fileName = javaClassName . replace(' . ', '/') + "" . java"" ; <nl> - SourceLocator . FoundFile file =  <nl> - SourceLocator . v() . lookupInClassPath(fileName) ; <nl> - if( file == null) { <nl> - if (checkAgain) { <nl> - fileName = className . replace(' . ', '/') + "" . java"" ; <nl> - file = SourceLocator . v() . lookupInClassPath(fileName) ; <nl> - } <nl> - } <nl> - if (file <nl>",fix a resource leak,1
aa7d795c0387c34a5a34c8b8c9e49fa68296224d,2016-10-26 12:27:50+02:00,"mmm DexAnnotation . java <nl> ppp DexAnnotation . java <nl> + if (Util . isByteCodeClassName(classType)) <nl> + outerClass += "" ;"" ; <nl> - outerClass = classType . substring(0, classType . lastIndexOf(""$"")) ; <nl> + outerClass = classType . substring(0, classType . lastIndexOf(""$"")) "" ;"" ; <nl> + if (Util . isByteCodeClassName(classType)) <nl> + outerClass += "" ;"" ; <nl>",the outer class parser must not violate the class specification syntax,1
28380760cb792b3bf0313325bb9ed15eed6df148,2017-01-02 15:38:27+01:00,"mmm DexClassLoader . java <nl> ppp DexClassLoader . java <nl> - String inner = ict . getInnerClass() . replaceAll(""/"", "" . "") ; <nl> - if (!inner . equals(sc . getName())) { <nl> - innerTagIt . remove() ; <nl> - continue ; <nl> - } <nl> + if (outer . equals(sc . getName())) <nl> + continue ; <nl> + String inner = ict . getInnerClass() . replaceAll(""/"", "" . "") ; <nl> + if (!inner . equals(sc . getName())) { <nl> + innerTagIt . remove() ; <nl> + continue ; <nl> + } <nl> - if (ica . getSpecs() <nl>",innerclass annotation be remove if they be already associate with the out class instead of just be keep as-is in such a case,1
5afe0f02ce45da76cac84d0ca3d37836644e0524,2017-01-06 09:53:33+01:00,"mmm SootMethod . java <nl> ppp SootMethod . java <nl> - if (ms == null) <nl> - throw new RuntimeException(""No method source set for method "" + this . getSignature()) ; <nl> - return ms . getBody(this, phaseName) ; <nl> + MethodSource ms = this . ms ; <nl> + if (this . activeBody == null) { <nl> + if (ms == null) <nl> + throw new RuntimeException(""No method source set for method "" this . getSignature()) ; <nl> + return ms . getBody(this, phaseName) ; <nl> + } <nl> + else <nl> + return this . activeBody ; <nl>",hopefully fix a threading issue,0
cf9a02dea915e64e53f16f57a52f077e416b13e7,2017-01-20 11:02:44+01:00,"mmm StringNumberer . java <nl> ppp StringNumberer . java <nl> - import heros . ThreadSafe ; <nl> + import java . util . HashMap ; <nl> + import java . util . Map ; <nl> - import java . util . concurrent . ConcurrentHashMap ; <nl> - import java . util . concurrent . ConcurrentMap ; <nl> + import heros . ThreadSafe ; <nl> - ConcurrentMap<String, NumberedString> stringToNumbered = <nl> - new ConcurrentHashMap<String, NumberedString>(1024) ; <nl> + private Map<String, NumberedString> stringToNumbered = <nl> + new HashMap<String, NumberedString>(1024) ; <nl> - public NumberedString findOrAdd( String s ) { <nl> + <nl>",fix a threading issue,0
52d29a84589cbfc4c835ee440ed265512a6cf226,2017-01-24 14:32:20+01:00,mmm ExprVisitor . java <nl> ppp ExprVisitor . java <nl> + import soot . SootMethod ; <nl> - return sie . getMethod() . isConstructor() ; <nl> + return sie . getMethodRef() . name() . equals(SootMethod . constructorName) ; <nl>,no need to resolve a method just to know whether it be a constructor of not,1
ad5ad1736933eefcd9a2aa54e90ada0016533edc,2017-02-09 19:27:28+01:00,mmm PackManager . java <nl> ppp PackManager . java <nl> - if (executor . getException() != null) <nl> - throw new RuntimeException(executor . getException()) ; <nl> + if (executor . getException() != null) { <nl> + if (executor . getException() instanceof RuntimeException) <nl> + throw (RuntimeException) executor . getException() ; <nl> + else <nl> + throw new RuntimeException(executor . getException()) ; <nl> + } <nl>,fix for the fix : correct exception type,1
f7a8f7e74820b91ac77ceff72f4dcaefdc271701,2017-03-06 18:29:32+01:00,mmm TrapTightener . java <nl> ppp TrapTightener . java <nl> - if (isCatchAll && unitsWithMonitor . contains(u)) <nl> + if (isCatchAll && unitsWithMonitor . contains(u)) { <nl> + lastTrappedThrower = u ; <nl> + } <nl>,if we need to keep a trap because of a monitor we take the last statement a the most precise end statement,1
288329daa7ecad4a77bfc171c2ce807c5c6fb483,2017-05-23 17:59:32+02:00,mmm Util . java <nl> ppp Util . java <nl> - Type[] ret = cache . get(descriptor) ; <nl> + Type[] ret = null ; <nl> + synchronized(cache) { <nl> + ret = cache . get(descriptor) ; <nl> + } <nl> - conversionTypes . clear() ; <nl> + List<Type> conversionTypes = new ArrayList<Type>() ; <nl> + synchronized(cache) { <nl> + } <nl>,fix synchronization bug bug trigger a 'java.lang.runtimeexception : stack underrun ' exception,1
71c37d12b1364e67cbbd136beb9e6b4b7e2f10a9,2017-06-30 17:10:20+02:00,"mmm DexPrinter . java <nl> ppp DexPrinter . java <nl> + import soot . SootFieldRef ; <nl> + protected static BuilderFieldReference toFieldReference(SootFieldRef ref, DexBuilder belongingDexFile) { <nl> + FieldReference fieldRef = new ImmutableFieldReference( <nl> + SootToDexUtils . getDexClassName(ref . declaringClass() . getName()), ref . name(), <nl> + SootToDexUtils . getDexTypeDescriptor(ref . type())) ; <nl> + return belongingDexFile . internFieldReference(fieldRef) ; <nl> + } <nl> mmm StmtVisitor . java <nl> ppp StmtVisitor . java <nl> - import soot . SootField ; <nl> - private Map<Insn, Stmt> insnStmtMap = new HashMap<Insn, Stmt>() ; <nl> - private Map<Instruction, LocalRegisterAssignmentInformation> instructionRegisterMap = new <nl>",performance improvement : do not resolve field during dex printing,1
8fb074067f26bb0cbaaec0b1702889f6bc1bd3b1,2017-07-13 13:41:54+02:00,"mmm MethodBuilder . java <nl> ppp MethodBuilder . java <nl> - Type rt = AsmUtil . toJimpleRefType(t, Optional . fromNullable(this . scb . getKlass() . getModuleInformation() . getModuleName())) ; <nl> + Type rt = AsmUtil . toJimpleRefType(t, Optional . fromNullable(this . scb . getKlass() . moduleName)) ; <nl>",fix nullpointer exception in classpath mode,1
ac61cb7007c8754df1a12bf22627271937ffcca1,2017-08-02 21:26:12+02:00,mmm AbstractASMBackend . java <nl> ppp AbstractASMBackend . java <nl> + if (sm . isPhantom()) <nl> + continue ; <nl> + if (f . isPhantom()) <nl> + continue ; <nl>,do not writeout phantom field and method,1
e867c06a8cd1e3d88ba7b4560d24fdbdef4bd5ce,2017-09-27 15:55:35-05:00,mmm PackManager . java <nl> ppp PackManager . java <nl> - if (executor . getException() != null) <nl> - throw (RuntimeException) executor . getException() ; <nl> + if (executor . getException() != null) { <nl> + if (executor . getException() instanceof RuntimeException) <nl> + throw (RuntimeException) executor . getException() ; <nl> + else <nl> + throw new RuntimeException(executor . getException()) ; <nl> + } <nl> - if (executor . getException() != null) <nl> - throw (RuntimeException) executor . getException() ; <nl> + if (executor . getException() != null) { <nl> + if (executor . getException() instanceof RuntimeException) <nl> + <nl>,fix for potential class cast exception,1
f6b48b6352ca7594bb777a6268f891821a9191ba,2017-11-03 14:23:43+01:00,mmm AbstractMultiMap . java <nl> ppp AbstractMultiMap . java <nl> + if (valueIterator == null) <nl> + return ; <nl> - keyIterator = null ; <nl> + valueIterator = null ; <nl>,fix potential npe in abstractmultimap which may occur when a value be delete via the iterator and no value be leave for the corresponding key,1
14b5c625486833ba1de7d659f55da0724ebf8446,2017-11-09 13:26:07+01:00,"mmm DexFileProvider . java <nl> ppp DexFileProvider . java <nl> - G . v() . out . println(""WARNING: Multiple dex files detected, only processing '"" + entryName + ""' .  Use '-process-multiple-dex' option to process them all . "") ; <nl> + if (dexFileCount > 1) <nl> + G . v() . out . println(""WARNING: Multiple dex files detected, only processing '"" entryName ""' .  Use '-process-multiple-dex' option to process them all . "") ; <nl>",fix incorrect warn that multiple dex 's where detect when there actually be just one and `` -process-multiple-dex '' option be not set,1
b5853471452a61bf5640b4d2ec38bc51eb77610a,2018-01-03 09:36:40+01:00,mmm FieldRefValidator . java <nl> ppp FieldRefValidator . java <nl> - if (!field . isStatic() && !field . isPhantom()) { <nl> + else if (!field . isStatic() && !field . isPhantom()) { <nl> - if (field . isStatic() && !field . isPhantom()) { <nl> + else if (field . isStatic() && !field . isPhantom()) { <nl>,fix potential npe,1
7027ee6f49d3213accba6952677b248fe2c2b2e1,2018-02-06 16:00:37+03:00,mmm CollectConstants . java <nl> ppp CollectConstants . java <nl> - import java . util . ArrayList ; <nl> - import java . util . Collections ; <nl> - import java . util . HashMap ; <nl> - import java . util . Iterator ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl> - import soot . G ; <nl> + import soot . Hierarchy ; <nl> + import soot . RefType ; <nl> + import soot . jbco . util . BodyBuilder ; <nl> + import soot <nl>,collectconstants should not extract classconstant of class that be not visible in target class which we add this constant,1
6ecb91fa63bd5a9276246f512606bfe4f749fd67,2018-02-12 14:55:47+01:00,mmm CheckEscapingValidator . java <nl> ppp CheckEscapingValidator . java <nl> - import soot . SootMethod ; <nl> + import soot . SootMethodRef ; <nl> + import soot . Type ; <nl> - SootMethod sm = iexpr . getMethod() ; <nl> - if (sm . getName() . contains("'") <nl> - || sm . getDeclaringClass() . getName() . contains("'")) <nl> + SootMethodRef ref = iexpr . getMethodRef() ; <nl> + if (ref . name() . contains("'") || ref . declaringClass() . getName() . contains("'")) <nl> - for (int i = 0 ; i < sm . getParameterCount() ; i++) <nl> - <nl>,do not resolve method during validation this can change the scene and violate the reasonable assumption that validators be readonly operation,1
a6c1d5967087fed812e1e19365190ba147eed344,2018-03-07 12:13:27+01:00,mmm SootMethodRefImpl . java <nl> ppp SootMethodRefImpl . java <nl> - import org . slf4j . Logger ; <nl> - import org . slf4j . LoggerFactory ; <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> - body . insertIdentityStmts() ; <nl> + body . insertIdentityStmts(declaringClass) ; <nl> mmm JimpleBody . java <nl> ppp JimpleBody . java <nl> + import soot . PatchingChain ; <nl> + import soot . SootClass ; <nl> + import soot . util . Chain ; <nl> + @Override <nl> + @Override <nl> + @Override <nl>,fix createunresolveerrormethod which use insertidentitystmts on a method which have not yet be add,1
96de7f292d87f6fde975ced60b4fd860225df615,2018-05-09 13:48:40+02:00,"mmm GeomPointsTo . java <nl> ppp GeomPointsTo . java <nl> - if (vis_cg[t] == 0){ <nl> + if (vis_cg[t] == 0) { <nl> - }else{ <nl> + } else { <nl> - if (j != i // This is not a self-loop, and a self-loop is treated specially in the initial encoding phase <nl> + if (j != i // This is not a self-loop, and a self-loop is treated specially in the initial <nl>",fix format issue cause by pull request builder not enforce guideline,1
b23570cc5fcb31c80c25946844dfd2d8e6d01da0,2018-06-07 19:25:56+02:00,"mmm SootMethodRefImpl . java <nl> ppp SootMethodRefImpl . java <nl> - public SootMethodRefImpl(SootClass declaringClass, String name, List<Type> parameterTypes, Type returnType, boolean isStatic) { <nl> + public SootMethodRefImpl(SootClass declaringClass, String name, List<Type> parameterTypes, Type returnType, <nl> + boolean isStatic) { <nl> - super(""Class "" + declaringClass + "" doesn't have method "" + name + ""("" + (parameterTypes == null ? """" : parameterTypes) + "")"" + "" : "" <nl> - + returnType + "" ; failed to resolve in superclasses and interfaces"") ; <nl> + super(""Class "" declaringClass "" doesn't have method "" name ""("" (parameterTypes == null <nl>",fix a formatting problem,1
77bee2188885bd9d742a2bce05262ebd5c3c2ca8,2018-06-20 17:21:19+02:00,mmm AbstractSootFieldRef . java <nl> ppp AbstractSootFieldRef . java <nl> - if (Options . v() . wrong_staticness() == Options . wrong_staticness_fail <nl> - || Options . v() . wrong_staticness() == Options . wrong_staticness_fixstrict) { <nl> - if (ret . isStatic() != isStatic() && !ret . isPhantom()) { <nl> - throw new ResolutionFailedException("Resolved " + this + " to " + ret + " which has wrong static-ness") ; <nl> - } <nl> + if ((Options . v() . wrong_staticness() == Options . wrong_staticness_fail <nl> + || Options . v() . wrong_staticness() == Options . wrong_staticness_fixstrict) <nl> + && ret <nl>,fix problem with `` fixstrict '' for the `` wrong staticness '' option,1
12ab8b7e20784562e8f4252a8fcbb2ccf5aaaa39,2018-06-25 14:04:35+02:00,"mmm DexClassProvider . java <nl> ppp DexClassProvider . java <nl> - for (DexFileProvider . DexContainer container : DexFileProvider . v() . getDexFromSource(new File(path))) { <nl> - for (String className : classesOfDex(container . getBase())) { <nl> - if (!index . containsKey(className)) { <nl> - index . put(className, container . getFilePath()) ; <nl> - } else if (Options . v() . verbose()) { <nl> - logger . debug("""" + String . format( <nl> - ""Warning: Duplicate of class '%s' found in dex file '%s' from source '%s' .  Omitting class . "", className, <nl> - container . getDexName(), container . <nl>",do not try to load dex file that do not exist,1
98a8f9de6c3f0c0a582bac821ef8d0da8541150a,2018-07-11 09:51:22+02:00,mmm FastHierarchy . java <nl> ppp FastHierarchy . java <nl> + import java . util . stream . Stream ; <nl> - for (Iterator<SootClass> it = impl . iterator() ; it . hasNext() ;) { <nl> - parentInterval = classToInterval . get(it . next()) ; <nl> - if (parentInterval != null && parentInterval . isSubrange(childInterval)) { <nl> - return true ; <nl> - } <nl> - } <nl> - return false ; <nl> + Stream<SootClass> stream = (impl . size() > 1000) ? impl . parallelStream() : impl . stream() ; <nl> + return stream . anyMatch(c -> { <nl>,callgraph generation optimize,1
c66bf787d0653b2052c567811cbd1809aeda43c9,2018-07-11 11:37:08+02:00,mmm ArraySparseSet . java <nl> ppp ArraySparseSet . java <nl> - int lastIdx = 0 ; <nl> + int nextIdx = 0 ; <nl> - return lastIdx < numElements ; <nl> + return nextIdx < numElements ; <nl> - return elements[lastIdx++] ; <nl> + return elements[nextIdx++] ; <nl> - ArraySparseSet . this . remove(lastIdx) ; <nl> - lastIdx-- ; <nl> + if (nextIdx == 0) { <nl> + throw new IllegalStateException("'next' has not been called yet . ") ; <nl> + } <nl> + ArraySparseSet . this . remove(nextIdx - 1) ; <nl> + nextIdx-- ; <nl> mmm ArraySparseSetTest <nl>,fix `` remove '' method of arraysparseset,0
464ced961bfb25b47a84a6fbb30805a4b1f77c31,2018-08-13 11:18:18+02:00,mmm SootClass . java <nl> ppp SootClass . java <nl> - f . isDeclared = true ; <nl> - f . declaringClass = this ; <nl> + f . setDeclared(true) ; <nl> + f . setDeclaringClass(this) ; <nl> - f . isDeclared = false ; <nl> + f . setDeclared(false) ; <nl> + f . setDeclaringClass(null) ; <nl> - f . isDeclared = true ; <nl> - f . declaringClass = this ; <nl> + f . setDeclared(true) ; <nl> + f . setDeclaringClass(this) ; <nl> + m . setDeclaringClass(null) ; <nl> mmm SootField . java <nl> ppp SootField <nl>,a number of multi-threaded fix to sootfield and sootmethod,1
1feedc8af1476a62c28d2d18e022b638d1233cbc,2018-08-22 09:43:41+02:00,mmm Hierarchy . java <nl> ppp Hierarchy . java <nl> - if (directSubInterfaces == null || directSubInterfaces . isEmpty()) <nl> + if (directSubInterfaces == null || directSubInterfaces . isEmpty()) { <nl> + } <nl>,fix a style problem,0
6240815c54d0c9d3729310b2709791e056dcd93a,2018-10-03 23:11:22-04:00,"mmm ConstantPoolTest . java <nl> ppp ConstantPoolTest . java <nl> - import com . sun . org . apache . bcel . internal . classfile . ClassFormatException ; <nl> - } catch (ClassFormatException e) { <nl> - logger . error(e . getMessage(), e) ; <nl>",bug fix : classformatexception not find,1
f3232c9e100ad687b61d9e0e31133aebad2aeb7f,2018-11-13 19:27:22+01:00,mmm AbstractJimpleBasedICFG . java <nl> ppp AbstractJimpleBasedICFG . java <nl> - }  <nl> + } <nl> + if (body == null) { <nl> + return Collections . emptyList() ; <nl> + } <nl>,fix an npe,1
0b8bdcb611f7ca0c0ef778df391211e5b03e2edf,2018-12-05 13:39:13+01:00,"mmm FastHierarchy . java <nl> ppp FastHierarchy . java <nl> - if (!interfaceToAllImplementers . containsKey(parent)) { <nl> - for (SootClass subinterface : getAllSubinterfaces(parent)) { <nl> - if (subinterface == parent) { <nl> - continue ; <nl> - } <nl> - interfaceToAllImplementers . putAll(parent, getAllImplementersOfInterface(subinterface)) ; <nl> + Set<SootClass> result = interfaceToAllImplementers . get(parent) ; <nl> + if (result . size() > 0) { <nl> + return result ; <nl> + } <nl> + result = new HashSet<>() ; <nl> + for (SootClass subinterface : getAllSubinterfaces(parent)) { <nl> + if (subinterface == parent) { <nl> + continue ; <nl> - <nl>",thread safety of getallimplementersofinterface ( ) and getallsubinterfaces ( ) fix,1
c62cab9b26f5793c4c8119d0e2ab8477f1e9a3a4,2018-12-20 09:52:22+01:00,"mmm LambdaMetaFactory . java <nl> ppp LambdaMetaFactory . java <nl> + private final Wrapper wrapper ; <nl> + wrapper = new Wrapper() ; <nl> - private static Map<RefType, PrimType> wrapperTypes ; <nl> + private Map<RefType, PrimType> wrapperTypes ; <nl> - private static Map<PrimType, SootMethod> valueOf ; <nl> + private Map<PrimType, SootMethod> valueOf ; <nl> - private static Map<RefType, SootMethod> primitiveValue ; <nl> + private Map<RefType, SootMethod> primitiveValue ; <nl> - static { <nl> + public Wrapper() { <nl> - private static boolean isWrapper(Type t) { <nl> + private boolean isWrapper(Type t) { <nl> - SootMethod valueOfMethod = Wrapper . <nl>",fix wrapper not be rebuild for new soot instance,1
f3e000f17375716a5ebaf9f6e3866a91654ec403,2019-01-10 21:56:55+01:00,"mmm LambdaMetaFactory . java <nl> ppp LambdaMetaFactory . java <nl> + @Override <nl> - if (Scene . v() . getOrMakeFastHierarchy() . canStoreClass(currentClass, calledClass)) <nl> - { <nl> - return Jimple . v() . newSpecialInvokeExpr(args . get(0), methodRef, rest(args)) ; <nl> + if (Scene . v() . getOrMakeFastHierarchy() . canStoreClass(currentClass, calledClass)) { <nl> + return Jimple . v() . newSpecialInvokeExpr(args . get(0), methodRef, rest(args)) ; <nl> - return Jimple . v() . newVirtualInvokeExpr(args . get(0), methodRef, rest(args)) ; <nl> + SootMethod m = implMethod . getMethodRef() . resolve() ; <nl> + if (!m . isPublic()) { <nl> + int mod <nl>",make sure lambda method be public,1
bc273e25fcbcb2ee6c9af91513443c3dd7204f6c,2019-02-15 10:42:44+01:00,"mmm InternalTypingException . java <nl> ppp InternalTypingException . java <nl> - public String toString() { <nl> - return ""Unexpected type "" + this . unexpectedType ; <nl> + public String getMessage() { <nl> + return String . format(""Unexpected type %s (%s)"", unexpectedType, <nl> + unexpectedType == null ? ""-"" : unexpectedType . getClass() . getSimpleName()) ; <nl>",fix : exception message correct always null,1
3898a2e545551e906352404ee3dfc2cc150fc558,2019-03-04 13:20:47+01:00,"mmm DexAnnotation . java <nl> ppp DexAnnotation . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + private static final Logger logger = LoggerFactory . getLogger(DexAnnotation . class) ; <nl> + if (split1 . length < 4) { <nl> + logger . debug(""Invalid or unsupported dalvik EnclosingMethod annotation value: \""{}\"""", e . getValue()) ; <nl> + break ; <nl> + } <nl>",fix : java.lang.arrayindexoutofboundsexception : index 1 out of bound for,1
a8eaa21ca4cb88b54af1bbb50df15b8dab080091,2019-03-21 13:30:38+01:00,mmm SootMethodRefImpl . java <nl> ppp SootMethodRefImpl . java <nl> - boolean treatAsPhantomClass = Options . v() . allow_phantom_refs() && !declaringClass . isInterface() ; <nl> + boolean treatAsPhantomClass = Options . v() . allow_phantom_refs() ; <nl> - treatAsPhantomClass = treatAsPhantomClass || declaringClass . getName() . equals(SootClass . INVOKEDYNAMIC_DUMMY_CLASS_NAME) ; <nl> + if (declaringClass . getName() . equals(SootClass . INVOKEDYNAMIC_DUMMY_CLASS_NAME)) <nl> + treatAsPhantomClass = true ; <nl>,do not treat interface in a special way when resolve method,1
88d4183a74ee1b79c7ee67816d9f9799e867852d,2019-03-21 13:31:48+01:00,mmm PolymorphicMethodRef . java <nl> ppp PolymorphicMethodRef . java <nl> - method = getDeclaringClass() . getMethodByName(getName()) ; <nl> + method = getDeclaringClass() . getMethodByNameUnsafe(getName()) ; <nl> - return null ; <nl> + return super . resolve() ; <nl>,old behavior at resolve method invocation create unresolve error method in case of phantom,1
e793c072e500977096912db5247f89d6c9cc9838,2019-03-25 17:49:32+01:00,mmm AbstractInvokeExpr . java <nl> ppp AbstractInvokeExpr . java <nl> - return argBoxes[index] . getValue() ; <nl> + ValueBox vb = argBoxes[index] ; <nl> + return vb == null ? null : vb . getValue() ; <nl>,fix an npe,1
9e5777475d63bcdf09c985d894edab50761b8cc9,2019-04-10 01:59:19+02:00,mmm ThrowableSet . java <nl> ppp ThrowableSet . java <nl> - private final static SootClass JAVA_LANG_OBJECT_CLASS = Scene . v() . getObjectType() . getSootClass() ; <nl> + private final SootClass JAVA_LANG_OBJECT_CLASS = Scene . v() . getObjectType() . getSootClass() ; <nl>,make sure that reference soot object do not survive g.reset (,1
cdc60d93868381157017d52e6fcc3527158ae6ca,2019-07-18 11:21:30+02:00,mmm PointsToSetInternal . java <nl> ppp PointsToSetInternal . java <nl> + import soot . jimple . toolkits . pointer . FullObjectSet ; <nl> - final PointsToSetInternal o = (PointsToSetInternal) other ; <nl> - return forall(new P2SetVisitor() { <nl> - public void visit(Node n) { <nl> - if (o . contains(n)) { <nl> - returnValue = true ; <nl> + if (other instanceof PointsToSetInternal) { <nl> + final PointsToSetInternal o = (PointsToSetInternal) other ; <nl> + return forall(new P2SetVisitor() { <nl> + public void visit(Node n) { <nl> + if (o . contains(n)) { <nl> + returnValue = true ; <nl>,fix a classcastexception,1
f227b607ad21d5a4437d1e5d37905c3cfd9228ba,2019-09-03 14:20:38+02:00,mmm AbstractASMBackend . java <nl> ppp AbstractASMBackend . java <nl> - String superClass = "java/lang/Object" ; <nl> + String superClass = className . equals("java/lang/Object") ? null : "java/lang/Object" ; <nl>,fix error when asm emit bytecode for java.lang.object,1
7757e385deb44fd1910ff338ef1a164e5a2df920,2019-10-23 11:58:50+02:00,mmm DexNullTransformer . java <nl> ppp DexNullTransformer . java <nl> + import soot . jimple . ClassConstant ; <nl> - } else if (r instanceof StringConstant || r instanceof NewExpr || r instanceof NewArrayExpr) { <nl> + } else if (r instanceof StringConstant || r instanceof NewExpr || r instanceof NewArrayExpr || r instanceof ClassConstant) { <nl>,fix null transformer not recognize object in all case,1
b2d547881c9e1a6434d440078dc0fee911679848,2019-10-28 17:52:29+01:00,"mmm TrapSplitter . java <nl> ppp TrapSplitter . java <nl> - import java . util . Iterator ; <nl> - Iterator<Unit> itUnit = b . getUnits() . iterator(t . getBeginUnit(), t . getEndUnit()) ; <nl> - while (itUnit . hasNext()) { <nl> - Unit unit = itUnit . next() ; <nl> + for (Unit unit = t . getBeginUnit() ; unit != t . getEndUnit() ; unit = b . getUnits() . getSuccOf(unit)) { <nl>",fix a broken optimization that lead to end unit be make part of trap,1
a48dbb8bd9b735b6946114a0c42fae9707ab11a2,2020-01-22 16:16:01+01:00,"mmm AsmMethodSource . java <nl> ppp AsmMethodSource . java <nl> + import org . slf4j . Logger ; <nl> + import org . slf4j . LoggerFactory ; <nl> + import soot . Modifier ; <nl> + import soot . JastAddJ . Frontend ; <nl> + private static final Logger logger = LoggerFactory . getLogger(AsmMethodSource . class) ; <nl> + SootClass result ; <nl> - return ModuleScene . v() . getSootClassUnsafe(className, Optional . fromNullable(this . module)) ; <nl> + result = ModuleScene . v() . getSootClassUnsafe(className, Optional . fromNullable(this . module)) ; <nl> + } else { <nl> + result <nl>",fix in case the class path be not complete,1
c7a9feac6bb9e131cad1b35e87a67f140e3d4e42,2020-02-21 14:15:57+01:00,"mmm LambdaMetaFactory . java <nl> ppp LambdaMetaFactory . java <nl> + import java . util . stream . Stream ; <nl> - public SootMethodRef makeLambdaHelper(List<? extends Value> bootstrapArgs, int tag, String name, <nl> - Type[] invokedType, SootClass enclosingClass) { <nl> - if (bootstrapArgs . size() < 3 || !(bootstrapArgs . get(0) instanceof MethodType) <nl> - || !(bootstrapArgs . get(1) instanceof MethodHandle) || !(bootstrapArgs . get(2) instanceof MethodType) <nl> + public SootMethodRef makeLambdaHelper( <nl> + List<? extends Value> bootstrapArgs, <nl> + int tag, <nl> + String name, <nl> + Type[] invokedType, <nl> + SootClass enclosingClass) { <nl> + if (bootstrapArgs <nl>",fix unresolve type error when not yet see type where use in lambda implementation,1
5791fa64c65990f4bc990fa5f9bfe97476361293,2020-03-09 10:01:03+01:00,mmm DeadAssignmentEliminator . java <nl> ppp DeadAssignmentEliminator . java <nl> - isEssential = !(v instanceof NullConstant && t instanceof RefType) ; <nl> + isEssential = !(v instanceof NullConstant) && t instanceof RefType ; <nl>,primitive cast be not consider essential,1
d67644628b449b31f49279df2dbd6658fd43a70a,2020-03-16 09:25:09-07:00,mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> + if (bType instanceof ArrayType) { <nl> + continue ; <nl> + } <nl> + if (bType instanceof ArrayType) { <nl> + continue ; <nl> + } <nl>,fix classcastexception : arraytype can not be cast to reftype,1
b0e8234b1b005cc069037e7469383c4932e7fd06,2020-04-20 10:08:29+02:00,mmm ConditionalJumpInstruction . java <nl> ppp ConditionalJumpInstruction . java <nl> - if (getTargetInstruction(body) . getUnit() != null) { <nl> + DexlibAbstractInstruction ins = getTargetInstruction(body) ; <nl> + if (ins != null && ins . getUnit() != null) { <nl>,fix an npe,1
c1cbbbdfe282fd59ead0a0a374a977d773c9224d,2020-06-05 15:44:18+02:00,mmm ReachableMethods . java <nl> ppp ReachableMethods . java <nl> - if (!e . isInvalid() && set . contains(e . getSrc())) { <nl> + MethodOrMethodContext srcMethod = e . getSrc() ; <nl> + if (!e . isInvalid() && srcMethod != null && set . contains(srcMethod)) { <nl>,fix for npe,1
c53e51cd406a78ed622d71e0e2082c308b07f4b8,2020-06-05 19:27:00+02:00,mmm ReachableMethods . java <nl> ppp ReachableMethods . java <nl> - MethodOrMethodContext srcMethod = e . getSrc() ; <nl> - if (!e . isInvalid() && srcMethod != null && set . contains(srcMethod)) { <nl> - addMethod(e . getTgt()) ; <nl> + if (e != null) { <nl> + MethodOrMethodContext srcMethod = e . getSrc() ; <nl> + if (!e . isInvalid() && srcMethod != null && set . contains(srcMethod)) { <nl> + addMethod(e . getTgt()) ; <nl> + } <nl>,npe fix again,1
95aaa6debc0fd9a609885546d39c89d6bde4ef14,2020-06-17 19:14:06+08:00,"mmm MethodBuilder . java <nl> ppp MethodBuilder . java <nl> - VisibilityLocalVariableAnnotationTag tag = new VisibilityLocalVariableAnnotationTag(visibleLocalVarAnnotations . size(), <nl> + VisibilityLocalVariableAnnotationTag tag <nl> + = new VisibilityLocalVariableAnnotationTag(invisibleLocalVarAnnotations . size(), <nl>",fix potential npe in methodbuilder.java,1
d7470b98512e263b8205382d1a5d7e1436ab4ed6,2020-07-30 19:03:42-05:00,"mmm MethodDeclarationValidator . java <nl> ppp MethodDeclarationValidator . java <nl> - } <nl> - if (tp instanceof VoidType) { <nl> - exceptions . add(new ValidationException(sm, ""Void parameter types are invalid"")) ; <nl> - } <nl> - if (!tp . isAllowedInFinalCode()) { <nl> - exceptions . add(new ValidationException(sm, ""Parameter type not allowed in final code"")) ; <nl> + } else { <nl> + if (tp instanceof VoidType) { <nl> + exceptions . add(new ValidationException(sm, ""Void parameter types are invalid"")) ; <nl> + } <nl> + if (!tp . isAllowedInFinalCode()) { <nl> + exceptions . add(new ValidationException(sm, ""Parameter type not allowed <nl>",fix a potential npe,1
2623228de612b19a2079e84a66bab9f40905b0d2,2020-07-30 19:38:14-05:00,"mmm NewValidator . java <nl> ppp NewValidator . java <nl> - import java . util . LinkedHashSet ; <nl> - LinkedHashSet<Local> locals = new LinkedHashSet<Local>() ; <nl> - locals . add((Local) assign . getLeftOp()) ; <nl> mmm CheckTypesValidator . java <nl> ppp CheckTypesValidator . java <nl> - checkCopy(astmt, body, exception, leftType, rightType, errorSuffix) ; <nl> + checkCopy(astmt, exception, leftType, rightType, errorSuffix) ; <nl> - checkCopy(stmt, body, exception, called . declaringClass() . getType(), iiexpr . getBase() . getType(), <nl> + checkCopy(stmt, exception, called . declaringClass() . getType(), iiexpr . getBase() . getType(), <nl> - if (called . parameterTypes() . size() <nl>",fix duplicate append and remove useless list,1
b0b556bfe465a5e986603f31eeca8091e454aae2,2020-08-05 14:46:22+08:00,mmm SootClass . java <nl> ppp SootClass . java <nl> - if (name . charAt(0) == '[') { <nl> + if (name . length() > 0 && name . charAt(0) == '[') { <nl>,fix stringindexoutofboundsexception on create a sootclass with empty name,1
4ee0655b9b229f9a31cf093125ebc2019655e85b,2020-09-01 22:07:39-05:00,mmm ExceptionFinder . java <nl> ppp ExceptionFinder . java <nl> + import java . util . ArrayList ; <nl> + @Override <nl> + final IterableSet<ExceptionNode> synchronizedBlockFacts = body . get_SynchronizedBlockFacts() ; <nl> - if (body . get_SynchronizedBlockFacts() . contains(en)) { <nl> - continue ; <nl> - } <nl> + if (!synchronizedBlockFacts . contains(en)) { <nl> - IterableSet<AugmentedStmt> fullBody = new IterableSet<AugmentedStmt>() ; <nl> - for (IterableSet<AugmentedStmt> is : en . get_CatchList()) { <nl> - fullBody . addAll(is) ; <nl> - } <nl> - fullBody . addAll(en . get_TryBody()) ; <nl> + IterableSet<AugmentedStmt> fullBody = new IterableSet<AugmentedStmt>() ; <nl> + <nl>,fix concurrentmodificationexception in exceptionfinder # preprocess method,1
a69bb24bc77ede5e5544d211db0ae9654a83e54a,2020-09-11 20:25:39-05:00,"mmm CytronDominanceFrontier . java <nl> ppp CytronDominanceFrontier . java <nl> + import java . util . HashSet ; <nl> - ArrayList<DominatorNode<N>> dominanceFrontier = new ArrayList<DominatorNode<N>>() ; <nl> + HashSet<DominatorNode<N>> dominanceFrontier = new HashSet<DominatorNode<N>>() ; <nl> - dominanceFrontier . trimToSize() ; // potentially a long-lived object <nl> - nodeToFrontier . put(node, dominanceFrontier) ; <nl> + nodeToFrontier . put(node, new ArrayList<>(dominanceFrontier)) ; <nl>",do not allow duplicate in dominance frontier,1
a7d33eaecab303e64111310acaa8e3be675dad83,2020-12-15 22:16:48-06:00,"mmm HashMutableDirectedGraph . java <nl> ppp HashMutableDirectedGraph . java <nl> - protected Map<N, Set<N>> nodeToPreds ; <nl> - protected Map<N, Set<N>> nodeToSuccs ; <nl> + protected final Map<N, Set<N>> nodeToPreds ; <nl> + protected final Map<N, Set<N>> nodeToSuccs ; <nl> - protected Set<N> heads ; <nl> - protected Set<N> tails ; <nl> + protected final Set<N> heads ; <nl> + protected final Set<N> tails ; <nl> + private static <A, B> Map<A, Set<B>> deepCopy(Map<A, Set<B>> in) { <nl> + HashMap<A, Set<B>> retVal = new HashMap<>(in) ; <nl> + for (Map . Entry<A, Set<B>> e : retVal . entrySet()) { <nl>",ensure edge collection be deep copy when clone,1
e7ecaa96da4b7978ffca56150828fb96c5cd02fe,2020-12-15 22:18:11-06:00,mmm BlockGraph . java <nl> ppp BlockGraph . java <nl> - protected List<Block> mHeads = new ArrayList<Block>() ; <nl> - protected List<Block> mTails = new ArrayList<Block>() ; <nl> + protected List<Block> mHeads ; <nl> + protected List<Block> mTails ; <nl> - Chain<Trap> traps = body . getTraps() ; <nl> - for (Trap trap : traps) { <nl> + for (Trap trap : body . getTraps()) { <nl> - List<Block> blockList = new ArrayList<Block>(leaders . size()) ; <nl> + final ArrayList<Block> blockList = new ArrayList<Block>(leaders . size()) ; <nl> + final ArrayList<Block> headList = new ArrayList<Block>() ; <nl> + final <nl>,optimize arraylist memory footprint for long-lived list,1
95e6d0485642f4a2f0175f067e0a415a5e0cf3d6,2021-02-01 19:10:33+01:00,mmm CallGraph . java <nl> ppp CallGraph . java <nl> + import java . util . HashSet ; <nl> + Set<Edge> edgesToRemove = new HashSet<>() ; <nl> + edgesToRemove . add(e) ; <nl> + if (hasRemoved) <nl> + reader . remove(edgesToRemove) ; <nl>,fix inconsistent edge reader after call to removealledgesoutof (,0
51beef73a803fe1a29c8e008789f8b0ed7279f84,2021-02-19 15:05:03-06:00,"mmm LoadStoreOptimizer . java <nl> ppp LoadStoreOptimizer . java <nl> - clearLocalDefsAndLocalUsesInfo() ; <nl> + assert (contains(storeBlock, unit)) ; <nl> + assert (contains(useBlock, pair . getUnit())) ; <nl> + assert (contains(block, unit)) ; <nl> + assert (contains(block, unit)) ; <nl> + assert (contains(block, aToReplace1)) ; <nl> + private boolean isZeroStackDeltaWithoutClobbering(Unit aFrom, Unit aTo) { <nl> + int h = 0 ; <nl> + for (Iterator<Unit> it = mUnits . iterator(aFrom, aTo) ; it . hasNext() ;) { <nl> + Unit next = it . next() ; <nl> + h += ((Inst) next) . getNetCount() ; <nl> + if (h <nl>",stack delta condition be not strong enough,1
b93ac4ea9de9c199cbad43f1bfda8054632f6e76,2021-03-02 20:06:43+01:00,"mmm PhaseOptionsDialog . java <nl> ppp PhaseOptionsDialog . java <nl> + boolRes = getInput_Optionsallow_cg_errors_widget() . getButton() . getSelection() ; <nl> + defBoolRes = false ; <nl> + if (boolRes != defBoolRes) { <nl> + getConfig() . put(getInput_Optionsallow_cg_errors_widget() . getAlias(), new Boolean(boolRes)) ; <nl> + } <nl> + private BooleanOptionWidget Input_Optionsallow_cg_errors_widget ; <nl> + private void setInput_Optionsallow_cg_errors_widget(BooleanOptionWidget widget) { <nl> + Input_Optionsallow_cg_errors_widget = widget ; <nl> + } <nl> + public BooleanOptionWidget getInput_Optionsallow_cg_errors_widget() { <nl> + return Input_Optionsallow_cg_errors_widget ; <nl> + }	 <nl> + defKey = """"+"" ""+""""+"" ""+""allow-cg-errors"" ; <nl> + defKey = defKey . trim() ; <nl> + <nl>",assure that the assumption about ignore-resolution-errors do not break soot when it be disabled,1
ab1b28a76db5c2212959f7a9f5d3b642979c6842,2021-03-02 20:51:28+01:00,mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> - for (Iterator<VirtualCallSite> siteIt = receiverToSites . get(wrapperObject) . iterator() ; siteIt . hasNext() ;) { <nl> - final VirtualCallSite site = siteIt . next() ; <nl> + List<VirtualCallSite> callSites = new ArrayList<>(receiverToSites . get(wrapperObject)) ; <nl> + for (final VirtualCallSite site : callSites) { <nl>,fix concurrentmodificationexception sort,1
25bf66749638cfcde26884ae77b99c59e58c4a11,2021-03-30 10:50:01-05:00,"mmm FastColorer . java <nl> ppp FastColorer . java <nl> - } <nl> + } <nl> mmm LocalPacker . java <nl> ppp LocalPacker . java <nl> - boolean isUnsplit = PhaseOptions . getBoolean(options, ""unsplit-original-locals"") ; <nl> + final Chain<Local> bodyLocalsRef = body . getLocals() ; <nl> + final int origLocalCount = bodyLocalsRef . size() ; <nl> + if (origLocalCount < 1) { <nl> + return ; <nl> + } <nl> - Map<Local, Type> localToGroup = new DeterministicHashMap<Local, Type>(body . getLocalCount() * 2 + 1, 0 . 7f) ; <nl> - Map<Type, Integer> groupToColorCount = new HashMap<Type, Integer>(body . getLocalCount() <nl>",another minor opt in localpacker also skip it if there be no local,1
fe77b9ca16d07b0fa7bbddf24aa197fe0e70b4da,2021-04-15 16:27:08-05:00,mmm LoadStoreOptimizer . java <nl> ppp LoadStoreOptimizer . java <nl> - Unit next = it . next() ; <nl> - h += ((Inst) next) . getNetCount() ; <nl> - if (h < 0) { // detect clobbering of the top value at 'aFrom' <nl> + Inst next = (Inst) it . next() ; <nl> + if (next . getInCount() > h) { <nl> + return false ; <nl> + } <nl> + h += next . getNetCount() ; <nl> + if (h < 0) { <nl> - logger . debug("inter-block opti occurred " + def + " " + <nl>,fix another bug with overzealous inter-block optimization,1
0f4ccddd9568c458eecf8cfc5cfce8fe9886af5b,2021-04-16 13:51:27-05:00,mmm SootMethod . java <nl> ppp SootMethod . java <nl> - if (this . exceptions == null && !thrownExceptions . isEmpty()) { <nl> + if (thrownExceptions != null && !thrownExceptions . isEmpty()) { <nl>,fix npe when thrownexceptions parameter be null,1
51a3e17e09caef8abddfd07fc6a3c1e8c77cffdd,2021-04-30 09:43:11-05:00,"mmm LoadStoreOptimizer . java <nl> ppp LoadStoreOptimizer . java <nl> - Unit defSucc = defBlock . getSuccOf(def) ; <nl> - if (getDeltaStackHeightFromTo(defSucc, defBlock . getTail()) == 0) { <nl> + if (isZeroStackDeltaWithoutClobbering(defBlock . getSuccOf(def), defBlock . getTail())) { <nl>",fix another case where 0 stack delta be not strong enough,1
611d882d4483b3b50cfa833848e954d5c6d3577b,2021-06-23 13:14:02-05:00,mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> - if (iie instanceof SpecialInvokeExpr && !site . kind() . isFake()) { <nl> + if (iie instanceof SpecialInvokeExpr && !Kind . isFake(site . kind())) { <nl> - site . kind() . isStatic()) ; <nl> + Kind . isStatic(site . kind())) ; <nl>,fix possible npe in onflycallgraphbuilder,1
cb8b51482a59bdbc58aebbd1ff678ef5bfdffa09,2021-07-06 01:35:38+02:00,mmm SootMethod . java <nl> ppp SootMethod . java <nl> - return (this . isStatic() == ref . isStatic()) && this . getDeclaringClass() . equals(ref . getDeclaringClass()) <nl> + SootClass decl = this . getDeclaringClass() ; <nl> + return (this . isStatic() == ref . isStatic()) && decl != null && decl . equals(ref . getDeclaringClass()) <nl>,fix potential npe,1
79e12f25ba7c395f50f7cb7b9b60b9ca869c2979,2021-07-20 09:51:31+02:00,mmm AsmMethodSource . java <nl> ppp AsmMethodSource . java <nl> - import static org . objectweb . asm . Opcodes . * ; <nl> + import static org . objectweb . asm . Opcodes . ACONST_NULL ; <nl> + import static org . objectweb . asm . Opcodes . ALOAD ; <nl> + import static org . objectweb . asm . Opcodes . ANEWARRAY ; <nl> + import static org . objectweb . asm . Opcodes . ARETURN ; <nl> + import static org . objectweb . asm . Opcodes . ARRAYLENGTH ; <nl> + import static org . <nl>,make sure we only change one line,0
4622de42dc8e0a51aae89dde81f544dde9bb76d2,2021-09-08 17:56:37+02:00,mmm FastHierarchy . java <nl> ppp FastHierarchy . java <nl> - import java . util . ArrayDeque ; <nl> - import java . util . Collection ; <nl> - import java . util . Collections ; <nl> - import java . util . Deque ; <nl> - import java . util . HashMap ; <nl> - import java . util . HashSet ; <nl> - import java . util . Iterator ; <nl> - import java . util . LinkedList ; <nl> - import java . util . List ; <nl> - import java . util . Map ; <nl>,do not change fasthierarchy,0
bbf89183b32eee34a6ae623387dd6773521a91f4,2021-09-08 17:58:35+02:00,mmm FastHierarchy . java <nl> ppp FastHierarchy . java <nl> + import soot . jimple . spark . internal . TypeManager ; <nl> + protected static final int USE_INTERVALS_BOUNDARY = 100 ; <nl> - protected Scene sc ; <nl> + protected final Scene sc ; <nl> - if (potentialSubrange == null) { <nl> - return false ; <nl> - } <nl> - if (lower > potentialSubrange . lower) { <nl> - return false ; <nl> - } <nl> - if (upper < potentialSubrange . upper) { <nl> - return false ; <nl> - } <nl> - return true ; <nl>,do not change fast hierarchy,0
f935dec864b3ed9920ba76062e81dc42f748ce34,2021-11-09 21:28:27+01:00,mmm Node . java <nl> ppp Node . java <nl> + import soot . options . Options ; <nl> - if (TypeManager . isUnresolved(type)) { <nl> + if (TypeManager . isUnresolved(type) && !Options . v() . ignore_resolution_errors()) { <nl> - if (TypeManager . isUnresolved(type)) { <nl> + if (TypeManager . isUnresolved(type) && !Options . v() . ignore_resolution_errors()) { <nl>,do not throw exception when it be a resolution error,1
d781b5179e50bf8242ce2837cc35559fc8f52519,2021-11-11 17:55:03+01:00,mmm TrapSplitter . java <nl> ppp TrapSplitter . java <nl> - for (Unit splitUnit = t1 . getBeginUnit() ; splitUnit != t1 . getEndUnit() ; splitUnit = b . getUnits() . getSuccOf(splitUnit)) { <nl> + for (Unit splitUnit = t1 . getBeginUnit() ; splitUnit != t1 . getEndUnit() && splitUnit != null ; splitUnit <nl> + = b . getUnits() . getSuccOf(splitUnit)) { <nl>,npe fix for trap splitter,1
775afaa055df6f820dce0cce27b63ffcb58ec314,2021-11-19 21:33:34+01:00,mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> - } else if (target . argIndex >= ie . getArgCount()) { <nl> + } else if (target . argIndex < ie . getArgCount()) { <nl>,fix for stupid error,0
646288df991932fb555629f0f98aa862af2061ad,2021-11-22 13:53:23+01:00,mmm ModuleUtil . java <nl> ppp ModuleUtil . java <nl> - public final class ModuleUtil { <nl> + public class ModuleUtil { <nl> - try (BufferedReader reader = new BufferedReader(new InputStreamReader(Files . exists(excludeFile) <nl> - ? Files . newInputStream(excludeFile) : ModuleUtil . class . getResourceAsStream('/' + JAVABASEFILE)))) { <nl> + try (BufferedReader reader <nl> + = new BufferedReader(new InputStreamReader(Files . exists(excludeFile) ? Files . newInputStream(excludeFile) <nl> + : ModuleUtil . class . getResourceAsStream('/' JAVABASEFILE)))) { <nl>,do not be so strict about extensibility,1
0bcdce305fbec1b26638e9a6a06db994bac27800,2021-11-26 19:40:59+01:00,mmm Type . java <nl> ppp Type . java <nl> + public Type getDefaultFinalType() { <nl> + return this ; <nl> + } <nl> mmm AugHierarchy . java <nl> ppp AugHierarchy . java <nl> + import soot . ArrayType ; <nl> + } else if (ancestor instanceof ArrayType && child instanceof ArrayType) { <nl> + Type at = ((ArrayType) ancestor) . getElementType() ; <nl> + Type ct = ((ArrayType) child) . getElementType() ; <nl> + if (at instanceof Integer1Type) { <nl> + return ct instanceof BottomType ; <nl> + } else if (at instanceof BooleanType) { <nl> + return <nl>,intermediate integer type be not augment when use a array type,1
3f7676ec2ee4df321dcb1d5b28f79b1cae696544,2021-12-02 15:10:59+01:00,"mmm OnFlyCallGraphBuilder . java <nl> ppp OnFlyCallGraphBuilder . java <nl> - List<VirtualCallSite> indirectSites = new ArrayList<>(receiverToSites . get(targetLocal)) ; <nl> - for (final VirtualCallSite site : indirectSites) { <nl> - if (w . getTargetMethod() . equals(site . subSig())) { <nl> - for (VirtualEdgeTarget siteTarget : w . getTargets()) { <nl> - Stmt siteStmt = site . getStmt() ; <nl> - if (siteStmt . containsInvokeExpr()) { <nl> - processVirtualEdgeSummary(callSiteMethod, callSite, siteStmt, receiver, siteTarget, edgeType) ; <nl> + List<VirtualCallSite> indirectSites = receiverToSites . get(targetLocal) ; <nl> + if (indirectSites != null) { <nl> + for (final VirtualCallSite site : new ArrayList<>(indirectSites)) <nl>",fix : nullpointerexception,1
49521db11851239d8f2eb0b25f66c21421bb36fd,2021-12-08 14:29:28+01:00,mmm DexTransformer . java <nl> ppp DexTransformer . java <nl> - ArrayType at = (ArrayType) stmt . getRightOp() . getType() ; <nl> - Type t = at . getArrayElementType() ; <nl> + Type t = stmt . getRightOp() . getType() ; <nl> + if (t instanceof ArrayType) { <nl> + ArrayType at = (ArrayType) t ; <nl> + t = at . getArrayElementType() ; <nl> + } <nl>,fix java.lang.classcastexception : class soot.reftype can not be cast to,1
89434cacf4bd219dd061421ed2877eeed7b4058a,2022-12-05 22:58:38+08:00,"mmm FastHierarchy . java <nl> ppp FastHierarchy . java <nl> + boolean calleeExist = declaringClass . getMethodUnsafe(subsignature) != null ; <nl> - if (isVisible(declaringClass, concreteType, candidate . getModifiers())) { <nl> + if (!calleeExist || isVisible(concreteType, declaringClass, candidate . getModifiers())) { <nl>",fix soot-oss/soot # 1936 : remove the visibility check when the callee do not exist also swap the argument of the isvisible invoke,1
eecab8478f14d639ae617275682bcdda550ed000,2022-12-23 22:07:07+01:00,mmm DexPrinter . java <nl> ppp DexPrinter . java <nl> - dexBuilder . internClass(classDef) ; <nl> + synchronized (dexBuilder) { <nl> + dexBuilder . internClass(classDef) ; <nl> + } <nl>,make sure that multi thread work,1
833c428a3035a45034673db6a82088a5493c38ec,2023-03-28 12:01:00+02:00,"mmm ExceptionNode . java <nl> ppp ExceptionNode . java <nl> + IterableSet<ExceptionNode> toAdd = new IterableSet<ExceptionNode>() ; <nl> - enlist . addLast(new ExceptionNode(clonedTryBody, en . exception, asg . get_CloneOf(en . handlerAugmentedStmt))) ; <nl> + toAdd . addLast(new ExceptionNode(clonedTryBody, en . exception, asg . get_CloneOf(en . handlerAugmentedStmt))) ; <nl> + enlist . addAll(toAdd) ; <nl>",fix concurrent modification exception,1
18d1194a4fe04e3b2ab7cf0099d9af6cc631894e,2023-11-22 21:40:32+01:00,mmm SootClass . java <nl> ppp SootClass . java <nl> - import soot . util . Numberable ; <nl> - public class SootClass extends AbstractHost implements Numberable { <nl> + public class SootClass extends AbstractHost { <nl> - @Override <nl> - public final int getNumber() { <nl> - return number ; <nl> - } <nl> - @Override <nl> - public void setNumber(int number) { <nl> - this . number = number ; <nl> - } <nl>,do not number sootclasses,0
b0d396ed72e0ca262189945eae8e118c04c5aa61,2023-11-29 13:26:58+01:00,mmm Scene . java <nl> ppp Scene . java <nl> - sootClassPath += File . pathSeparatorChar + newPathElement ; <nl> + if (sootClassPath == null) <nl> + sootClassPath = newPathElement ; <nl> + else <nl> + sootClassPath += File . pathSeparatorChar newPathElement ; <nl>,do not compute a null element in class path,1
a7c49523b237690be93e568b12c53cf226d4a04e,2024-01-11 13:41:31+01:00,mmm UnreachableCodeEliminator . java <nl> ppp UnreachableCodeEliminator . java <nl> - if (verbose) { <nl> - notReachable = new HashSet<Unit>() ; <nl> - for (Unit u : units) { <nl> - if (!reachable . contains(u)) { <nl> + for (Unit u : units) { <nl> + if (!reachable . contains(u)) { <nl> + if (verbose) { <nl> + if (notReachable == null) { <nl> + notReachable = new HashSet<Unit>() ; <nl> + } <nl> - if (Scene . v() . hasCallGraph()) { <nl> - Scene . v() . getCallGraph() . removeAllEdgesOutOf(u) ; <nl> - } <nl> + } <nl> <nl>,fix for wrong placement of remove,1
ec4bdc07bfad9932c2cf03173b9b17825fc5131b,2024-02-13 14:09:02+01:00,mmm ModuleUtil . java <nl> ppp ModuleUtil . java <nl> + return G . v() . soot_ModuleUtil() . isInModuleMode() ; <nl> + } <nl> + public boolean isInModuleMode() { <nl> mmm RefType . java <nl> ppp RefType . java <nl> - if (ModuleUtil . module_mode()) { <nl> - return G . v() . soot_ModuleRefType() ; <nl> + G g = G . v() ; <nl> + if (g . soot_ModuleUtil() . isInModuleMode()) { <nl> + return g . soot_ModuleRefType() ; <nl> - return G . v() . soot_RefType() ; <nl> + return g . soot_RefType() ; <nl> mmm Scene <nl>,performance optimization : do not request g so often,1
f1213a7656070b23e0684cf6166c2731b4150dae,2014-07-07 17:06:01+01:00,mmm DefaultBandwidthMeter . java <nl> ppp DefaultBandwidthMeter . java <nl> - bandwidthEstimate = bandwidthEstimateFloat == Float . NaN <nl> - ? NO_ESTIMATE : (long) bandwidthEstimateFloat ; <nl> + bandwidthEstimate = Float . isNaN(bandwidthEstimateFloat) ? NO_ESTIMATE <nl> + : (long) bandwidthEstimateFloat ; <nl>,fix nan comparison error,1
4a745b1cd84172e8d58c55ca561dd22ec5d339c3,2014-08-12 13:55:38+01:00,mmm Chunk . java <nl> ppp Chunk . java <nl>  <nl> mmm Atom . java <nl> ppp Atom . java <nl> - import java . util . List ; <nl> - public static final int TYPE_mfhd = 0x6D666864 ; <nl> - private final ParsableByteArray data ; <nl> + public final ParsableByteArray data ; <nl> - public ParsableByteArray getData() { <nl> - return data ; <nl> - } <nl> - for (int i = 0 ; i < children . size() ; i++) { <nl> + int childrenSize = children . size() ; <nl> + for (int i = <nl>,optimize out quite a few allocation in fragmentedmp4parser,1
e0a29c841ebcfb887c5562e4f12f985799e61b4a,2014-08-12 14:12:05+01:00,mmm MediaCodecAudioTrackRenderer . java <nl> ppp MediaCodecAudioTrackRenderer . java <nl> - releaseAudioTrack() ; <nl> - this . sampleRate = format . getInteger(MediaFormat . KEY_SAMPLE_RATE) ; <nl> + int sampleRate = format . getInteger(MediaFormat . KEY_SAMPLE_RATE) ; <nl> + if (audioTrack != null && this . sampleRate == sampleRate <nl> + && this . channelConfig == channelConfig) { <nl> + return ; <nl> + } <nl> + releaseAudioTrack() ; <nl> + this . sampleRate = sampleRate ; <nl>,do not release audiotrack unless we have to,1
92e320812113825c6a33a6a1fd573599554b9e2d,2014-09-08 11:30:18+01:00,mmm FragmentedMp4Extractor . java <nl> ppp FragmentedMp4Extractor . java <nl> - TrackEncryptionBox trackEncryptionBox = <nl> - track . sampleDescriptionEncryptionBoxes[fragmentHeader . sampleDescriptionIndex] ; <nl> + TrackEncryptionBox trackEncryptionBox = <nl> + track . sampleDescriptionEncryptionBoxes[fragmentHeader . sampleDescriptionIndex] ; <nl>,do not try and read a trackencryptionbox unless we actually have a saiz atom to parse,1
6b123590cab361ecee7ebef3b010eff043d6c7a2,2014-11-14 16:31:47+00:00,"mmm HlsSampleSource . java <nl> ppp HlsSampleSource . java <nl> - SampleHolder sampleHolder, boolean onlyReadDiscontinuity) { <nl> + SampleHolder sampleHolder, boolean onlyReadDiscontinuity) throws IOException { <nl> + if (currentLoadableException != null) { <nl> + throw currentLoadableException ; <nl> + } <nl> + if (currentLoadableException != null) { <nl> + throw currentLoadableException ; <nl> + } <nl> - return loadingFinished ? END_OF_STREAM : NOTHING_READ ; <nl> + if (loadingFinished) { <nl> + return END_OF_STREAM ; <nl> + } <nl> + if (currentLoadableException != null) { <nl> + throw currentLoadableException ; <nl> + } <nl> + return NOTHING_READ ; <nl>",correctly propagate error,0
eb1210d410988492865ef1f025c449f256e3eabc,2014-11-14 18:31:55+00:00,mmm TsExtractor . java <nl> ppp TsExtractor . java <nl> - import java . util . LinkedList ; <nl> + import java . util . concurrent . ConcurrentLinkedQueue ; <nl> - if (queue . isEmpty()) { <nl> + Sample sample = queue . poll() ; <nl> + if (sample == null) { <nl> - Sample sample = queue . remove() ; <nl> - public final LinkedList<Sample> sampleQueue ; <nl> + public final ConcurrentLinkedQueue<Sample> sampleQueue ; <nl> - this . sampleQueue = new LinkedList<Sample>() ; <nl> + this . sampleQueue = new ConcurrentLinkedQueue<Sample>() ; <nl> - while (!sampleQueue . isEmpty()) <nl>,make samplequeue thread safe,1
8c07847b00552247540536a11e0cacc30482ba6f,2014-11-20 14:58:06+00:00,mmm HlsSampleSource . java <nl> ppp HlsSampleSource . java <nl> - if (extractors . isEmpty()) { <nl> - return false ; <nl> - } <nl> - TsExtractor extractor = extractors . getFirst() ; <nl> - if (extractor . isPrepared()) { <nl> - trackCount = extractor . getTrackCount() ; <nl> - trackEnabledStates = new boolean[trackCount] ; <nl> - pendingDiscontinuities = new boolean[trackCount] ; <nl> - downstreamMediaFormats = new MediaFormat[trackCount] ; <nl> - trackInfos = new TrackInfo[trackCount] ; <nl> - for (int i = 0 ; i < trackCount ; i++) { <nl> - MediaFormat format = extractor . getFormat(i) ; <nl>,properly propagate error that occur during preparation,1
656fc0b0ca4b2ba5269227848a5da9294d4854f5,2014-12-03 18:26:48+00:00,"mmm C . java <nl> ppp C . java <nl> + public static final long UNKNOWN_TIME_US = -1 ; <nl> mmm FrameworkSampleSource . java <nl> ppp FrameworkSampleSource . java <nl> - long duration = format . containsKey(android . media . MediaFormat . KEY_DURATION) ? <nl> - format . getLong(android . media . MediaFormat . KEY_DURATION) : TrackRenderer . UNKNOWN_TIME_US ; <nl> + long durationUs = format . containsKey(android . media . MediaFormat . KEY_DURATION) ? <nl> + format . getLong(android . media . MediaFormat . KEY_DURATION) : C . UNKNOWN_TIME_US ; <nl> - trackInfos[i] = new TrackInfo(mime, duration) ; <nl>",make sure smoothstreaming manifest duration be -1 for live,1
ae55b12bd8455758f23dfffa9e2d007af2ae5383,2014-12-12 14:05:45+00:00,"mmm SampleChooserActivity . java <nl> ppp SampleChooserActivity . java <nl> - import com . google . android . exoplayer . util . Util ; <nl> - import android . widget . Toast ; <nl> - if (Util . SDK_INT < 18 && sample . isEncypted) { <nl> - Toast . makeText(getApplicationContext(), R . string . drm_not_supported, Toast . LENGTH_SHORT) <nl> -  . show() ; <nl> - return ; <nl> - } <nl> mmm Samples . java <nl> ppp Samples . java <nl> - public final boolean isEncypted ; <nl> - public Sample(String name, String contentId, String uri, int <nl>",do not require sample to specify whether they 're encrypt,1
b80569237b575b7619e0eff73c305c116a782a91,2014-12-12 14:25:48+00:00,mmm HlsSampleSource . java <nl> ppp HlsSampleSource . java <nl> - if (currentLoadableException != null && currentLoadableExceptionCount > minLoadableRetryCount) { <nl> + if (currentLoadableException != null && (currentLoadableExceptionFatal <nl> + || currentLoadableExceptionCount > minLoadableRetryCount)) { <nl>,correctly propagate fatal load error,1
c497b78ffe04752b3593e5cfc7a763438b907edb,2014-12-19 12:14:06+00:00,"mmm HlsSampleSource . java <nl> ppp HlsSampleSource . java <nl> + if (!extractors . isEmpty()) { <nl> + discardSamplesForDisabledTracks(extractors . getFirst(), downstreamPositionUs) ; <nl> + } <nl> - boolean haveSamples = extractors . getFirst() . hasSamples() ; <nl> + boolean haveSamples = prepared && haveSamplesForEnabledTracks(extractors . getFirst()) ; <nl> - while (extractors . size() > 1 && !extractor . hasSamples()) { <nl> + while (extractors . size() > 1 && !haveSamplesForEnabledTracks(extractor)) { <nl> + private void discardSamplesForDisabledTracks(TsExtractor extractor, long timeUs) { <nl> + for (int i = 0 ; i < trackEnabledStates . length ; i++) { <nl> + <nl>",fix memory leak in tsextractor when not all track be enable,1
f7fb4d4c358b86a2ab031b4a5852f0ba8bcb3128,2015-02-12 12:46:58+00:00,mmm Mp4Util . java <nl> ppp Mp4Util . java <nl> - for (int i = startOffset ; i < endOffset 3 ; i++) { <nl> - if ((data[i] == 0 && data[i + 1] == 0 && data[i + 2] == 1) <nl> - && (type == -1 || (type == (data[i + 3] & 0x1F)))) { <nl> - return i ; <nl> + int limit = endOffset - 2 ; <nl> + for (int i = startOffset 2 ; i < limit ; i += 3) { <nl> + if ((data[i] & 0xFE) != 0) { <nl> + <nl>,optimize nal unit search,1
b03c5c5753810a6d0076374f69aa8744059dd3e8,2015-02-18 15:15:20+00:00,"mmm DefaultSampleSource . java <nl> ppp DefaultSampleSource . java <nl> - seekToUs(positionUs) ; <nl> + seekToUsInternal(positionUs, positionUs != 0) ; <nl> - if (seekPositionUs != positionUs) { <nl> - seekPositionUs = positionUs ; <nl> - sampleExtractor . seekTo(positionUs) ; <nl> - for (int i = 0 ; i < trackStates . length ; ++i) { <nl> - if (trackStates[i] != TRACK_STATE_DISABLED) { <nl> - pendingDiscontinuities[i] = true ; <nl> - } <nl> - } <nl> - } <nl> + seekToUsInternal(positionUs, false) ; <nl> + private void seekToUsInternal(long positionUs, boolean force) { <nl> + if (force || seekPositionUs != positionUs) <nl>",ensure we always seek after select a track,1
362dc5f382e3a87f04fed017248e225eeb416396,2015-04-10 22:28:20+01:00,mmm DefaultHttpDataSource . java <nl> ppp DefaultHttpDataSource . java <nl> + import java . io . EOFException ; <nl> + import java . io . InterruptedIOException ; <nl> + import java . util . concurrent . atomic . AtomicReference ; <nl> + private static final AtomicReference<byte[]> skipBufferReference = new AtomicReference<byte[]>() ; <nl> - private long dataLength ; <nl> + private long bytesToSkip ; <nl> + private long bytesToRead ; <nl> + private long bytesSkipped ; <nl> + this . bytesSkipped = 0 ; <nl> + closeConnection() ; <nl> + bytesToSkip = responseCode == 200 && dataSpec . position != <nl>,do not fail if server do not support partial request,1
c9010256432c8b09982b6a2c4f7fbfaa17b7c2ac,2015-04-10 22:38:06+01:00,"mmm Samples . java <nl> ppp Samples . java <nl> - new Sample(""WV: 30s license duration"", ""f9a34cab7b05881a"", <nl> + new Sample(""WV: 30s license duration (fails at ~30s)"", ""f9a34cab7b05881a"", <nl> new file <nl> ppp KeysExpiredException . java <nl> + package com . google . android . exoplayer . drm ; <nl> + public final class KeysExpiredException extends Exception { <nl> + } <nl> mmm StreamingDrmSessionManager . java <nl> ppp StreamingDrmSessionManager . java <nl> - postKeyRequest() ; <nl> + onError(new KeysExpiredException()) ; <nl>",do not attempt license request when key expire,1
b1aac839e68d837611eb11dcda86d6e5e75e81fc,2015-04-17 20:08:54+01:00,"mmm AudioTrack . java <nl> ppp AudioTrack . java <nl> + private final AudioTrackUtil audioTrackUtil ; <nl> - private AudioTrackUtil audioTrackUtil ; <nl> + if (Util . SDK_INT >= 19) { <nl> + audioTrackUtil = new AudioTrackUtilV19() ; <nl> + } else { <nl> + audioTrackUtil = new AudioTrackUtil() ; <nl> + } <nl> - if (Util . SDK_INT >= 19) { <nl> - audioTrackUtil = new AudioTrackUtilV19(audioTrack) ; <nl> - } else { <nl> - audioTrackUtil = new AudioTrackUtil(audioTrack) ; <nl> - } <nl> + audioTrackUtil . reconfigure(audioTrack, isAc3) ; <nl> + if (isAc3 && audioTrack . getPlayState() <nl>",do not fee ac-3 input when the audio track be pause,1
88daaa882ce75de78ec7e74ead50e13cdb435428,2015-05-01 20:11:27+01:00,mmm FrameworkSampleSource . java <nl> ppp FrameworkSampleSource . java <nl> - if (--remainingReleaseCount == 0) { <nl> + if (--remainingReleaseCount == 0 && extractor != null) { <nl> mmm ExtractorSampleSource . java <nl> ppp ExtractorSampleSource . java <nl> - if (--remainingReleaseCount == 0) { <nl> + if (--remainingReleaseCount == 0 && loader != null) { <nl>,fix npe if source be release have never be prepare,1
6bf62770bddd9b6a6e694b0b513a39ca3d051cf4,2015-05-01 20:24:50+01:00,"mmm Loader . java <nl> ppp Loader . java <nl> - private static final int MSG_ERROR = 1 ; <nl> + private static final int MSG_IO_EXCEPTION = 1 ; <nl> + private static final int MSG_FATAL_ERROR = 2 ; <nl> - obtainMessage(MSG_ERROR, e) . sendToTarget() ; <nl> + obtainMessage(MSG_IO_EXCEPTION, e) . sendToTarget() ; <nl> + Log . e(TAG, ""Unexpected exception loading stream"", e) ; <nl> + obtainMessage(MSG_IO_EXCEPTION, new UnexpectedLoaderException(e)) . sendToTarget() ; <nl> + } catch (Error e) { <nl> - obtainMessage(MSG_ERROR, new UnexpectedLoaderException(e)) . sendToTarget() ; <nl> + obtainMessage(MSG_FATAL_ERROR, e) . sendToTarget() ; <nl> + throw e ; <nl>",make sure that the process die if a loading task throw error,1
9921dfd1ced208f4dd4d37cd92d3debcb963a501,2015-05-05 20:33:25+01:00,"mmm DemoUtil . java <nl> ppp DemoUtil . java <nl> + public static final int TYPE_M4A = 5 ; <nl> - public static final int TYPE_OTHER = 8 ; <nl> - public static final int TYPE_M4A = 9 ; <nl> mmm PlayerActivity . java <nl> ppp PlayerActivity . java <nl> - import com . google . android . exoplayer . demo . player . DefaultRendererBuilder ; <nl> - contentType = intent . getIntExtra(CONTENT_TYPE_EXTRA, DemoUtil . TYPE_OTHER) ; <nl> + contentType = intent . getIntExtra(CONTENT_TYPE_EXTRA, -1) ; <nl> - return new DefaultRendererBuilder(this, contentUri, debugTextView) ; <nl> + throw new IllegalStateException(""Unsupported <nl>",deprecate frameworksamplesource a deterrent,0
4c1fb0c9772fa76dc6e7695ee904a337cc56167c,2015-07-23 13:12:57+01:00,"mmm ExtractorSampleSource . java <nl> ppp ExtractorSampleSource . java <nl> - } catch (ReflectiveOperationException e) { <nl> + } catch (InstantiationException e) { <nl> + throw new IllegalStateException(""Unexpected error creating default extractor"", e) ; <nl> + } catch (IllegalAccessException e) { <nl> mmm TextTrackRenderer . java <nl> ppp TextTrackRenderer . java <nl> - } catch (ReflectiveOperationException e) { <nl> + } catch (InstantiationException e) { <nl> + throw new IllegalStateException(""Unexpected error creating default parser"", e) ; <nl> + } catch (IllegalAccessException e) { <nl>",do not catch api 19 exception from newinstance,1
2f0aec43ec24a04fd1a0a004e0dea9539df8a177,2015-07-29 21:48:17+01:00,"mmm ContainerMediaChunk . java <nl> ppp ContainerMediaChunk . java <nl> - import android . util . Log ; <nl> - private static final String TAG = ""ContainerMediaChunk"" ; <nl> - Log . w(TAG, ""Ignoring unexpected seekMap"") ; <nl>",do not print warn if we get a seekmap when read dash chunk,1
1a5d12359df09de6fc20fee74bcf3e3a98881208,2015-07-30 20:34:17+01:00,mmm HlsRendererBuilder . java <nl> ppp HlsRendererBuilder . java <nl> + if (variantIndices . length == 0) { <nl> + player . onRenderersError(new IllegalStateException("No variants selected . ")) ; <nl> + return ; <nl> + } <nl>,fail fast if we can not play anything,0
e07c35815e796395dbc0a92bb4e294eea5817968,2015-09-01 14:01:06+01:00,mmm TextTrackRenderer . java <nl> ppp TextTrackRenderer . java <nl> - if (nextSubtitle != null && (subtitleNextEventTimeUs == Long . MAX_VALUE <nl> - || nextSubtitle . startTimeUs <= positionUs)) { <nl> + if (nextSubtitle != null && nextSubtitle . startTimeUs <= positionUs) { <nl>,do not move to next subtitle too soon,1
d5f8d1a1b1a73652b5b359dce8cbe89c34fe729e,2015-09-01 14:13:22+01:00,mmm DashChunkSource . java <nl> ppp DashChunkSource . java <nl> - DashSegmentIndex oldIndex = segmentIndex ; <nl> + DashSegmentIndex oldIndex = representation . getIndex() ; <nl> + DashSegmentIndex newIndex = newRepresentation . getIndex() ; <nl> + representation = newRepresentation ; <nl> + if (newIndex == null) { <nl> + return ; <nl> + } <nl> + segmentIndex = newIndex ; <nl> - DashSegmentIndex newIndex = newRepresentation . getIndex() ; <nl> - int segmentNumShift ; <nl> - segmentNumShift = oldIndex . getLastSegmentNum() + 1 newIndexFirstSegmentNum ; <nl> + segmentNumShift += oldIndex . getLastSegmentNum() 1 - newIndexFirstSegmentNum ; <nl> - segmentNumShift <nl>,do not crash update a representation without an index,1
71f542f7c2628a027df8ea0788dbb10e1efa6d32,2015-09-28 12:16:26+01:00,mmm SubtitleParserHelper . java <nl> ppp SubtitleParserHelper . java <nl> + private RuntimeException runtimeError ; <nl> + runtimeError = null ; <nl> + runtimeError = null ; <nl> + } else if (runtimeError != null) { <nl> + throw runtimeError ; <nl> + } else { <nl> + return result ; <nl> - return result ; <nl> - error = null ; <nl> + error = null ; <nl> + runtimeError = null ; <nl> + RuntimeException runtimeError = null ; <nl> + } catch (RuntimeException e) { <nl> + runtimeError = e ; <nl> + this . runtimeError <nl>,if a parser really want to throw a runtime exception do not crash,1
9b4e9723e5f459ac86e621ae01a70929b4aba16e,2015-10-12 12:28:14+01:00,mmm MediaCodecUtil . java <nl> ppp MediaCodecUtil . java <nl> - if (Util . SDK_INT <= 19 && Util . DEVICE != null && Util . DEVICE . startsWith("serrano") <nl> + if (Util . SDK_INT <= 19 && Util . DEVICE != null <nl> + && (Util . DEVICE . startsWith("d2") || Util . DEVICE . startsWith("serrano")) <nl>,do not use sec vp8 decoder on galaxy s3s,1
fb75b65a70672536ebeaf2cc2e851934872f0367,2015-10-26 10:24:30+00:00,"mmm AudioTagPayloadReader . java <nl> ppp AudioTagPayloadReader . java <nl> - import android . util . Pair ; <nl> + import android . util . Pair ; <nl> - MediaFormat mediaFormat = MediaFormat . createAudioFormat(MimeTypes . AUDIO_AAC, <nl> - MediaFormat . NO_VALUE, MediaFormat . NO_VALUE, durationUs, audioParams . second, <nl> - audioParams . first, Collections . singletonList(audioSpecificConfig), null) ; <nl> + MediaFormat mediaFormat = MediaFormat . createAudioFormat(MediaFormat . NO_VALUE, <nl> + MimeTypes . AUDIO_AAC, MediaFormat . NO_VALUE, MediaFormat . NO_VALUE, durationUs, <nl> + audioParams . second, audioParams . first, Collections . singletonList(audioSpecificConfig), <nl> + null) ; <nl> mmm VideoTagPayloadReader <nl>",fix compile error,1
b03278f2bf5c0eb114730ffc63bf172560915ecb,2015-10-26 15:28:10+00:00,"mmm DashRendererBuilder . java <nl> ppp DashRendererBuilder . java <nl> + import com . google . android . exoplayer . dash . DefaultDashTrackSelector ; <nl> - ChunkSource videoChunkSource = new DashChunkSource(videoDataSource, <nl> + ChunkSource videoChunkSource = new DashChunkSource( <nl> + DefaultDashTrackSelector . newVideoInstance(null, false, false), videoDataSource, <nl> - DashChunkSource audioChunkSource = new DashChunkSource(audioDataSource, null, <nl> - manifest . getPeriodDuration(0), AdaptationSet . TYPE_AUDIO, audioRepresentation) ; <nl> + DashChunkSource audioChunkSource = new DashChunkSource( <nl> + DefaultDashTrackSelector . newAudioInstance(), audioDataSource, null, <nl> + manifest . getPeriodDuration(0), AdaptationSet . TYPE_AUDIO, audioRepresentation) ; <nl> mmm DashChunkSource . java <nl> ppp DashChunkSource . java <nl> <nl>",do not assume representation be video in first two dashchunksource constructor,1
a4f1e3ce53f0bf83d3ebc69a837d5ed4345dc69a,2015-11-17 16:27:53+00:00,"mmm EventLogger . java <nl> ppp EventLogger . java <nl> + @Override <nl> + public void onAudioTrackUnderrun(long audioTrackBufferSizeMs, long elapsedSinceLastFeedMs) { <nl> + printInternalError(""audioTrackUnderrun ["" audioTrackBufferSizeMs "", "" <nl> + elapsedSinceLastFeedMs ""]"", null) ; <nl> + } <nl> mmm DemoPlayer . java <nl> ppp DemoPlayer . java <nl> + void onAudioTrackUnderrun(long audioTrackBufferSizeMs, long elapsedSinceLastFeedMs) ; <nl> + @Override <nl> + public void onAudioTrackUnderrun(long audioTrackBufferSizeMs, long elapsedSinceLastFeedMs) { <nl> + if (internalErrorListener != null) { <nl> + internalErrorListener . onAudioTrackUnderrun(audioTrackBufferSizeMs, elapsedSinceLastFeedMs) ; <nl> + } <nl> + } <nl> mmm MediaCodecAudioTrackRenderer . java <nl> ppp MediaCodecAudioTrackRenderer . java <nl> + <nl>",do not re-buffer when audiotrack underruns occur,1
f4c10dc560fbe46a4fee8bea9b6d7079d3e03ed0,2015-12-17 12:15:48+00:00,mmm LibvpxVideoTrackRenderer . java <nl> ppp LibvpxVideoTrackRenderer . java <nl> - private VpxOutputBuffer renderedOutputBuffer ; <nl> - try { <nl> - checkForDiscontinuity(positionUs) ; <nl> - } catch (VpxDecoderException e) { <nl> - notifyDecoderError(e) ; <nl> - throw new ExoPlaybackException(e) ; <nl> - } <nl> + checkForDiscontinuity(positionUs) ; <nl> - releaseOutputBuffer(outputBuffer) ; <nl> + decoder . releaseOutputBuffer(outputBuffer) ; <nl> - releaseOutputBuffer(outputBuffer) ; <nl> + decoder . releaseOutputBuffer(outputBuffer) ; <nl> - private void renderBuffer() throws VpxDecoderException { <nl> + private void renderBuffer() { <nl> + outputBuffer . release() ; <nl> + } else { <nl> + outputBuffer . release() ; <nl> <nl>,do not hold a lock while render in vpxrenderer,1
dd497b12596d081f202c687be1be20f46c7e3b33,2016-01-04 20:57:58+00:00,"mmm MediaCodecUtil . java <nl> ppp MediaCodecUtil . java <nl> + @TargetApi(21) <nl> + public static boolean isSizeSupportedV21(String mimeType, boolean secure, int width, <nl> + int height) throws DecoderQueryException { <nl> + Assertions . checkState(Util . SDK_INT >= 21) ; <nl> + MediaCodecInfo . VideoCapabilities videoCapabilities = getVideoCapabilitiesV21(mimeType, secure) ; <nl> + return videoCapabilities != null && videoCapabilities . isSizeSupported(width, height) ; <nl> + } <nl> - Pair<String, CodecCapabilities> info = getMediaCodecInfo(mimeType, secure) ; <nl> - if (info == null) { <nl> - return false ; <nl> - } <nl> - MediaCodecInfo . VideoCapabilities videoCapabilities = info . second <nl>",do not check a framerate if we do not have one,1
00e903b32e05fb4ba137c59fcb30a776e88ca77e,2016-01-07 22:52:51+00:00,"mmm HlsChunkSource . java <nl> ppp HlsChunkSource . java <nl> - switchingVariantSpliced, adaptiveMaxWidth, adaptiveMaxHeight) ; <nl> + switchingVariantSpliced, MediaFormat . NO_VALUE, MediaFormat . NO_VALUE) ; <nl> - switchingVariantSpliced, adaptiveMaxWidth, adaptiveMaxHeight) ; <nl> + switchingVariantSpliced, MediaFormat . NO_VALUE, MediaFormat . NO_VALUE) ; <nl>",do not pass maxwidth/height for non-video stream,1
89ce1ccedff72da5c7efc4ee50bfcd2d67e45818,2016-01-22 11:46:37+00:00,"mmm Samples . java <nl> ppp Samples . java <nl> + new Sample(""Google Play (Ogg/Vorbis Audio)"", <nl> + ""https://storage . googleapis . com/exoplayer-test-media-1/ogg/play . ogg"", Util . TYPE_OTHER), <nl> new file <nl> ppp OggReaderTest . java <nl> + package com . google . android . exoplayer . extractor . ogg ; <nl> + import com . google . android . exoplayer . util . ParsableByteArray ; <nl> + import android . util . Log ; <nl> + import junit . framework . TestCase ; <nl> + import java . io . IOException ; <nl> + public final class OggReaderTest <nl>",seek not yet enable,0
5f37e3c8fb71ff6f4ef8d7f00fe946c2e7f29a8d,2016-06-15 19:39:05+01:00,mmm ExoPlayerImplInternal . java <nl> ppp ExoPlayerImplInternal . java <nl> - boolean allRenderersEnded = true ; <nl> - boolean allRenderersReadyOrEnded = true ; <nl> - for (TrackRenderer renderer : renderers) { <nl> - allRenderersEnded = allRenderersEnded && renderer . isEnded() ; <nl> - allRenderersReadyOrEnded = allRenderersReadyOrEnded && isReadyOrEnded(renderer) ; <nl> - } <nl> - if (allRenderersEnded && (durationUs == C . UNKNOWN_TIME_US || durationUs <= positionUs)) { <nl> - setState(ExoPlayer . STATE_ENDED) ; <nl> - } else { <nl> - setState(allRenderersReadyOrEnded && haveSufficientBuffer() ? ExoPlayer . STATE_READY <nl> - : ExoPlayer . STATE_BUFFERING) ; <nl> - } <nl> - <nl>,ensure we re-enter the correct state after seek,1
2b13165738df01ff21bb323966def95d7f4e0001,2016-06-15 19:39:10+01:00,mmm ExtractorSampleSource . java <nl> ppp ExtractorSampleSource . java <nl> - seekInsideBuffer = sampleQueues[i] . skipToKeyframeBefore(positionUs) ; <nl> + if (trackEnabledStates[i]) { <nl> + seekInsideBuffer = sampleQueues[i] . skipToKeyframeBefore(positionUs) ; <nl> + } <nl> mmm HlsSampleSource . java <nl> ppp HlsSampleSource . java <nl> - chunkSource . seek() ; <nl> - restartFrom(positionUs) ; <nl> + boolean seekInsideBuffer = !isPendingReset() ; <nl> + for (int i = 0 ; seekInsideBuffer && i < sampleQueues . length ; i++) { <nl> + if (groupEnabledStates[i]) { <nl> + seekInsideBuffer = sampleQueues[i] . skipToKeyframeBefore(positionUs) ; <nl> + } <nl> + } <nl> + <nl>,optimize hl seek,1
9a893e3003a0e1336d9ffc051a8524a11d79a5b4,2016-06-15 19:39:11+01:00,"mmm ChunkSampleSource . java <nl> ppp ChunkSampleSource . java <nl> - private Format downstreamSampleFormat ; <nl> - downstreamSampleFormat = null ; <nl> + sampleQueue . needDownstreamFormat() ; <nl> - return loadingFinished || !sampleQueue . isEmpty() ; <nl> + return loadingFinished || (!isPendingReset() && !sampleQueue . isEmpty()) ; <nl> - BaseMediaChunk currentChunk = mediaChunks . getFirst() ; <nl> - currentChunk = mediaChunks . getFirst() ; <nl> - if (downstreamFormat == null || !downstreamFormat . equals(currentChunk . format)) { <nl> - eventDispatcher . downstreamFormatChanged(currentChunk . format, currentChunk . trigger, <nl> + BaseMediaChunk currentChunk = mediaChunks . getFirst() ; <nl> + Format <nl>",fix thread-safety issue use defaulttrackoutput,1
cf0a31a7bb52d633f43e298df95732392390544e,2016-06-15 19:40:38+01:00,"mmm DefaultTrackOutput . java <nl> ppp DefaultTrackOutput . java <nl> + import com . google . android . exoplayer . util . Util ; <nl> - if (!format . equals(upstreamFormat)) { <nl> + if (!Util . areEqual(format, upstreamFormat)) { <nl>",fix an npe with self-initializing dash segment,1
9981a83c0512e5a29077d5df2f2b29911260dee1,2016-06-15 19:41:33+01:00,"mmm OggExtractorFileTests . java <nl> ppp OggExtractorFileTests . java <nl> - parseFile(FLAC_TEST_FILE, false, false, false, MimeTypes . AUDIO_FLAC, 2741000, 33) ; <nl> - parseFile(FLAC_TEST_FILE, false, true, false, MimeTypes . AUDIO_FLAC, 2741000, 33) ; <nl> - parseFile(FLAC_TEST_FILE, true, false, true, MimeTypes . AUDIO_FLAC, 2741000, 33) ; <nl> - parseFile(FLAC_TEST_FILE, true, true, true, MimeTypes . AUDIO_FLAC, 2741000, 33) ; <nl> + testFlac(false, false, false) ; <nl> + testFlac(false, true, false) ; <nl> + testFlac(true, false, true) ; <nl> + testFlac(true, true, true) ; <nl> + } <nl> + private void testFlac(boolean simulateIOErrors, boolean simulateUnknownLength, <nl> + boolean simulatePartialReads) throws Exception { <nl>",fix ogg/flac sync exception,1
7ef028c67b657239810abe3200928070ec7319d0,2016-06-15 19:42:03+01:00,"mmm SingleSampleSource . java <nl> ppp SingleSampleSource . java <nl> - streamState = STREAM_STATE_END_OF_STREAM ; <nl> - public void onLoadCanceled(SingleSampleSource loadable, long elapsedMs) { <nl> - maybeStartLoading() ; <nl> + public void onLoadCanceled(SingleSampleSource loadable, long elapsedMs, boolean released) { <nl> + if (!released) { <nl> + maybeStartLoading() ; <nl> + } <nl> mmm ChunkTrackStream . java <nl> ppp ChunkTrackStream . java <nl> - private boolean released ; <nl> - public void onLoadCanceled(Chunk loadable, long elapsedMs) { <nl> + public void onLoadCanceled(Chunk loadable, long elapsedMs, boolean released) { <nl> mmm DashSampleSource . java <nl> ppp DashSampleSource . java <nl> - <nl>",fix delivery of onloadcanceled to occur before thread dy,0
b206cff98c07ebee1aa375c4f112ef947d2d7ee1,2016-06-15 19:42:42+01:00,mmm FakeExtractorInput . java <nl> ppp FakeExtractorInput . java <nl> - throw new IOException("Attempted to move past end of data: (" + position + " + " <nl> + throw new EOFException("Attempted to move past end of data: (" position " " <nl>,fix exception type,1
52c534215839ab0dde87d2369f37db3eaf2dfba8,2016-07-07 20:15:27+01:00,mmm MultiSampleSource . java <nl> ppp MultiSampleSource . java <nl> - long bufferedPositionUs = durationUs != C . UNSET_TIME_US ? durationUs : Long . MAX_VALUE ; <nl> + long bufferedPositionUs = Long . MAX_VALUE ; <nl> - if (rendererBufferedPositionUs == C . UNSET_TIME_US) { <nl> - return C . UNSET_TIME_US ; <nl> - } else if (rendererBufferedPositionUs == C . END_OF_SOURCE_US) { <nl> - } else { <nl> + if (rendererBufferedPositionUs != C . END_OF_SOURCE_US) { <nl> - return bufferedPositionUs == Long . MAX_VALUE ? C . UNSET_TIME_US : bufferedPositionUs ; <nl> + return bufferedPositionUs == Long . MAX_VALUE <nl>,getbufferedposition can not return unknown anymore,1
79cbd390ab8397419cef1966465c256eccc65f6b,2016-07-07 20:27:53+01:00,mmm ExoPlayerImpl . java <nl> ppp ExoPlayerImpl . java <nl> + import com . google . android . exoplayer . ExoPlayerImplInternal . PlaybackInfo ; <nl> - private ExoPlayerImplInternal . PlaybackInfo playbackInfo ; <nl> + private PlaybackInfo playbackInfo ; <nl> - private int sourceIndex ; <nl> - private long position ; <nl> - private long duration ; <nl> + private int maskingSourceIndex ; <nl> + private long maskingPositionMs ; <nl> + private long maskingDurationMs ; <nl> - duration = ExoPlayer . UNKNOWN_TIME ; <nl> - position = 0 ; <nl> - sourceIndex = 0 ; <nl> + maskingSourceIndex = 0 <nl>,bufferedpositionus can not be unset,1
8c0e0b690ea34415c633f7d352a3a6e92ea19b35,2016-07-07 20:48:53+01:00,"mmm TtmlParser . java <nl> ppp TtmlParser . java <nl> - String frameRateStr = xmlParser . getAttributeValue(TTP, ""frameRate"") ; <nl> - if (frameRateStr != null) { <nl> - frameRate = Integer . parseInt(frameRateStr) ; <nl> + String frameRateString = xmlParser . getAttributeValue(TTP, ""frameRate"") ; <nl> + if (frameRateString != null) { <nl> + frameRate = Integer . parseInt(frameRateString) ; <nl> - String frameRateMultiplierStr = xmlParser . getAttributeValue(TTP, ""frameRateMultiplier"") ; <nl> - if (frameRateMultiplierStr != null) { <nl> - String[] parts = frameRateMultiplierStr . split("" "") ; <nl> + String frameRateMultiplierString = xmlParser . getAttributeValue(TTP, ""frameRateMultiplier"") ; <nl> + if <nl>",do not abbreviate string a str,1
e02ca775f3aa68acd59e780e1b1274d2bc8524ed,2016-07-07 20:50:05+01:00,mmm DefaultTrackOutput . java <nl> ppp DefaultTrackOutput . java <nl> - while (!dataQueue . isEmpty()) { <nl> - allocator . release(dataQueue . remove()) ; <nl> - } <nl> + allocator . release(dataQueue . toArray(new Allocation[dataQueue . size()])) ; <nl> + dataQueue . clear() ; <nl> mmm Allocator . java <nl> ppp Allocator . java <nl> + void release(Allocation[] allocations) ; <nl> mmm DefaultAllocator . java <nl> ppp DefaultAllocator . java <nl> + private final Allocation[] singleAllocationReleaseHolder ; <nl> + singleAllocationReleaseHolder = new Allocation[1] ; <nl> - Assertions . checkArgument(allocation . data == initialAllocationBlock <nl> - || allocation . data <nl>,optimize release of multiple allocation,1
6c2a9677633d81ac4fc4a4b0a46eae4f94dcd6cf,2016-07-22 22:21:54+01:00,"mmm PlayerActivity . java <nl> ppp PlayerActivity . java <nl> - import com . google . android . exoplayer2 . upstream . BandwidthMeter ; <nl> - BandwidthMeter bandwidthMeter = new DefaultBandwidthMeter() ; <nl> + DefaultBandwidthMeter bandwidthMeter = new DefaultBandwidthMeter() ; <nl> mmm BandwidthMeter . java <nl> ppp BandwidthMeter . java <nl> - public interface BandwidthMeter extends TransferListener { <nl> + public interface BandwidthMeter { <nl> mmm DefaultBandwidthMeter . java <nl> ppp DefaultBandwidthMeter . java <nl> - public final class DefaultBandwidthMeter implements BandwidthMeter { <nl> + public final class DefaultBandwidthMeter implements BandwidthMeter, TransferListener { <nl> mmm DashTest . java <nl> <nl>",bandwidthmeter should not extend transferlistener,1
0909446133e50e5bc111afe6a93ea8a7cb40d828,2016-07-22 22:41:36+01:00,"mmm LibvpxVideoRenderer . java <nl> ppp LibvpxVideoRenderer . java <nl> - try { <nl> - if (decoder == null) { <nl> - long codecInitializingTimestamp = SystemClock . elapsedRealtime() ; <nl> - TraceUtil . beginSection(""createVpxDecoder"") ; <nl> - decoder = new VpxDecoder(NUM_BUFFERS, NUM_BUFFERS, INITIAL_INPUT_BUFFER_SIZE) ; <nl> - decoder . setOutputMode(outputMode) ; <nl> + if (isRendererAvailable()) { <nl> + try { <nl> + if (decoder == null) { <nl> + long codecInitializingTimestamp = SystemClock . elapsedRealtime() ; <nl> + TraceUtil . beginSection(""createVpxDecoder"") ; <nl> + decoder = new VpxDecoder(NUM_BUFFERS, NUM_BUFFERS, INITIAL_INPUT_BUFFER_SIZE) ; <nl> + decoder . setOutputMode(outputMode) ; <nl> + TraceUtil <nl>",do not let renderer input buffer get too big if codec not available,1
bd7c8fed1b0c662aa951f4a47d08a65759f8ea27,2016-08-08 11:15:06+01:00,mmm ExoPlayerImplInternal . java <nl> ppp ExoPlayerImplInternal . java <nl> + if (state == ExoPlayer . STATE_BUFFERING) { <nl> + for (Renderer renderer : enabledRenderers) { <nl> + renderer . maybeThrowStreamError() ; <nl> + } <nl> + } <nl>,while buffer check for error even if renderes be ready,1
52d95398789a26ba29f1c501ad3e151329809e09,2016-08-08 11:53:30+01:00,"mmm TrackSelectionHelper . java <nl> ppp TrackSelectionHelper . java <nl> - && (trackInfo . getAdaptiveSupport(rendererIndex, i, false) <nl> - != RendererCapabilities . ADAPTIVE_NOT_SUPPORTED) ; <nl> + && trackInfo . getAdaptiveSupport(rendererIndex, i, false) <nl> + != RendererCapabilities . ADAPTIVE_NOT_SUPPORTED <nl> + && trackGroups . get(i) . length > 1 ; <nl> - boolean groupIsAdaptive = group . length > 1 && trackGroupsAdaptive[groupIndex] ; <nl> + boolean groupIsAdaptive = trackGroupsAdaptive[groupIndex] ; <nl>",fix npe in track selection view,1
5deb948d1448b5380df41ce6f90a4351dc81f345,2016-08-31 13:23:30+01:00,mmm ExoPlayerImplInternal . java <nl> ppp ExoPlayerImplInternal . java <nl> - if ((enabledRenderers . length > 0 ? allRenderersReadyOrEnded : isTimelineReady) <nl> - && haveSufficientBuffer(rebuffering)) { <nl> + if ((enabledRenderers . length > 0 <nl> + ? (allRenderersReadyOrEnded && haveSufficientBuffer(rebuffering)) : isTimelineReady)) { <nl>,if no renderers enable we do not need buffer,1
b120bea029a2d1fc8fbcf6058726f5d7e41316be,2016-08-31 15:25:06+01:00,"mmm ExoPlayerImplInternal . java <nl> ppp ExoPlayerImplInternal . java <nl> - public void onPeriodPrepared(MediaPeriod source) { <nl> + public void onPrepared(MediaPeriod source) { <nl> + mediaSource . maybeThrowSourceInfoRefreshError() ; <nl> - MediaPeriod mediaPeriod ; <nl> - if (startPositionUs != C . UNSET_TIME_US <nl> - && (mediaPeriod = mediaSource . createPeriod(periodIndex)) != null) { <nl> - Period newPeriod = new Period(renderers, rendererCapabilities, trackSelector, mediaPeriod, <nl> - timeline . getPeriodId(periodIndex), periodIndex, startPositionUs) ; <nl> + if (periodIndex >= timeline . getPeriodCount()) { <nl> + mediaSource . maybeThrowSourceInfoRefreshError() ; <nl> + } else if (startPositionUs != C . UNSET_TIME_US) { <nl> + <nl>",do not reuse mediaperiods,1
fd3d7be9c08461b97d984eb59dbae12f035be2ac,2016-08-31 15:25:25+01:00,mmm FragmentedMp4Extractor . java <nl> ppp FragmentedMp4Extractor . java <nl> + fragment . trunDataPosition[index] = fragment . dataPosition ; <nl> - fragment . trunDataPosition[index] = fragment . dataPosition + trun . readInt() ; <nl> + fragment . trunDataPosition[index] += trun . readInt() ; <nl>,fix data_offset not present bug in fragmentedmp4extractor,1
67597ffc5aac66bdfa00c4c412c55763a6e356ea,2016-09-13 17:36:36+01:00,mmm PlayerActivity . java <nl> ppp PlayerActivity . java <nl> + private boolean shouldAutoPlay ; <nl> + shouldAutoPlay = true ; <nl> - player . setPlayWhenReady(true) ; <nl> + player . setPlayWhenReady(shouldAutoPlay) ; <nl> + shouldAutoPlay = player . getPlayWhenReady() ; <nl>,keep player pause if it be pause when background,0
b87463a85791e1e1600413cedf4c9adfd8615a64,2016-09-14 09:32:53-04:00,mmm Eia608CueBuilder . java <nl> ppp Eia608CueBuilder . java <nl> - import com . google . android . exoplayer2 . text . Cue ; <nl> - import com . google . android . exoplayer2 . util . Assertions ; <nl> + import com . google . android . exoplayer2 . text . Cue ; <nl> + import com . google . android . exoplayer2 . util . Assertions ; <nl> - if (row < 1) { <nl> + if (row <= 1) { <nl> mmm Eia608Decoder . java <nl> ppp Eia608Decoder . java <nl> + import android . graphics <nl>,fix an off by one error and fix iterate through the cue,1
d95baa3ee95121b227497d0fe63a0481b7b8b0e8,2016-10-11 18:16:28+01:00,"mmm CronetDataSource . java <nl> ppp CronetDataSource . java <nl> - UrlRequest . Builder urlRequestBuilder = new UrlRequest . Builder(dataSpec . uri . toString(), this, <nl> - executor, cronetEngine) ; <nl> - fillCurrentRequestHeader(urlRequestBuilder) ; <nl> - fillCurrentRequestPostBody(urlRequestBuilder, dataSpec) ; <nl> - currentUrlRequest = urlRequestBuilder . build() ; <nl> + currentUrlRequest = buildRequest(dataSpec) ; <nl> - private void fillCurrentRequestHeader(UrlRequest . Builder urlRequestBuilder) { <nl> + private UrlRequest buildRequest(DataSpec dataSpec) throws OpenException { <nl> + UrlRequest . Builder requestBuilder = new UrlRequest . Builder(dataSpec . uri . toString(), this, <nl> + executor, cronetEngine) ; <nl> + if (dataSpec . postBody != <nl>",fix thread safety issue with requestproperties,1
61b14423cb2498b401d31f6a1804f409af419834,2012-06-12 06:36:09+00:00,"mmm DexResolver . java <nl> ppp DexResolver . java <nl> + import java . util . Map ; <nl> + import java . util . TreeMap ; <nl> - import soot . dex . DexlibWrapper ; <nl> + static Map<File,DexlibWrapper> cache = new TreeMap<File, DexlibWrapper>() ; <nl> - DexClass c = new DexlibWrapper(file) . getClass(className) ; <nl> + DexlibWrapper wrapper = cache . get(file) ; <nl> + if(wrapper==null) { <nl> + wrapper = new DexlibWrapper(file) ; <nl> + cache . put(file, wrapper) ; <nl> + } <nl> + DexClass c = wrapper . getClass(className) ; <nl>",fix for memory leak,1
