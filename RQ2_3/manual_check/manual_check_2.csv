commitId,commitTime,diff,message,isImplicit
04a4d347bdd279be3281bf769de84e516b27000e,2022-11-16 20:01:37+00:00,"mmm AbstractEventStream . java <nl> ppp AbstractEventStream . java <nl> - private volatile Thread thread ; <nl> - thread = SecuritySupport . createThreadWitNoPermissions(nextThreadName(), r) ; <nl> + Thread thread = SecuritySupport . createThreadWitNoPermissions(nextThreadName(), r) ; <nl> - thread = Thread . currentThread() ; <nl>",abstracteventstream should not hold thread instance,1
dd18d76b4c1dfa79707634bcd4df4f8e7cfb8b70,2022-11-18 10:45:36+00:00,mmm OperatingSystemImpl . java <nl> ppp OperatingSystemImpl . java <nl> - private long usageTicks = 0 ; <nl> - private long totalTicks = 0 ; <nl> + private volatile long usageTicks ; <nl> + private volatile long totalTicks ; <nl>,and totalticks should be volatile to ensure that different thread get the late tick,1
069685489afcea9b31491f0d9fec8cc52e210e99,2022-11-22 05:04:40+00:00,mmm SequenceInputStream . java <nl> ppp SequenceInputStream . java <nl> + import java . util . Arrays ; <nl> + import java . util . Collections ; <nl> - import java . util . Vector ; <nl> - Enumeration<? extends InputStream> e ; <nl> - InputStream in ; <nl> + private final Enumeration<? extends InputStream> e ; <nl> + private InputStream in ; <nl> - Vector<InputStream> v = new Vector<>(2) ; <nl> - v . addElement(s1) ; <nl> - v . addElement(s2) ; <nl> - e = v . elements() ; <nl> - peekNextStream() ; <nl> + this(Collections . <nl>,should not use vector,1
e174558cad836e56ac31725813abf7d8540c9919,2022-11-22 22:21:50+00:00,"mmm Main . java <nl> ppp Main . java <nl> - ext . setExtension(""Reason"", new CRLReasonCodeExtension(Integer . parseInt(id . substring(d+1)))) ; <nl> + int code = Integer . parseInt(id . substring(d+1)) ; <nl> + if (code <= 0) { <nl> + throw new Exception(""Reason code must be positive"") ; <nl> + } <nl> + ext . setExtension(""Reason"", new CRLReasonCodeExtension(code)) ; <nl> + if (exttype != -1 && value != null && value . isEmpty()) { <nl> + throw new Exception(rb . getString(""Illegal . value . "") extstr) ; <nl> + } <nl> mmm AuthorityInfoAccessExtension . java <nl> ppp AuthorityInfoAccessExtension <nl>",extension should not be create,1
8df3bc4ec57a15d5bca844e030c8cc3f8c077a49,2022-11-23 17:10:05+00:00,mmm File . java <nl> ppp File . java <nl> - import sun . security . action . GetPropertyAction ; <nl> + import jdk . internal . util . StaticProperty ; <nl> - private static final File tmpdir = new File( <nl> - GetPropertyAction . privilegedGetProperty("java . io . tmpdir")) ; <nl> + private static final File tmpdir = new File(StaticProperty . javaIoTmpDir()) ; <nl> mmm System . java <nl> ppp System . java <nl> + if (SystemProps . isBadIoTmpdir()) { <nl> + System . err . println("WARNING: java . io . tmpdir directory does not exist") ; <nl> <nl>,warn when user specify java.io.tmpdir directory do not exist,1
2afb4c3327b6830a009ee1ab8a1eb7803ef53007,2022-11-23 17:48:29+00:00,mmm DiskRepository . java <nl> ppp DiskRepository . java <nl> - DiskChunk oldestChunk = chunks . getLast() ; <nl> + DiskChunk oldestChunk = chunks . peekLast() ; <nl> - DiskChunk chunk = chunks . poll() ; <nl> + DiskChunk chunk = chunks . pollLast() ; <nl> - DiskChunk oldestChunk = chunks . peek() ; <nl> + DiskChunk oldestChunk = chunks . peekLast() ; <nl> - chunks . push(chunk) ; <nl> + chunks . addFirst(chunk) ; <nl> - for (DiskChunk dc : chunks) { <nl> + Iterator<DiskChunk> it = chunks . descendingIterator() ; <nl> + while (it . hasNext()) { <nl>,remoterecordingstream do not respect setmaxage and setmaxsize,1
4f65570204e2d38415e7761bd81660b081eae882,2022-11-25 12:31:47+00:00,mmm Attr . java <nl> ppp Attr . java <nl> + tree . record = syms . errSymbol ; <nl> new file <nl> ppp Test8294583 . java <nl> + import org . testng . annotations . Test ; <nl> + import static org . testng . Assert . assertEquals ; <nl> + @Test <nl> + public class Test8294583 extends KullaTesting { <nl> + public void test() { <nl> + assertEvalFail("switch (new Object()) {\n" + <nl> + "   case Foo() -> {}\n" + <nl> + "} ;") ; <nl> + } <nl> + @org . testng . annotations <nl>,npe in switch with non exist record pattern,1
952e10055135613e8ea2b818a4f35842936f5633,2022-11-25 17:39:21+00:00,"mmm HotSpotJVMCIRuntime . java <nl> ppp HotSpotJVMCIRuntime . java <nl> - static void decodeAndThrowThrowable(long buffer) throws Throwable { <nl> + static void decodeAndThrowThrowable(long errorOrBuffer) throws Throwable { <nl> + if (errorOrBuffer >= -2L && errorOrBuffer <= 0) { <nl> + String context = String . format(""while encoding an exception to translate it from %s to %s"", <nl> + IS_IN_NATIVE_IMAGE ? ""HotSpot"" : ""libjvmci"", <nl> + IS_IN_NATIVE_IMAGE ? ""libjvmci"" : ""HotSpot"") ; <nl> + if (errorOrBuffer == 0) { <nl> + throw new InternalError(""native buffer could not be allocated "" context) ; <nl> + } <nl> + if (errorOrBuffer == <nl>",should not throw an exception,1
2deb318c9f047ec5a4b160d66a4b52f93688ec42,2022-11-29 12:57:46+00:00,"mmm DHPrivateKey . java <nl> ppp DHPrivateKey . java <nl> - import java . security . ProviderException ; <nl> - try { <nl> - byte[] xbytes = x . toByteArray() ; <nl> - DerValue val = new DerValue(DerValue . tag_Integer, xbytes) ; <nl> - this . key = val . toByteArray() ; <nl> - val . clear() ; <nl> - Arrays . fill(xbytes, (byte)0) ; <nl> - encode() ; <nl> - } catch (IOException e) { <nl> - throw new ProviderException(""Cannot produce ASN . 1 encoding"", e) ; <nl> - } <nl> + byte[] xbytes = x . toByteArray() <nl>",operation should not throw ioexceptions,1
20844511939779649e1a51970edf29eb21f137e1,2022-11-29 21:49:50+00:00,"mmm GTKFileChooserUI . java <nl> ppp GTKFileChooserUI . java <nl> + FileSystemView fsv = getFileChooser() . getFileSystemView() ; <nl> + getChangeToParentDirectoryAction() . setEnabled(!fsv . isFileSystemRoot(currentDirectory)) ; <nl> mmm GTKLookAndFeel . java <nl> ppp GTKLookAndFeel . java <nl> + ""BACK_SPACE"", ""Go Up"", <nl> new file <nl> ppp TestBackSpaceAction . java <nl> + import java . awt . BorderLayout ; <nl> + import java . awt . Component ; <nl> + import java . awt . event . HierarchyEvent ; <nl> + import java . awt . event . HierarchyListener ; <nl> + import java . awt . event . KeyEvent <nl>",do not work in jfilechooser with gtk l & f,0
f05bfb157837f5854efe1ce96070c615de21d1a9,2022-11-30 07:43:17+00:00,mmm Config . java <nl> ppp Config . java <nl> + @Serial <nl> mmm P11Key . java <nl> ppp P11Key . java <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> + @Serial <nl> mmm P11SecureRandom . java <nl> ppp P11SecureRandom . java <nl> + @Serial <nl> mmm SunPKCS11 . java <nl> ppp SunPKCS11 . java <nl> + @Serial <nl>,field be not annotate with @ serial,1
e846b0438ca12f457ee763fed3a435d3a863c383,2022-12-01 22:07:57+00:00,mmm Main . java <nl> ppp Main . java <nl> + e . setMethod(ZipEntry . STORED) ; <nl> new file <nl> ppp ManifestDirectoryCompression . java <nl> + import static org . testng . Assert . assertEquals ; <nl> + import static org . testng . Assert . assertNotNull ; <nl> + import static org . testng . Assert . fail ; <nl> + import org . testng . annotations . AfterMethod ; <nl> + import org . testng . annotations . Test ; <nl> + import java . nio . file . Files ; <nl> + import java . <nl>,should not compress the manifest directory entry,1
2300ed458dcda568afad818d2d3133e545a58ad5,2022-12-05 12:04:23+00:00,mmm TransPatterns . java <nl> ppp TransPatterns . java <nl> - import com . sun . source . tree . EnhancedForLoopTree ; <nl> + import com . sun . source . tree . CaseTree . CaseKind ; <nl> - import com . sun . tools . javac . tree . JCTree . JCLabeledStatement ; <nl> - import com . sun . tools . javac . util . Options ; <nl> - import java . util . HashMap ; <nl> + import java . util . Collections ; <nl> + import java . util . HashMap ; <nl> + import <nl>,of switch with record pattern could be improve,1
ee9ba7456403c59a6e14d22cf9c2f53eef97ea57,2022-12-06 04:23:40+00:00,"mmm Symbol . java <nl> ppp Symbol . java <nl> - public RecordComponent createRecordComponent(RecordComponent existing, JCVariableDecl var, List<JCAnnotation> annotations) { <nl> + public RecordComponent createRecordComponent(RecordComponent existing, JCVariableDecl rcDecl, VarSymbol varSym) { <nl> - recordComponents = recordComponents . append(rc = new RecordComponent(var . sym, existing . originalAnnos, existing . isVarargs)) ; <nl> + recordComponents = recordComponents . append(rc = new RecordComponent(varSym, existing . ast, existing . isVarargs)) ; <nl> - recordComponents = recordComponents . append(rc = new RecordComponent(var . sym, annotations)) ; <nl> + recordComponents = recordComponents . append(rc = new RecordComponent(varSym, rcDecl)) ; <nl> - private final List<JCAnnotation> originalAnnos <nl>",message with a recordcomponentelement do not include position,1
2a243a33cc09f4674b232d89f36fb731055009d9,2022-12-06 08:24:17+00:00,mmm IPAddressName . java <nl> ppp IPAddressName . java <nl> - if (otherAddress . length == 4 && address . length == 4) <nl> + if ((otherAddress . length == 4 && address . length == 4) || <nl> + (otherAddress . length == 16 && address . length == 16)) { <nl> - else if ((otherAddress . length == 8 && address . length == 8) || <nl> - (otherAddress . length == 32 && address . length == 32)) { <nl> + } else if ((otherAddress . length == 8 && address . length == 8) || <nl>,'s ip x509 nameconstraints raise arrayindexoutofboundsexception,1
8edb98df3dd393103f2c80e929b011bc6b7993a3,2022-12-07 18:02:20+00:00,"mmm AttributeValues . java <nl> ppp AttributeValues . java <nl> + @SuppressWarnings(""unchecked"") <nl> + public static float getTracking(Map<?, ?> map) { <nl> + if (map != null) { <nl> + AttributeValues av = null ; <nl> + if (map instanceof AttributeMap && <nl> + ((AttributeMap) map) . getValues() != null) { <nl> + av = ((AttributeMap)map) . getValues() ; <nl> + } else if (map . get(TextAttribute . TRACKING) != null) { <nl> + av = AttributeValues . fromMap((Map<Attribute, ?>)map) ; <nl> + } <nl> + if (av != null) { <nl> + return av . tracking ; <nl> <nl>",do not measure correctly if textattribute.tracking be set,1
7f9c6ce3318aedfd85f12f4002dc442b0b468c27,2022-12-09 00:29:08+00:00,mmm InvocationTargetException . java <nl> ppp InvocationTargetException . java <nl> - private Throwable target ; <nl> + private final Throwable target ; <nl> + this . target = null ; <nl>,field name target be not declare final,1
a3364612f7d49f3633661b9ba4e9b721534cafad,2022-12-16 01:08:30+00:00,"mmm SyncOnValueBasedClassTest . java <nl> ppp SyncOnValueBasedClassTest . java <nl> - String[] commonFatalTestsFlags = {""-XX:+UnlockDiagnosticVMOptions"", ""-XX:-CreateCoredumpOnCrash"", ""-XX:DiagnoseSyncOnValueBasedClasses=1""} ; <nl> + String[] commonFatalTestsFlags = {""--enable-preview"", ""-XX:+UnlockDiagnosticVMOptions"", ""-XX:-CreateCoredumpOnCrash"", ""-XX:DiagnoseSyncOnValueBasedClasses=1""} ; <nl> - String[] commonLogTestsFlags = {""-XX:+UnlockDiagnosticVMOptions"", ""-XX:DiagnoseSyncOnValueBasedClasses=2""} ; <nl> + String[] commonLogTestsFlags = {""--enable-preview"", ""-XX:+UnlockDiagnosticVMOptions"", ""-XX:DiagnoseSyncOnValueBasedClasses=2""} ; <nl> + virtualThreadTests() ; <nl> + private static void virtualThreadTests() throws Exception { <nl> + final String[] vtTest = { ""--enable-preview"", ""-XX:+UnlockDiagnosticVMOptions"", ""-XX:-CreateCoredumpOnCrash"", <nl> + """", ""SyncOnValueBasedClassTest$VTTest"" } ; <nl> + vtTest[3] = ""-XX:DiagnoseSyncOnValueBasedClasses=1"" ; <nl> + ProcessBuilder pb = ProcessTools . createJavaProcessBuilder(vtTest) ; <nl> + OutputAnalyzer output = ProcessTools . executeProcess(pb) ; <nl> <nl>",do not report useful information for virtual thread,1
c929d8be5d19f2030406eb5c19f854e672c7a547,2023-01-05 08:26:38+00:00,"mmm ServerSocket . java <nl> ppp ServerSocket . java <nl> - throw new SocketException(e . getMessage()) ; <nl> + throw new SocketException(e . getMessage(), e) ; <nl> mmm Socket . java <nl> ppp Socket . java <nl> + } catch (SocketException e) { <nl> + throw e ; <nl> - throw new SocketException(e . getMessage()) ; <nl> + throw new SocketException(e . getMessage(), e) ; <nl> mmm SocksSocketImpl . java <nl> ppp SocksSocketImpl . java <nl> - throw new SocketException(e . getMessage()) ; <nl> + throw new SocketException(e . getMessage(), e) ; <nl> mmm NioSocketImpl . java <nl> ppp <nl>",socketexception by cause where it be miss in net and nio area,1
4072412c1fd1e28febff71c6b37a9813f22bdc4b,2023-01-09 10:14:06+00:00,"mmm D3DScreenUpdateManager . java <nl> ppp D3DScreenUpdateManager . java <nl> - if (!d3dw . isSurfaceLost() || validate(d3dw, false)) { <nl> + if (!d3dw . isSurfaceLost() || validate(d3dw)) { <nl> - } else if (!validate(sd, true)) { <nl> + } else if (!validate(sd)) { <nl> - private boolean validate(D3DWindowSurfaceData sd, boolean postEvent) { <nl> + private boolean validate(D3DWindowSurfaceData sd) { <nl> - if (postEvent) { <nl> - repaintPeerTarget(sd . getPeer()) ; <nl> - } <nl> + repaintPeerTarget(sd . getPeer()) ; <nl> deleted file <nl> mmm MultiPaintEventTest . java <nl> - import java . awt . * ; <nl> - public <nl>",application do not get repaint come out of sleep on window 10,1
2e9cb4b1f6ebba75cffa407f5142fdd95ed9bd88,2023-01-19 05:05:20+00:00,mmm BasicLookAndFeel . java <nl> ppp BasicLookAndFeel . java <nl> - import java . awt . Font ; <nl> + import java . awt . AWTEvent ; <nl> - import java . awt . SystemColor ; <nl> - import java . awt . event . * ; <nl> - import java . awt . Insets ; <nl> - import java . awt . Container ; <nl> - import java . awt . FocusTraversalPolicy ; <nl> - import java . awt . AWTEvent ; <nl> - import java . awt . Toolkit ; <nl> - import java . awt . <nl>,should not call getcomponentpopupmenu twice to get a popup menu,1
b317658d69a477df04ded3cc2e107970f8a6e20d,2023-01-19 18:32:08+00:00,mmm EdDSASignature . java <nl> ppp EdDSASignature . java <nl> - if (message == null) { <nl> - return false ; <nl> - } <nl> + ensureMessageInit() ; <nl> new file <nl> ppp EmptyMessage . java <nl> + import java . security . KeyPairGenerator ; <nl> + import java . security . Signature ; <nl> + import java . security . spec . NamedParameterSpec ; <nl> + public class EmptyMessage { <nl> + public static void main(String[] args) throws Exception { <nl> + var g = KeyPairGenerator . getInstance("EdDSA") ; <nl> + g . initialize(NamedParameterSpec . ED25519) ; <nl> <nl>,do not verify when there be no message,1
9d44dd0cca620ef8e16e0c4306e6e54d8de6d1e8,2023-01-20 19:51:28+00:00,"mmm IntegerPolynomial1305 . java <nl> ppp IntegerPolynomial1305 . java <nl> + ByteOrder currOrder = buf . order() ; <nl> + buf . order(ByteOrder . LITTLE_ENDIAN) ; <nl> + buf . order(currOrder) ; <nl> mmm Poly1305IntrinsicFuzzTest . java <nl> ppp Poly1305IntrinsicFuzzTest . java <nl> - buf = ByteBuffer . wrap(message, offset, len) <nl> -  . order(java . nio . ByteOrder . LITTLE_ENDIAN) ; <nl> + buf = ByteBuffer . wrap(message, offset, len) ; <nl> -  . order(java . nio . ByteOrder . LITTLE_ENDIAN) <nl> -  . asReadOnlyBuffer() <nl> -  . order(java . nio . ByteOrder . <nl>",endianness on bytebuffer not enforce,1
11aadc9d98d364b91114c028c7e2eff8de2f2bf0,2023-01-23 10:18:23+00:00,mmm BasicMenuItemUI . java <nl> ppp BasicMenuItemUI . java <nl> + if (SwingUtilities2 . isScaleChanged(e)) { <nl> + MenuItemLayoutHelper . clearUsedParentClientProperties(lbl) ; <nl> + } <nl> mmm StalePreferredSize . java <nl> ppp StalePreferredSize . java <nl> - import sun . swing . MenuItemLayoutHelper ; <nl> - if (component instanceof JMenuItem) { <nl> - MenuItemLayoutHelper . clearUsedParentClientProperties((JMenuItem)component) ; <nl> - } <nl>,may cache the size and do not update it when the screen dpi be change,1
5a478ef7759e64da6d17426673700ff0d9c66b33,2023-01-25 07:22:12+00:00,new file <nl> ppp TestArrayCopyIntrinsicWithUCT . java <nl> + package compiler . arraycopy ; <nl> + import jdk . test . lib . Asserts ; <nl> + import java . util . function . Function ; <nl> + import java . util . function . Supplier ; <nl> + public class TestArrayCopyIntrinsicWithUCT { <nl> + static int zero = 0 ; <nl> + static int zero2 = 0 ; <nl> + static int minusOne = -1 ; <nl> + static int iFld ; <nl> + static int iFld2 ; <nl> + static boolean flag ; <nl> + static byte[] <nl>,arraycopy intrinsic throw incorrect exception,1
4b0e656bb6a823f50507039df7855183ab98cd83,2023-01-26 07:41:15+00:00,new file <nl> ppp TestEmptyLoopMultiplePhis . java <nl> + package compiler . loopopts ; <nl> + public class TestEmptyLoopMultiplePhis { <nl> + static int[] iArrFld = new int[10] ; <nl> + static int x ; <nl> + static void test(int a) { <nl> + int i ; <nl> + for (int j = 6 ; j < 129 ; ++j) { <nl> + a >>= 37388 ; <nl> + a += 1001 ; <nl> + } <nl> + a >>>= -8 ; <nl> + for (i = 0 ; i < 8 ; ++i) { <nl> + iArrFld[i] = <nl>,optimization cause empty loop to temporarily have more than one phi,1
7c6a8db328e386b33b9b7a61fccabaec9a17dc66,2023-02-01 13:11:12+00:00,"mmm CodeCache . java <nl> ppp CodeCache . java <nl> - Type codeHeapType = db . lookupType(""CodeHeap"") ; <nl> - VirtualBaseConstructor<CodeHeap> heapConstructor = <nl> - new VirtualBaseConstructor<>(db, codeHeapType, ""sun . jvm . hotspot . memory"", CodeHeap . class) ; <nl> - heapArray = GrowableArray . create(heapsField . getValue(), heapConstructor) ; <nl> + heapArray = GrowableArray . create(heapsField . getValue(), new StaticBaseConstructor<>(CodeHeap . class)) ; <nl>",have virtual method that be not overridden,1
3f3356bcbd2b2fbc545263dc70a48ee931a4e56b,2023-02-06 07:08:35+00:00,mmm SpNegoContext . java <nl> ppp SpNegoContext . java <nl> - mechContext = null ; <nl> + if (mechContext != null) { <nl> + mechContext . dispose() ; <nl> + mechContext = null ; <nl> + } <nl>,possible leak in spnegocontext dispose,1
522fa1327422e49eaa172d43185b3d85b2561036,2023-02-06 12:25:06+00:00,"mmm Attr . java <nl> ppp Attr . java <nl> - Env<AttrContext> errEnv = env . dup(env . tree) ; <nl> + Env<AttrContext> errEnv = env . dup(env . tree, env . info . dup()) ; <nl> mmm SnippetHighlightTest . java <nl> ppp SnippetHighlightTest . java <nl> + public void testClassErrorRecovery() { //JDK-8301580 <nl> + assertHighlights("""""" <nl> + class C { <nl> + void m <nl> + { <nl> + return  ; <nl> + } <nl> + } <nl> + """""", <nl> + ""Highlight[start=0, end=5, attributes=[KEYWORD]]"", <nl> + ""Highlight[start=6, end=7, attributes=[DECLARATION]]"", <nl> + ""Highlight[start=13, end=17, attributes=[KEYWORD]]"", <nl> + <nl>",recovery do not clear returnresult,1
d53ade12a863cc9e9c2bf2528dd0f0f90416f779,2023-02-06 18:41:04+00:00,"mmm DocCommentParser . java <nl> ppp DocCommentParser . java <nl> + int prefPos = bp ; <nl> - return erroneous(""dc . no . tag . name"", p) ; <nl> + return erroneous(""dc . no . tag . name"", p, prefPos) ; <nl> - return erroneous(""dc . no . tag . name"", p) ; <nl> + return erroneous(""dc . no . tag . name"", p, bp) ; <nl> new file <nl> ppp TestNoTagName . java <nl> + import java . nio . file . Path ; <nl> + import javadoc . tester . JavadocTester ; <nl> + import toolbox . <nl>",caret position in error message,0
2e2e71e1fa326b8d30f018a3e0726bbcd6d24019,2023-02-07 17:40:22+00:00,"mmm MessageDigestSpi . java <nl> ppp MessageDigestSpi . java <nl> - return super . clone() ; <nl> + MessageDigestSpi o = (MessageDigestSpi)super . clone() ; <nl> + if (o . tempArray != null) { <nl> + o . tempArray = tempArray . clone() ; <nl> + } <nl> + return o ; <nl> mmm TestCloneable . java <nl> ppp TestCloneable . java <nl> + import java . nio . ByteBuffer ; <nl> + import java . util . Arrays ; <nl> + import java . util . Random ; <nl> - CloneNotSupportedException { <nl> + CloneNotSupportedException, InterruptedException { <nl> <nl>",clone can result in thread-unsafe clone,1
597a9a485216f6d5b1082eebfa1029524f247e8d,2023-02-09 17:46:35+00:00,mmm BasicLookAndFeel . java <nl> ppp BasicLookAndFeel . java <nl> - if (eventID == MouseEvent . MOUSE_PRESSED) { <nl> - Object object = ev . getSource() ; <nl> - if (!(object instanceof Component)) { <nl> - return ; <nl> - } <nl> - Component component = (Component)object ; <nl> - if (component != null) { <nl> - Component parent = component ; <nl> - while (parent != null && !(parent instanceof Window)) { <nl> - if (parent instanceof JInternalFrame) { <nl> + if (eventID == MouseEvent . MOUSE_PRESSED <nl> + && ev . getSource() instanceof Component parent) { <nl> <nl>,do not need to check for null after check for type,1
f1d76fa92501e45f25a7d33d8c5eee7ef60973eb,2023-02-15 00:44:02+00:00,"mmm ShowRegistersOnAssertTest . java <nl> ppp ShowRegistersOnAssertTest . java <nl> - boolean suppress_assert, <nl> - System . out . println(""Testing "" + (suppress_assert ? ""suppressed"" : ""normal"") + "" "" + (do_assert ? ""assert"" : ""guarantee"") + <nl> + System . out . println(""Testing "" (do_assert ? ""assert"" : ""guarantee"") + <nl> - (suppress_assert ? ""-XX:SuppressErrorAt=/vmError . cpp"" : """"), <nl> - if (suppress_assert) { <nl> - output_detail . shouldMatch("" . *survived intentional crash . *"") ; <nl> - } else { <nl> - output_detail . shouldMatch(""# A fatal error has been detected by the Java Runtime Environment: . <nl>",suppresserrorat develop option,0
a58fa6e73e4594cfb0e46bdbebad48072771e5bd,2023-02-16 14:48:39+00:00,"mmm ClassReader . java <nl> ppp ClassReader . java <nl> + import com . sun . tools . javac . util . ByteBuffer . UnderflowException ; <nl> - char res = buf . getChar(bp) ; <nl> + char res ; <nl> + try { <nl> + res = buf . getChar(bp) ; <nl> + } catch (UnderflowException e) { <nl> + throw badClassFile(""bad . class . truncated . at . offset"", Integer . toString(e . getLength())) ; <nl> + } <nl> - return buf . getByte(bp++) & 0xFF ; <nl> + try { <nl> + return buf . getByte(bp++) <nl>",error generate when empty class file encounter,1
57c9bc39cd50067bce34b8e3c32bf89dc6da3e60,2023-02-17 14:26:37+00:00,mmm InputMethod . java <nl> ppp InputMethod . java <nl> + Pattern isInfo = Pattern . compile("(\\s*)(\\d+)(\\s*)(bci:)( . +)") ; <nl> - if (s . startsWith(" ")) { <nl> + if (isInfo . matcher(s) . matches()) { <nl>,bytecode not show,1
432cf68c4dd1dcce478fccb85163aa0d824474d7,2023-02-20 08:17:00+00:00,mmm SynthFileChooserUI . java <nl> ppp SynthFileChooserUI . java <nl> + if (fc . getFont() instanceof UIResource) { <nl> + fc . setFont(null) ; <nl> + } <nl> new file <nl> ppp JFileChooserFontReset . java <nl> + import java . awt . Font ; <nl> + import javax . swing . JFileChooser ; <nl> + import javax . swing . UIManager ; <nl> + import javax . swing . SwingUtilities ; <nl> + import javax . swing . UnsupportedLookAndFeelException ; <nl> + public class JFileChooserFontReset { <nl> + private static void setLookAndFeel(UIManager . LookAndFeelInfo laf) { <nl> + try <nl>,font not reset after look & feel change,1
b6ecca126846f9c53d554ff061cfe9b7b20a4d12,2023-02-22 08:13:06+00:00,"mmm DatagramChannelImpl . java <nl> ppp DatagramChannelImpl . java <nl> - if (n >= 0) { <nl> + if (n > 0 || (n == 0 && isOpen())) { <nl> - if (n >= 0) { <nl> + if (n > 0 || (n == 0 && isOpen())) { <nl> - if (n >= 0) { <nl> + if (n > 0 || (n == 0 && isOpen())) { <nl> - ((DirectBuffer)bb) . address() + pos, rem, <nl> - sourceSockAddr . address(), <nl> - connected) ; <nl> + ((DirectBuffer)bb) . address() pos, rem, <nl> + sourceSockAddr . address(), <nl> <nl>",do not always throw when the channel be close,1
6b24b4a70fac9ef1e9554fbbb2c7e1aa991ccc33,2023-02-23 19:53:21+00:00,mmm PlatformRecorder . java <nl> ppp PlatformRecorder . java <nl> + private boolean runPeriodicTask ; <nl> + setRunPeriodicTask(true) ; <nl> + setRunPeriodicTask(false) ; <nl> + private void setRunPeriodicTask(boolean runPeriodicTask) { <nl> + synchronized (JVM . CHUNK_ROTATION_MONITOR) { <nl> + this . runPeriodicTask = runPeriodicTask ; <nl> + if (runPeriodicTask) { <nl> + JVM . CHUNK_ROTATION_MONITOR . notifyAll() ; <nl> + } <nl> + } <nl> + } <nl> + if (!runPeriodicTask) { <nl> + duration = Long . MAX_VALUE ; <nl> + } <nl>,periodic task thread spin after record have stop,1
1e3c9fd67efd8428f702c7a3e26ac2b60e0fe618,2023-02-28 03:33:14+00:00,mmm LongSummaryStatistics . java <nl> ppp LongSummaryStatistics . java <nl> + @SuppressWarnings("overloads") <nl> mmm PrimitiveIterator . java <nl> ppp PrimitiveIterator . java <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> mmm Spliterator . java <nl> ppp Spliterator . java <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> mmm Spliterators . java <nl> ppp Spliterators . java <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> mmm Node . java <nl> ppp Node . java <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> + @SuppressWarnings("overloads") <nl> mmm Nodes . java <nl> ppp Nodes . java <nl> <nl>,potentially ambiguous overload warn need an improve scheme,1
ff364c1906f078c13e121a43e60606caff5781e7,2023-03-03 13:16:43+00:00,mmm ProcessTools . java <nl> ppp ProcessTools . java <nl> + import java . lang . Thread . State ; <nl> - if (e instanceof ThreadDeath) { <nl> - return ; <nl> - } <nl>,compilation get threaddeath deprecation warn,1
cac81ddc9259168a5b12c290ae2ce7db25a729fc,2023-03-06 16:10:02+00:00,"mmm VMSupport . java <nl> ppp VMSupport . java <nl> - public static void decodeAndThrowThrowable(long buffer) throws Throwable { <nl> - int encodingLength = U . getInt(buffer) ; <nl> + public static void decodeAndThrowThrowable(long errorOrBuffer, boolean inJVMHeap) throws Throwable { <nl> + if (errorOrBuffer >= -2L && errorOrBuffer <= 0) { <nl> + String context = String . format(""while encoding an exception to translate it %s the JVM heap"", <nl> + inJVMHeap ? ""to"" : ""from"") ; <nl> + if (errorOrBuffer == 0) { <nl> + throw new InternalError(""native errorOrBuffer could not be allocated "" context) ; <nl> + <nl>",cause crash while translate exception,1
dd79410824fa57c7fb1ce56c643bb52540f9a206,2023-03-09 08:13:57+00:00,"mmm Net . java <nl> ppp Net . java <nl> + static <T> void setIpSocketOption(FileDescriptor fd, ProtocolFamily family, <nl> + SocketOption<T> opt, T value) <nl> + throws IOException <nl> + { <nl> + setSocketOption(fd, family, opt, value) ; <nl> + if (family == StandardProtocolFamily . INET6 && shouldSetBothIPv4AndIPv6Options()) { <nl> + try { <nl> + setSocketOption(fd, StandardProtocolFamily . INET, opt, value) ; <nl> + } catch (IOException ignore) { } <nl> + } <nl> + } <nl> - public static boolean isFastTcpLoopbackRequested() { <nl> + private static boolean isFastTcpLoopbackRequested() { <nl> mmm NioSocketImpl . java <nl> ppp NioSocketImpl . <nl>",settrafficclass do not work for ipv4 connection when ipv6 enable,1
9dd7b8799700e938688a28c8a2c14826eee96f5c,2023-03-10 17:09:56+00:00,mmm MetadataRepository . java <nl> ppp MetadataRepository . java <nl> - private final TypeLibrary typeLibrary = TypeLibrary . getInstance() ; <nl> - for (Type type : new ArrayList<>(typeLibrary . getTypes())) { <nl> + TypeLibrary . initialize() ; <nl> + for (Type type : TypeLibrary . getTypes()) { <nl> - typeLibrary . addType(configuration . getPlatformEventType()) ; <nl> + TypeLibrary . addType(configuration . getPlatformEventType()) ; <nl> - typeLibrary . removeType(et . getId()) ; <nl> + TypeLibrary . removeType(et . getId()) ; <nl> - List<Type> types = typeLibrary . getVisibleTypes() ; <nl> + List<Type> types = TypeLibrary . getVisibleTypes() ; <nl> - <nl>,typelibrary class not thread safe,1
eefbaa29567f89e0c28425fe4ed4bddef3a14891,2023-03-16 05:00:40+00:00,mmm CAccessible . java <nl> ppp CAccessible . java <nl> + if (thisRole == AccessibleRole . RADIO_BUTTON) { <nl> + valueChanged(ptr) ; <nl> + } <nl> + if (thisRole == AccessibleRole . TOGGLE_BUTTON) { <nl> + valueChanged(ptr) ; <nl> + } <nl>,screen magnifier do not reflect jradiobutton value change,1
f8482c20f4f55d4fc5b304a33c87775b5acfe2b8,2023-03-18 00:23:58+00:00,mmm VMState . java <nl> ppp VMState . java <nl> + import java . lang . ref . ReferenceQueue ; <nl> + private final ReferenceQueue<VMListener> listenersReferenceQueue = new ReferenceQueue<>() ; <nl> + private void removeUnreachableListeners() { <nl> + if (listenersReferenceQueue . poll() == null) { <nl> + return ; // There are no unreachable listeners <nl> + } <nl> + while (listenersReferenceQueue . poll() != null) <nl> +  ; <nl> + Iterator<WeakReference<VMListener>> iter = listeners . iterator() ; <nl> + while (iter . hasNext()) { <nl> + VMListener l = iter . next() . get() ; <nl> + <nl>,leak in case of many started-dead thread,1
ded6a8131970ac2f7ae59716769e6f6bae3b809a,2023-03-20 13:55:47+00:00,mmm CompletableFuture . java <nl> ppp CompletableFuture . java <nl> - if (ex == null && f != null && !f . isDone()) <nl> + if (f != null && !f . isDone()) <nl> new file <nl> ppp CompletableFutureOrTimeoutExceptionallyTest . java <nl> + import java . time . Duration ; <nl> + import java . util . concurrent . CompletableFuture ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + import org . junit . jupiter . api . Test ; <nl> + class CompletableFutureOrTimeoutExceptionallyTest { <nl> + @Test <nl> + void testOrTimeoutWithCompleteExceptionallyDoesNotLeak() { <nl> <nl>,leak if the future complete exceptionally,1
0156909ab38072869e2eb9f5049042b9199d14a0,2023-03-22 06:13:34+00:00,"mmm ClassHierarchyImpl . java <nl> ppp ClassHierarchyImpl . java <nl> - private static System . Logger logger ; <nl> - if (logger == null) <nl> - logger = System . getLogger(""jdk . internal . classfile"") ; <nl> - if (logger . isLoggable(System . Logger . Level . DEBUG)) <nl> - logger . log(System . Logger . Level . DEBUG, ""Could not resolve class "" + classDesc . displayName()) ; <nl> - return new ClassHierarchyResolver . ClassHierarchyInfo(classDesc, false, null) ; <nl> + throw new IllegalArgumentException(""Could not resolve class "" classDesc . displayName()) ; <nl> + private static final ClassHierarchyInfo CHI_Object <nl>",api class hierarchy make assumption when class be not resolve,0
c4338620b7651f4da03ce4cfddb9e5b053fddb6a,2023-03-23 02:58:01+00:00,"mmm CSS . java <nl> ppp CSS . java <nl> - new Attribute(""background-position"", null, false) ; <nl> + new Attribute(""background-position"", ""0% 0%"", false) ; <nl> new file <nl> ppp CSSAttributeComplianceTest . java <nl> + import javax . swing . text . html . CSS . Attribute ; <nl> + public class CSSAttributeComplianceTest { <nl> + public static void main(String[] argv) { <nl> + String val = Attribute . BACKGROUND_POSITION . getDefaultValue() ; <nl> + if (!""0% 0%"" . equals(val)) { <nl> + System . out . println(""Attribute . BACKGROUND_POSITION value : "" val) ; <nl> + throw new RuntimeException(""Expected <nl>",background_position be not w3c spec compliant,0
e2cfcfbfa90017b1b4ecbf6fb2f0f782c88456a3,2023-03-23 07:50:57+00:00,mmm SwingUtilities . java <nl> ppp SwingUtilities . java <nl> + if (event . getSource() instanceof JToggleButton tb) { <nl> + commandO = action . getValue(Action . SELECTED_KEY) ; <nl> + if (commandO != null) { <nl> + tb . setSelected(!tb . isSelected()) ; <nl> + } <nl> + } <nl> new file <nl> ppp TestSelectedKey . java <nl> + import java . awt . BorderLayout ; <nl> + import java . awt . Dimension ; <nl> + import java . awt . EventQueue ; <nl> + import java . awt . event . ActionEvent ; <nl> + import <nl>,not toggle when use key binding,1
6fa25cc134e8a6787490e080fb98c2d61cf0b049,2023-03-23 16:06:47+00:00,"mmm Flow . java <nl> ppp Flow . java <nl> + for (int i = firstadr ; i < nextadr ; i++) { <nl> + JCVariableDecl vardecl = vardecls[i] ; <nl> + VarSymbol var = vardecl . sym ; <nl> + if (var . owner == classDef . sym && var . isStatic()) { <nl> + checkInit(TreeInfo . diagnosticPositionFor(var, vardecl), var) ; <nl> + } <nl> + } <nl> - if (var . owner == classDef . sym) { <nl> + if (var . owner == classDef . sym && !var . isStatic()) { <nl> - !var . isStatic() <nl>",compiler error `` variable not initialize in the default constructor '' be not apt in case of static final variable,1
5ccdc0b0252e11f722b3824ecb487df07cb605c5,2023-03-27 13:40:57+01:00,mmm Thread . java <nl> ppp Thread . java <nl> + import jdk . internal . vm . annotation . Stable ; <nl> - private volatile ThreadContainer container ;  // @Stable candidate? <nl> + private @Stable ThreadContainer container ; <nl>,thread.container be stable,1
138cdc9283ae8f3367e51f0fe7e27833118dd7cb,2023-03-27 15:01:45+00:00,"mmm TransPatterns . java <nl> ppp TransPatterns . java <nl> + appendBreakIfNeeded(tree, cases, c . head) ; <nl> - appendBreakIfNeeded(tree, c) ; <nl> - private void appendBreakIfNeeded(JCTree switchTree, JCCase c) { <nl> - if (c . caseKind == CaseTree . CaseKind . RULE) { <nl> - JCBreak brk = make . at(TreeInfo . endPos(c . stats . last())) . Break(null) ; <nl> + void appendBreakIfNeeded(JCTree switchTree, List<JCCase> cases, JCCase c) { <nl> + if (c . caseKind == CaseTree . CaseKind . RULE || (cases . last() == c && c . completesNormally)) { <nl> + JCTree pos = <nl>",exception thrown when break stmt be miss,1
395a4ce0dd4181bbb4bc0888038309901ebf8fea,2023-03-28 11:14:09+00:00,mmm UnixPath . java <nl> ppp UnixPath . java <nl> - private volatile String stringValue ; <nl> + private String stringValue ; <nl> + String stringValue = this . stringValue ; <nl> - stringValue = fs . normalizeJavaPath(Util . toString(path)) ;     // platform encoding <nl> + this . stringValue = stringValue = fs . normalizeJavaPath(Util . toString(path)) ;     // platform encoding <nl>,need not be volatile,1
ca745cb426a3287167ba5bbf1a554e56a84fd91c,2023-03-28 17:55:23+00:00,"mmm Matcher . java <nl> ppp Matcher . java <nl> + import java . io . IOException ; <nl> - StringBuilder result = new StringBuilder() ; <nl> - appendExpandedReplacement(replacement, result) ; <nl> - sb . append(text, lastAppendPosition, first) ; <nl> - sb . append(result) ; <nl> + int curLen = sb . length() ; <nl> + try { <nl> + sb . append(text, lastAppendPosition, first) ; <nl> + appendExpandedReplacement(sb, replacement) ; <nl> + } catch (IllegalArgumentException e) { <nl> + sb . setLength(curLen) ; <nl> + throw e ; <nl> + } <nl> - StringBuilder result = new StringBuilder() <nl>",should not create new stringbuilder instance,1
1d7bb1ffa0b80d2ef1cd991aa33f13c9b7c47dcc,2023-03-30 16:07:47+00:00,"mmm DirectMethodHandleAccessor . java <nl> ppp DirectMethodHandleAccessor . java <nl> - try { <nl> - return invoker . invokeExact(target, obj, args) ; <nl> - } catch (IllegalArgumentException e) { <nl> - throw new InvocationTargetException(e) ; <nl> - } <nl> + return invoker . invokeExact(target, obj, args) ; <nl> new file <nl> ppp CallerSensitiveMethodInvoke . java <nl> + import org . junit . jupiter . api . Test ; <nl> + import static org . junit . jupiter . api . Assertions . * ; <nl> + import java . lang . reflect . Field ; <nl> + import java <nl>",invoke rewraps invocationtargetexception if a caller-sensitive method throw iae,1
ecec611af6c6314d7a834392f38468ad3f390e2d,2023-04-03 05:36:04+00:00,new file <nl> ppp TestJMenuScreenMagnifier . java <nl> + import java . lang . reflect . InvocationTargetException ; <nl> + import javax . swing . JFrame ; <nl> + import javax . swing . JMenu ; <nl> + import javax . swing . JMenuBar ; <nl> + import javax . swing . JMenuItem ; <nl> + import javax . swing . SwingUtilities ; <nl> + public class TestJMenuScreenMagnifier { <nl> + private static JFrame frame ; <nl> + private static final String INSTRUCTIONS = <nl> + "1) Enable Screen magnifier on theMac \n\n" + <nl> + "System Preference -> <nl>,screen magnifier do not show jmenu name,1
35cb303a2c0c8b32de257c02e012a1928a6b4594,2023-04-05 21:54:38+00:00,mmm Thread . java <nl> ppp Thread . java <nl> - private long eetop ; <nl> + private volatile long eetop ; <nl> - return isAlive0() ; <nl> + return eetop != 0 ; <nl> - private native boolean isAlive0() ; <nl> new file <nl> ppp IsAlive . java <nl> + public class IsAlive { <nl> + static boolean spinnerDone ; <nl> + private static void spin() { <nl> + try { <nl> + while (!Thread . currentThread() . isInterrupted()) { <nl> + Thread . sleep(100) ; <nl> + } <nl> + } catch (InterruptedException ie) { <nl> + <nl>,do not need to call into the vm,1
c57af319f668e10b2b357bb961903a6236d5521f,2023-04-19 15:56:34+00:00,mmm SystemModulesPlugin . java <nl> ppp SystemModulesPlugin . java <nl> - MTD_REQUIRES_ARRAY) ; <nl> + MTD_REQUIRES_ARRAY) <nl> +  . pop() ; <nl> - MTD_EXPORTS_ARRAY) ; <nl> + MTD_EXPORTS_ARRAY) <nl> +  . pop() ; <nl> - MTD_OPENS_ARRAY) ; <nl> + MTD_OPENS_ARRAY) <nl> +  . pop() ; <nl> - MTD_PROVIDES_ARRAY) ; <nl> + MTD_PROVIDES_ARRAY) <nl> +  . pop() ; <nl>,generate code that do not pop when return value not use,1
67dd8414321677e3fc41fa1470c857c0afaa4259,2023-05-01 13:41:00+00:00,mmm AbstractLinker . java <nl> ppp AbstractLinker . java <nl> + import jdk . internal . foreign . layout . ValueLayouts ; <nl> + import java . lang . foreign . AddressLayout ; <nl> + import java . util . List ; <nl> + function = stripNames(function) ; <nl> + function = stripNames(function) ; <nl> + private static MemoryLayout stripNames(MemoryLayout ml) { <nl> + return switch (ml) { <nl> + case StructLayout sl -> MemoryLayout . structLayout(stripNames(sl . memberLayouts())) ; <nl> + case UnionLayout ul -> MemoryLayout . unionLayout(stripNames(ul . memberLayouts())) ; <nl> + case SequenceLayout sl -> MemoryLayout <nl>,cache should not take layout name into account,1
3aff5eacbd90cc5fc791c9c96b8d114caee9ddb5,2023-05-09 16:36:21+00:00,mmm ProcessTools . java <nl> ppp ProcessTools . java <nl> + vthread . join() ; <nl> - throw new RuntimeException(tg . uncaughtThrowable) ; <nl> + throw tg . uncaughtThrowable ; <nl> - vthread . join() ; <nl> - throw new RuntimeException(tg . uncaughtThrowable) ; <nl> + throw tg . uncaughtThrowable ; <nl>,should wait until vthread be complete before check exception,1
ba9714d44ceabdb98078a4338fb8e8a3e22adcbe,2023-05-11 09:45:45+00:00,"mmm Linker . java <nl> ppp Linker . java <nl> - @CallerSensitive <nl> - Reflection . ensureNativeAccess(Reflection . getCallerClass(), Linker . class, ""nativeLinker"") ; <nl> - default MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function, Option .  .  .  options) { <nl> - SharedUtils . checkSymbol(symbol) ; <nl> - return downcallHandle(function, options) . bindTo(symbol) ; <nl> - } <nl> + @CallerSensitive <nl> + MethodHandle downcallHandle(MemorySegment symbol, FunctionDescriptor function, Option .  .  .  options) ; <nl> + @CallerSensitive <nl> + @CallerSensitive <nl> mmm AbstractLinker . java <nl> ppp AbstractLinker . java <nl> + import jdk . internal <nl>",nativelinker should not be restrict,1
3c9ec26370dfae5d1230b6b69ae26122fe42e51d,2023-05-18 06:54:01+00:00,mmm ClassRemapper . java <nl> ppp ClassRemapper . java <nl> - import java . lang . constant . ConstantDesc ; <nl> - import java . lang . constant . DirectMethodHandleDesc ; <nl> - import java . lang . constant . DynamicCallSiteDesc ; <nl> - import java . lang . constant . DynamicConstantDesc ; <nl> - import java . lang . constant . MethodHandleDesc ; <nl> - import java . lang . constant . MethodTypeDesc ; <nl> - import java . util . List ; <nl> - import jdk . internal . classfile . Annotation ; <nl> - import jdk <nl>,api component implementation should not be expose,1
25868b95ee91eee9e7611ad18540a7e30032e49b,2023-05-19 08:04:32+00:00,"mmm Matcher . java <nl> ppp Matcher . java <nl> - return toMatchResult(text . toString()) ; <nl> - } <nl> - private MatchResult toMatchResult(String text) { <nl> - return new ImmutableMatchResult(this . first, <nl> - this . last, <nl> - groupCount(), <nl> - this . groups . clone(), <nl> - text, <nl> - namedGroups()) ; <nl> + String capturedText = hasMatch() <nl> + ? text . subSequence(first, last) . toString() <nl> + : null ; <nl> + return new ImmutableMatchResult(first, last, groupCount(), <nl> + groups . clone(), capturedText, <nl> + namedGroups() <nl> + ) ; <nl> - private final <nl>",$ immutablematchresult should be optimize to reduce space usage,1
3d550f748521443dc2e148aa4f786060419f1113,2023-05-22 11:37:12+00:00,mmm JPopupMenu . java <nl> ppp JPopupMenu . java <nl> + import java . awt . Window ; <nl> + private Window getMenuInvoker() { <nl> + if (invoker instanceof Window menuInvoker) { <nl> + return menuInvoker ; <nl> + } else { <nl> + return invoker == null <nl> + ? null <nl> + : SwingUtilities . getWindowAncestor(invoker) ; <nl> + } <nl> + } <nl> - if(b) { <nl> + if (b) { <nl> + if (Toolkit . getDefaultToolkit() instanceof SunToolkit sunToolkit) { <nl> + sunToolkit . dismissPopupOnFocusLostIfNeeded(getMenuInvoker()) ; <nl> + } <nl> - } else if(popup != <nl>,be not close on click outside of area control by xwayland,1
18e2446420d3376acaa2652d70474c2d3a85e2ac,2023-05-22 12:03:13+00:00,new file <nl> ppp DTLSWontNegotiateV10 . java <nl> + import jdk . test . lib . security . SecurityUtils ; <nl> + import javax . net . ssl . * ; <nl> + import java . io . IOException ; <nl> + import java . net . * ; <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . file . Path ; <nl> + import java . util . ArrayList ; <nl> + import java . util . List ; <nl> + import java . util . concurrent . atomic . AtomicInteger <nl>,dtls 1.0 can not be negotiate,0
1451ac1770aa1fde0a96e475dfe9a92bc76b4eb9,2023-05-24 21:03:47+00:00,"mmm SealedGraph . java <nl> ppp SealedGraph . java <nl> - for (TypeElement subNode : permittedSubclasses(node, exports)) { <nl> - if (isInPublicApi(node, exports) && isInPublicApi(subNode, exports)) { <nl> - state . addEdge(node, subNode) ; <nl> + if (!(node . getModifiers() . contains(Modifier . SEALED) || node . getModifiers() . contains(Modifier . FINAL))) { <nl> + state . addNonSealedEdge(node) ; <nl> + } else { <nl> + for (TypeElement subNode : permittedSubclasses(node, exports)) { <nl> + if (isInPublicApi(node, exports) && isInPublicApi(subNode, exports)) { <nl> + state . addEdge(node, subNode) ; <nl> + } <nl> + traverse(state, subNode, exports) ; <nl> <nl>",class hierarchy graph do not distinguish non-sealed class,1
dfd3da3f52480f68f653beb1e720691f8232ace7,2023-06-01 08:04:45+00:00,"new file <nl> ppp TestHoistedPredicateForNonRangeCheck . java <nl> + package compiler . predicates ; <nl> + import jdk . test . lib . Asserts ; <nl> + import java . util . Calendar ; <nl> + import java . util . Date ; <nl> + public class TestHoistedPredicateForNonRangeCheck { <nl> + static int iFld, iFld2 ; <nl> + static int[] iArr = new int[100] ; <nl> + public static void main(String[] args) { <nl> + if (args . length == 0) { <nl> + Integer . compareUnsigned(34, 34) ; // Ensure Integer class is loaded and we do not <nl>",predication should not hoist range check with trap on success projection by negate their condition,1
a6109bf1ea2acbebd6a3517813c0b82fdba00c2f,2023-06-01 11:50:20+00:00,mmm EntryMap . java <nl> ppp EntryMap . java <nl> - x = -1 >>> Long . numberOfLeadingZeros(x 1) ; <nl> - return x + 1 ; <nl> + return 1L << -Long . numberOfLeadingZeros(x - 1) ; <nl>,nextpoweroftwo math problem,1
ac41c030030c3d31815474c793ac9c420c47e22c,2023-06-05 08:36:47+00:00,mmm KeychainStore . java <nl> ppp KeychainStore . java <nl> - Certificate certElem ; <nl> + if (entries . contains(alias . toLowerCase())) { <nl> + int uniqueVal = 1 ; <nl> + String originalAlias = alias ; <nl> + var co = entries . get(alias . toLowerCase()) ; <nl> + while (co != null) { <nl> + if (co instanceof TrustedCertEntry tco) { <nl> + if (tco . cert . equals(tce . cert)) { <nl> + return ; <nl> + } <nl> + } <nl> + alias = originalAlias " " uniqueVal++ ; <nl> + co = entries . <nl>,"of type keychainstore , provider apple do not show all trust certificate",0
73352b68c4e19929305ce430cb74ca850b752d22,2023-06-05 16:34:45+00:00,"mmm SunToolkit . java <nl> ppp SunToolkit . java <nl>  <nl> mmm XDragSourceContextPeer . java <nl> ppp XDragSourceContextPeer . java <nl> + import java . awt . Toolkit ; <nl> + private static boolean isXWaylandDndAwareWindow(long window) { <nl> + Toolkit toolkit = Toolkit . getDefaultToolkit() ; <nl> + if (!(toolkit instanceof SunToolkit) <nl> + || !((SunToolkit) toolkit) . isRunningOnWayland()) { <nl> + return false ; <nl> + } <nl> + WindowPropertyGetter wpg = <nl> + new WindowPropertyGetter(window, XDnDConstants . XA_XdndAware, 0, 1, <nl> + false, XConstants . AnyPropertyType) ; <nl> + try { <nl> + int status = <nl>",and drop do not work in java > wayland app direction,0
6d155a47f13ff80cf7a9de363fc5ae2943b6603a,2023-06-06 00:19:50+00:00,mmm SequencedMap . java <nl> ppp SequencedMap . java <nl> + import jdk . internal . util . NullableKeyValueHolder ; <nl> - return it . hasNext() ? Map . Entry . copyOf(it . next()) : null ; <nl> + return it . hasNext() ? new NullableKeyValueHolder<>(it . next()) : null ; <nl> - return it . hasNext() ? Map . Entry . copyOf(it . next()) : null ; <nl> + return it . hasNext() ? new NullableKeyValueHolder<>(it . next()) : null ; <nl> - var entry = Map . Entry . copyOf(it . next()) ; <nl> + var entry <nl>,firstentry throw npe when first entry have null key or value,1
177e8327d685444d63235567f2a9bde0ec3d51cf,2023-06-07 13:16:40+00:00,mmm ThreadStateTest . java <nl> ppp ThreadStateTest . java <nl> + private static native void testGetThreadState(Thread thread) ; <nl> + private static native void testGetThreadListStackTraces(Thread thread) ; <nl> + testGetThreadState(Thread . currentThread()) ; <nl> + testGetThreadListStackTraces(Thread . currentThread()) ; <nl> - virtualThreads . add(factory . newThread(FOO)) ; <nl> + Thread vt = factory . newThread(FOO) ; <nl> + vt . setName("VT-" i) ; <nl> + virtualThreads . add(vt) ; <nl>,getthreadstate on carrier should return state_waiting,1
33bb64f24fdffdb2b1a5f21ff432b1cee9ead498,2023-06-07 15:17:43+00:00,mmm ThreadStateTest . java <nl> ppp ThreadStateTest . java <nl> - private static native void testGetThreadState(Thread thread) ; <nl> - private static native void testGetThreadListStackTraces(Thread thread) ; <nl> - testGetThreadState(Thread . currentThread()) ; <nl> - testGetThreadListStackTraces(Thread . currentThread()) ; <nl> - Thread vt = factory . newThread(FOO) ; <nl> - vt . setName("VT-" + i) ; <nl> - virtualThreads . add(vt) ; <nl> + virtualThreads . add(factory . newThread(FOO)) ; <nl>,jvmti getthreadstate on carrier should return state_waiting,1
79a4ac791c826656b3e984fe54dc472c62efd028,2023-06-08 07:25:25+00:00,"mmm JShellTool . java <nl> ppp JShellTool . java <nl> - hard(""  %s %s = %s"", vk . typeName(), vk . name(), val) ; <nl> + String varName = vk . name() ; <nl> + hard(""  %s %s = %s"", vk . typeName(), varName . isEmpty() ? ""_"" : varName, val) ; <nl> mmm Eval . java <nl> ppp Eval . java <nl> - int nameStart = compileSource . lastIndexOf(name, nameMax) ; <nl> - if (nameStart < 0) { <nl> - wname = Wrap . identityWrap(name) ; <nl> + String fieldName ; <nl> + if (name . <nl>",variable can not be use in jshell,1
4d4706967d44b6908406818bb135f94130f373a0,2023-06-12 08:49:57+00:00,"mmm BigContrastMetalTheme . java <nl> ppp BigContrastMetalTheme . java <nl> - table . put(""TextPane . font"", textBorder) ; <nl> + table . put(""TextPane . font"", controlFont) ; <nl> mmm MetalTitlePane . java <nl> ppp MetalTitlePane . java <nl> - xOffset += leftToRight ? IMAGE_WIDTH + 5 : IMAGE_WIDTH 5 ; <nl> + xOffset += leftToRight ? menuBar . getWidth() 5 : - menuBar . getWidth() - 5 ; <nl>",demo  window title not display fully in low vision theme,1
bed9161c815b5b4773f36eac7e8dadc1384c7fd1,2023-06-13 16:34:58+00:00,mmm DSA . java <nl> ppp DSA . java <nl> + this . signingRandom = null ; <nl> new file <nl> ppp SecureRandomReset . java <nl> + import java . security . KeyPairGenerator ; <nl> + import java . security . PrivateKey ; <nl> + import java . security . SecureRandom ; <nl> + import java . security . Signature ; <nl> + import java . util . Arrays ; <nl> + import java . util . Random ; <nl> + public class SecureRandomReset { <nl> + public static void main(String[] args) throws Exception { <nl> + KeyPairGenerator g <nl>,do not reset securerandom when initsign be call again,1
01623f6a5724d3eb250c48656be0aaf28df11750,2023-06-21 09:16:12+00:00,mmm Flow . java <nl> ppp Flow . java <nl> - sym . pos < currentTree . getStartPosition()) { <nl> + sym . pos < getCurrentTreeStartPosition()) { <nl> + int getCurrentTreeStartPosition() { <nl> + return currentTree instanceof JCCase cse ? cse . guard . getStartPosition() <nl> + : currentTree . getStartPosition() ; <nl> + } <nl> mmm GuardsErrors . java <nl> ppp GuardsErrors . java <nl> + case Integer v when v != null -> { <nl> + v = null ; <nl> + } <nl>,final condition not enforce in guard for bind variable from the same case,1
826dcb5424a931953ac1964e7893aec7ec839862,2023-06-21 12:27:02+00:00,new file <nl> ppp TestAbortVmOnException . java <nl> + import jdk . test . lib . process . OutputAnalyzer ; <nl> + import jdk . test . lib . process . ProcessTools ; <nl> + import java . io . IOException ; <nl> + public class TestAbortVmOnException { <nl> + public static void main(String[] args) throws Exception { <nl> + if (args . length == 1) { <nl> + if (args[0] . equals("throwExceptionWithMessage")) { <nl> + throw new MyAbortException("MyExceptionMessage") ; <nl> + } else { <nl> + throw new MyAbortException() ; <nl> + } <nl> + } <nl> + <nl>,-xx  abortvmonexception do not work if all method in the call stack be compile with c1 and there be no exception handler,1
8e047029e811a9e5758d564249ee794f584c9dc2,2023-06-22 06:45:19+00:00,"mmm ConstMethod . java <nl> ppp ConstMethod . java <nl> + stackMapData               = type . getAddressField(""_stackmap_data"") ; <nl> + private static AddressField stackMapData ; // Raw stackmap data for the method (#entries entries) <nl> + public boolean hasStackMapTable() { <nl> + return stackMapData . getValue(getAddress()) != null ; <nl> + } <nl> + public U1Array getStackMapData() { <nl> + Address addr = stackMapData . getValue(getAddress()) ; <nl> + return VMObjectFactory . newObject(U1Array . class, addr) ; <nl> + } <nl> mmm Method . java <nl> <nl>",do not include stackmaptables when dumpclass file,1
e624484ecf2f31d9e52caf3fda2d18f0ef82123f,2023-06-26 15:55:36+00:00,"mmm Config . java <nl> ppp Config . java <nl> - KrbException ke = new KrbException(""Cannot locate KDC"") ; <nl> + KrbException ke = new KrbException(""Cannot locate KDC for "" realm) ; <nl> mmm CredentialsUtil . java <nl> ppp CredentialsUtil . java <nl> + KrbException ke = null ; <nl> + ke = e ; <nl> - return serviceCredsSingle(options, asCreds, cname, <nl> - asCreds . getClientAlias(), sname, sname, s4u2Type, <nl> - user, additionalCreds, extraPAs) ; <nl> + try { <nl> + return serviceCredsSingle(options, asCreds, cname, <nl> + asCreds . getClientAlias(), sname, sname, s4u2Type, <nl> + user, additionalCreds, extraPAs) ; <nl>","kerberos tgt referral , if krb5.conf be miss realm , bad exception message",1
79c056ec8b73de8e4841f9fdea494821a15e7313,2023-06-27 04:56:21+00:00,mmm CFileDialog . java <nl> ppp CFileDialog . java <nl> + @Override <nl> + public GraphicsConfiguration getAppropriateGraphicsConfiguration( <nl> + GraphicsConfiguration gc) { <nl> + return gc ; <nl> + } <nl> mmm Window . java <nl> ppp Window . java <nl> + WindowPeer peer = (WindowPeer) this . peer ; <nl> + if (peer != null) { <nl> + gc = peer . getAppropriateGraphicsConfiguration(gc) ; <nl> + } <nl> mmm WindowPeer . java <nl> ppp WindowPeer . java <nl> + GraphicsConfiguration getAppropriateGraphicsConfiguration( <nl> + GraphicsConfiguration gc) ; <nl> new file <nl> ppp MultiscreenTransparencyTest . java <nl> + import java <nl>,of a frame be change when the frame be move to another screen,0
ded137073ac1b2086a577508172626898999e275,2023-06-28 22:50:24+00:00,mmm BytecodeTracerTest . java <nl> ppp BytecodeTracerTest . java <nl> - import java . io . Serializable ; <nl> + import java . lang . invoke . MethodHandle ; <nl> + private final static String Linked_className = Linked . class . getName() ; <nl> + private final static String Linked2_className = Linked2 . class . getName() ; <nl> + private final static String Unlinked_className = Unlinked . class . getName() ; <nl> + private final static String Unlinked2_className = Unlinked2 . class . getName() ; <nl> + public static void staticMethod()   { } <nl> + public void <nl>,can not handle unlinked class,0
11a5115caf179a1bbed5311e12ed3851e026c5c5,2023-07-13 01:55:37+00:00,new file <nl> ppp VThreadTLSTest . java <nl> + import com . sun . tools . attach . VirtualMachine ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + import java . util . concurrent . Executors ; <nl> + public class VThreadTLSTest { <nl> + static final String AGENT_LIB = "VThreadTLSTest" ; <nl> + static volatile boolean attached ; <nl> + static volatile boolean failed ; <nl> + static void log(String msg) { System . out . println(msg) ; } <nl> + static native long getTLS() ; <nl> + static native void setTLS(long value) <nl>,not work for vthreads mount during jvmti attach,1
d1fa1a868636dc15e96d1b4bf4acf28257c9551f,2023-07-14 09:54:56+00:00,"mmm Attr . java <nl> ppp Attr . java <nl> + } else if (!constants . add(enumSym)) { <nl> + log . error(label . pos(), Errors . DuplicateCaseLabel) ; <nl> + } else if (!constants . add(s)) { <nl> + log . error(label . pos(), Errors . DuplicateCaseLabel) ; <nl> mmm EnumSwitchQualifiedErrors . java <nl> ppp EnumSwitchQualifiedErrors . java <nl> + int testQualifiedDuplicate1(Object o) { <nl> + return switch(o) { <nl> + case E1 . A -> 1 ; <nl> + case E1 . A -> 2 ; <nl> + default -> -1 ; <nl> + } ; <nl> <nl>",qualify enum constant not detect,1
3fb9d117e353af6f007e701a8cd635763bd3cc28,2023-07-17 11:53:32+00:00,mmm Classfile . java <nl> ppp Classfile . java <nl> - int PREVIEW_MINOR_VERSION = -1 ; <nl> + int PREVIEW_MINOR_VERSION = 65535 ; <nl> new file <nl> ppp PreviewMinorVersionTest . java <nl> + import jdk . internal . classfile . Classfile ; <nl> + import org . junit . jupiter . api . Test ; <nl> + import java . lang . constant . ClassDesc ; <nl> + import static java . lang . constant . ConstantDescs . * ; <nl> + import static jdk . internal . classfile . Classfile . * ; <nl> + import static org <nl>,do not match that read from class file,1
028068a655bb08e016e7a915c2b2f6abc1e480a0,2023-07-19 13:17:37+00:00,"mmm DatagramChannelImpl . java <nl> ppp DatagramChannelImpl . java <nl> + import java . net . DatagramPacket ; <nl> - SocketAddress blockingReceive(ByteBuffer dst, long nanos) throws IOException { <nl> + void blockingReceive(DatagramPacket p, long nanos) throws IOException { <nl> + Objects . requireNonNull(p) ; <nl> + assert nanos >= 0 ; <nl> - @SuppressWarnings(""removal"") <nl> - SecurityManager sm = System . getSecurityManager() ; <nl> - boolean connected = isConnected() ; <nl> - SocketAddress sender ; <nl> - do { <nl> - if (nanos > 0) { <nl> - sender = trustedBlockingReceive(dst, nanos) ; <nl> - } else { <nl> <nl>",'s socket adaptor do not release carrier thread when block in receive,1
dfe764e3f85784752d69fd51306644732e808d38,2023-07-20 02:14:19+00:00,"mmm LauncherData . java <nl> ppp LauncherData . java <nl> - if ((moduleInfo != null) != isModular) { <nl> + if ((moduleInfo == null) == isModular) { <nl> - if (value . isPresent()) { <nl> - return value . get() . toString() ; <nl> - } <nl> - return null ; <nl> + return value . map(Object::toString) . orElse(null) ; <nl> - private static <T> T getPathParam(Map<String, ? super Object> params, <nl> - String paramName, Supplier<T> func) throws ConfigException { <nl> + private static <T> T getPathParam(String paramName, Supplier<T> func) throws ConfigException { <nl> - return getPathParam(params, paramName, () <nl>",do not work for module project unless -module-path be specify,1
84b325b844c08809448a9c073a11443d9e3c3f8e,2023-07-21 14:19:57+00:00,new file <nl> ppp THPsInThreadStackPreventionTest . java <nl> + import jdk . test . lib . process . OutputAnalyzer ; <nl> + import jdk . test . lib . process . ProcessTools ; <nl> + import jtreg . SkippedException ; <nl> + import java . io . BufferedReader ; <nl> + import java . io . FileReader ; <nl> + import java . io . IOException ; <nl> + import java . util . ArrayList ; <nl> + import java . util . Arrays ; <nl> + import java . util . Objects ; <nl> + import java . <nl>,cause huge r due to thread start time issue,1
d55d7e8d87670043dd22ec6a3fb6cc49b39000cd,2023-07-21 15:21:02+00:00,"mmm StreamEncoder . java <nl> ppp StreamEncoder . java <nl> - flushLeftoverChar(null, true) ; <nl> - try { <nl> + try (ch ; out) { <nl> + flushLeftoverChar(null, true) ; <nl> - if (ch != null) <nl> - ch . close() ; <nl> - else { <nl> - try { <nl> - out . flush() ; <nl> - } finally { <nl> - out . close() ; <nl> - } <nl> - } <nl> + if (out != null) <nl> + out . flush() ; <nl> new file <nl> ppp CloseWriterOnFailedFlush . java <nl> + import java . io <nl>","not close with disk full error , file resource leak",1
c6396dceb9a64578d5b335af27ad1d968190a1fa,2023-07-25 18:26:23+00:00,"mmm MessageFormat . java <nl> ppp MessageFormat . java <nl>  <nl> deleted file <nl> mmm Bug6481179 . java <nl> - import java . text . MessageFormat ; <nl> - import java . text . ParseException ; <nl> - public class Bug6481179 { <nl> - public static void main(String[] args) { <nl> - boolean err = false ; <nl> - try { <nl> - MessageFormat . format(""Testdata {1,invalid_format_type}"", <nl> - new Object[] { ""val0"", ""val1"" }) ; <nl> - System . err . println(""Error: IllegalArgumentException should be thrown . "") ; <nl> - err = true ; <nl> - <nl>",null locale generates nullpointerexception,1
86821a7ce89c51cc3650228c55a4a88c743209e4,2023-07-27 08:39:32+00:00,"mmm CompilerToVM . java <nl> ppp CompilerToVM . java <nl> - JavaConstant resolvePossiblyCachedConstantInPool(HotSpotConstantPool constantPool, int cpi) { <nl> - return resolvePossiblyCachedConstantInPool(constantPool, constantPool . getConstantPoolPointer(), cpi) ; <nl> + JavaConstant lookupConstantInPool(HotSpotConstantPool constantPool, int cpi, boolean resolve) { <nl> + return lookupConstantInPool(constantPool, constantPool . getConstantPoolPointer(), cpi, resolve) ; <nl> - private native JavaConstant resolvePossiblyCachedConstantInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi) ; <nl> + private native JavaConstant lookupConstantInPool(HotSpotConstantPool constantPool, long constantPoolPointer, int cpi, boolean resolve) ; <nl> - int resolveInvokeDynamicInPool(HotSpotConstantPool constantPool, int cpi) { <nl> - return resolveInvokeDynamicInPool(constantPool, constantPool . getConstantPoolPointer(), cpi) ; <nl> + int decodeIndyIndexToCPIndex(HotSpotConstantPool constantPool, int encoded_indy_index, boolean resolve) { <nl>",should not force eager resolution,1
c27c87786a612501e080222dd8647f94b3b261e6,2023-07-27 21:24:03+00:00,"mmm RSACipher . java <nl> ppp RSACipher . java <nl> - result = RSACore . rsa(paddingCopy, privateKey, true) ; <nl> + if (paddingCopy != null) { <nl> + result = RSACore . rsa(paddingCopy, privateKey, true) ; <nl> + } else { <nl> + throw new BadPaddingException(""Padding error in signing"") ; <nl> + } <nl> + if (result == null) { <nl> + throw new BadPaddingException <nl> + (""Padding error in verification"") ; <nl> + } <nl> - result = RSACore . rsa(paddingCopy, publicKey) ; <nl> + if (paddingCopy != null) { <nl> + result = RSACore . rsa(paddingCopy, publicKey) <nl>",badpaddingexception only if it will be throw,1
a3d67231a71fbe37c509fcedd54c679b4644c0d9,2023-07-28 10:25:22+00:00,"mmm CPrinterJob . java <nl> ppp CPrinterJob . java <nl> + import javax . print . attribute . standard . Sides ; <nl> + private int getSides() { <nl> + return (this . sidesAttr == null) ? -1 : this . sidesAttr . getValue() ; <nl> + } <nl> + private void setSides(int sides) { <nl> + if (attributes == null) { <nl> + return ; <nl> + } <nl> + final Sides[] sidesTable = new Sides[] {Sides . ONE_SIDED, Sides . TWO_SIDED_LONG_EDGE, Sides . TWO_SIDED_SHORT_EDGE} ; <nl> + if (sides >= 0 && sides < sidesTable . length) <nl>",do not take into account side attribute,1
87d7e976cbb9a4441f6f215252383b41b2b69f97,2023-08-03 04:44:41+00:00,"mmm MetalBorders . java <nl> ppp MetalBorders . java <nl> - g . drawLine( w-1, 0, w-1, h-1 ) ; <nl> - g . drawLine( 1, h-1, w-1, h-1 ) ; <nl> + SwingUtilities2 . drawVLine(g, w-1, 0, h-1) ; <nl> + SwingUtilities2 . drawHLine(g, 1, w-1, h-1) ; <nl> - g . drawLine( 0, 0, w-2, 0 ) ; <nl> - g . drawLine( 0, 0, 0, h-2 ) ; <nl> + SwingUtilities2 . drawHLine(g, 0, w-2, 0) ; <nl> + SwingUtilities2 . drawVLine(g, 0, 0, h-2) ; <nl> new file <nl> ppp TableHeaderBorderPositionTest . java <nl> + <nl>",header border vertical line be not align with data grid line,1
028b3ae1b162bd8f7c340bfa6e9487ca83697955,2023-08-10 08:51:50+00:00,mmm ReturnJNIWeak . java <nl> ppp ReturnJNIWeak . java <nl> + private static void testNullValue() { <nl> + System . out . println("running testNullValue") ; <nl> + registerObject(null) ; <nl> + if (getObject() != null) { <nl> + throw new RuntimeException("expected null") ; <nl> + } <nl> + } <nl> + testNullValue() ; <nl>,newweakglobalref throw exception for null arg,1
88b4e3b8539c2beb29ad92bd74b300002c2ef84b,2023-08-10 20:02:27+00:00,"mmm ClassPathAttr . java <nl> ppp ClassPathAttr . java <nl> + String[] classlist = { ""CpAttr1"", ""CpAttr2"", ""CpAttr3"", ""CpAttr4"", ""CpAttr5""} ; <nl> + String jar4 = TestCommon . getTestJar(""cpattr4 . jar"") ; <nl> - String jar4 = TestCommon . getTestJar(""cpattr4 . jar"") ; <nl> - TestCommon . testDump(cp, TestCommon . list(""CpAttr1"", <nl> - ""CpAttr2"", <nl> - ""CpAttr3"", <nl> - ""CpAttr4"", <nl> - ""CpAttr5"")) ; <nl> + TestCommon . testDump(cp, classlist) ; <nl> + buildCpAttr(""cpattr_dup"", ""cpattr_dup . mf"", ""CpAttr1"", ""CpAttr1"") ; <nl> + String cp = TestCommon . getTestJar(""cpattr_dup . jar"") File . pathSeparator jar4 ; <nl> + TestCommon . <nl>",leak relate to classloader  update_class_path_entry_list,1
f8203cb272e6136b784e5c43a500f6a0bfb19c8b,2023-08-23 08:47:33+00:00,new file <nl> ppp TestMissingSafepointOnTryCatch . java <nl> + import jdk . test . lib . Utils ; <nl> + public class TestMissingSafepointOnTryCatch { <nl> + public static void infiniteLoop() { <nl> + try { <nl> + Thread thread = new Thread() { <nl> + public void run() { <nl> + MissingSafepointOnTryCatch . testInfinite() ; <nl> + } <nl> + } ; <nl> + thread . setDaemon(true) ; <nl> + thread . start() ; <nl> + Thread . sleep(Utils . adjustTimeout(500)) ; <nl> + } catch (Exception e) {} <nl> + } <nl> + public static void main(String[] args) <nl>,crash due to unexpected exception control flow,1
57a322da9bf6aac98e834516728fb6da1c18e7aa,2023-08-23 20:22:12+00:00,"mmm MacAppBundler . java <nl> ppp MacAppBundler . java <nl> - result = MacBaseInstallerBundler . findKey( <nl> + result = MacCertificate . findCertificateKey( <nl> - result = MacBaseInstallerBundler . findKey( <nl> + result = MacCertificate . findCertificateKey( <nl> mmm MacBaseInstallerBundler . java <nl> ppp MacBaseInstallerBundler . java <nl> - public static String findKey(String keyPrefix, String teamName, String keychainName) { <nl> - boolean useAsIs = teamName . startsWith(keyPrefix) <nl> - || teamName . startsWith(""Developer ID"") <nl> - || teamName . startsWith(""3rd Party Mac"") ; <nl> - String key = (useAsIs) ? teamName : (keyPrefix + teamName) ; <nl> - try <nl>",id application certificate not pick up by jpackage if it contain unicode character,1
f2383b3cbd1096f0b38e89a3d876da2217511f11,2023-08-25 12:20:18+00:00,"mmm Connection . java <nl> ppp Connection . java <nl> - Socket socket = null ; <nl> - if (socketFactory != null) { <nl> + SocketFactory factory = getSocketFactory(socketFactory) ; <nl> + assert factory != null ; <nl> + Socket socket = createConnectionSocket(host, port, factory, connectTimeout) ; <nl> + if (socket instanceof SSLSocket sslSocket) { <nl> + try { <nl> + initialSSLHandshake(sslSocket, connectTimeout) ; <nl> + } catch (Exception e) { <nl> + closeOpenedSocket(socket) ; <nl> + throw e ; <nl> + } <nl> + } <nl> + return socket ; <nl> + } <nl> + private SocketFactory getSocketFactory(String <nl>",socket be not close in connection  createsocket when the handshake fail for ldap connection,1
1cb2cc65873ab25f5bafeae042e3fd99be94ea7e,2023-08-28 22:05:15+00:00,"mmm ArrayKlasses . java <nl> ppp ArrayKlasses . java <nl> - String appJar = ClassFileInstaller . getJarPath(""ArrayKlasses . jar"") ; <nl> - String mainClass = ""ArrayKlassesApp"" ; <nl> + final String appJar = ClassFileInstaller . getJarPath(""ArrayKlasses . jar"") ; <nl> + final String mainClass = ""ArrayKlassesApp"" ; <nl> + final String runtimeLogOptions = <nl> + ""-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug,cds+unshareable=trace"" ; <nl> - run2(null, topArchiveName, <nl> - ""-Xlog:class+load,class+load+array=debug,cds+dynamic=debug,cds=debug"", <nl> + run2(null, topArchiveName, runtimeLogOptions, <nl> +  . shouldContain(""restore: ArrayKlassesApp with class loader: jdk . internal . loader . ClassLoaders$AppClassLoader"") <nl> +  . shouldContain(""restore: [LArrayKlassesApp ; with class loader: jdk . internal . <nl>",array class should not always be load in boot loader,1
7754ac05062c698b8601048ae447849d982c8dbe,2023-08-31 23:02:26+00:00,mmm ChoiceFormat . java <nl> ppp ChoiceFormat . java <nl> - "Array and limit arrays must be of the same length . ") ; <nl> + "Input arrays must be of the same length . ") ; <nl>,do not specify illegalargumentexceptions,1
111ecdbaf58e5c0b3a64e0eca8a291df295e71b0,2023-09-07 21:37:40+00:00,new file <nl> ppp ClassFrameInfo . java <nl> + package java . lang ; <nl> + import jdk . internal . access . JavaLangInvokeAccess ; <nl> + import jdk . internal . access . SharedSecrets ; <nl> + import java . lang . StackWalker . StackFrame ; <nl> + class ClassFrameInfo implements StackFrame { <nl> + static final JavaLangInvokeAccess JLIA = SharedSecrets . getJavaLangInvokeAccess() ; <nl> + Object classOrMemberName ;    // Class or ResolvedMemberName initialized by VM <nl> + int flags ;               <nl>,an optimized way to walk the stack with class object only,1
3a00ec863904abd09ddcdc4b6dcf1147c52e0aae,2023-09-08 04:26:14+00:00,mmm FileSystemView . java <nl> ppp FileSystemView . java <nl> - private static final String newFolderString = <nl> - UIManager . getString("FileChooser . other . newFolder") ; <nl> - private static final String newFolderNextString  = <nl> - UIManager . getString("FileChooser . other . newFolder . subsequent") ; <nl> + String newFolderString = <nl> + UIManager . getString("FileChooser . other . newFolder") ; <nl> + String newFolderNextString = <nl> + UIManager . getString("FileChooser . other . newFolder . subsequent") ; <nl> - private static final String newFolderString = <nl> - UIManager . getString("FileChooser . win32 . newFolder") ; <nl> <nl>,be not update when change locale,1
fda142ff6cfefa12ec1ea4d4eb48b3c1b285bc04,2023-09-12 02:46:47+00:00,new file <nl> ppp VThreadEventTest . java <nl> + import com . sun . tools . attach . VirtualMachine ; <nl> + import java . util . concurrent . ExecutorService ; <nl> + import java . util . concurrent . Executors ; <nl> + import java . util . concurrent . locks . LockSupport ; <nl> + import java . util . List ; <nl> + import java . util . ArrayList ; <nl> + class CountDownLatch { <nl> + private int count = 0 ; <nl> + CountDownLatch(int count) { <nl> + this . count = count ; <nl>,jvmti event from vthreads park during jvmti attach,1
d75d9774c806e4bf73caa69cd78c31a132e4c812,2023-09-12 16:24:16+00:00,"mmm StackStreamFactory . java <nl> ppp StackStreamFactory . java <nl> + private static final int RESERVED_ELEMENTS = 1 ; <nl> + private static final int MIN_BATCH_SIZE    = RESERVED_ELEMENTS 2 ; <nl> - private static final int MIN_BATCH_SIZE    = SMALL_BATCH ; <nl> - int initialBatchSize = Math . max(walker . estimateDepth(), SMALL_BATCH) ; <nl> + int initialBatchSize = Math . max(walker . estimateDepth()+RESERVED_ELEMENTS, MIN_BATCH_SIZE) ; <nl> + -            this . frameBuffer = new ClassFrameBuffer(walker, getNextBatchSize()) ; <nl> + this . frameBuffer = new <nl>",minimal batch size should be optimize for getcallerclass,1
25f32f353830fddd4883f0fd191303b9dd9898c7,2023-09-15 09:09:21+00:00,"mmm Unsafe . java <nl> ppp Unsafe . java <nl> - @Deprecated(since = ""15"", forRemoval = true) <nl> - @ForceInline <nl> - public boolean shouldBeInitialized(Class<?> c) { <nl> - return theInternalUnsafe . shouldBeInitialized(c) ; <nl> - } <nl> - @Deprecated(since = ""15"", forRemoval = true) <nl> - @ForceInline <nl> - public void ensureClassInitialized(Class<?> c) { <nl> - theInternalUnsafe . ensureClassInitialized(c) ; <nl> - } <nl>","sun.misc.unsafe { shouldbeinitialized , ensureclassinitialized }",0
f44032969f37948a49e5bd0ed6738aa4d93687da,2023-09-17 11:53:12+00:00,"mmm ZipFileSystem . java <nl> ppp ZipFileSystem . java <nl> - final long readFullyAt(byte[] buf, int off, long len, long pos) <nl> - throws IOException <nl> - { <nl> + final long readNBytesAt(byte[] buf, int off, long len, long pos) throws IOException { <nl> - return readFullyAt(bb, pos) ; <nl> + long totalRead = 0 ; <nl> + while (totalRead < len) { <nl> + int n = readAt(bb, pos) ; <nl> + if (n < 0) { <nl> + break ; <nl> + } <nl> + pos += n ; <nl> + totalRead +=n ; <nl> + } <nl>",do not tolerate short read,1
4461eeb31d5ccc89e304329a7dccb9cb130713fc,2023-09-19 10:58:12+00:00,mmm VirtualThread . java <nl> ppp VirtualThread . java <nl> - private static final int YIELDING = 7 ;     // Thread . yield <nl> + private static final int TIMED_PARKING = 7 ; <nl> + private static final int TIMED_PARKED  = 8 ; <nl> + private static final int TIMED_PINNED  = 9 ; <nl> + private static final int YIELDING   = 10 ;  // Thread . yield <nl> - private static final int RUNNABLE_SUSPENDED = (RUNNABLE | SUSPENDED) ; <nl> - private static final int PARKED_SUSPENDED   = (PARKED <nl>,getstate and jvm ti getthreadstate should return timed_waiting virtual thread be time parked,1
481cfc798533f5b3adae7cc4a076a98b0b3f9737,2023-09-25 05:38:51+00:00,"mmm AArch64TestAssembler . java <nl> ppp AArch64TestAssembler . java <nl> - code . emitInt(0xdac103be) ;  // pacia x30, x29 <nl> + code . emitInt(0xf94003df) ;  // ldr xzr, [x30] <nl> + code . emitInt(0xd503231f) ;  // paciaz <nl> - code . emitInt(0xa9be7bfd) ;  // stp x29, x30, [sp, #-32]! <nl> - code . emitInt(0x910003fd) ;  // mov x29, sp <nl> + code . emitInt(0xa9bf7bfd) ;      // stp x29, x30, [sp, #-16]! <nl> + code . emitInt(0x910003fd) ;      // mov x29, sp <nl> - code <nl>",fix virtual thread with -xx  usebranchprotection=pac-ret,1
83806abe440809aaea47337646de96a97080724a,2023-09-27 04:28:10+00:00,mmm JTableHeader . java <nl> ppp JTableHeader . java <nl> - @Serial <nl> - private void writeObject(ObjectOutputStream s) throws IOException { <nl> - s . defaultWriteObject() ; <nl> - if ((ui != null) && (getUIClassID() . equals(uiClassID))) { <nl> - ui . installUI(this) ; <nl> - } <nl> - } <nl> new file <nl> ppp SerializeJTableHeader . java <nl> + import javax . swing . table . JTableHeader ; <nl> + import javax . swing . UIManager ; <nl> + import javax . swing . UnsupportedLookAndFeelException ; <nl> + import javax . swing . SwingUtilities ; <nl> + import <nl>,"the first serialization , jtableheader do not uninstall it ui",1
fee9d3362c76a046bb5160b90536545e7e9a5ce9,2023-09-27 07:33:52+00:00,"mmm SSLEngineImpl . java <nl> ppp SSLEngineImpl . java <nl> - context . dispatch(me . getKey(), me . getValue()) ; <nl> + try { <nl> + context . dispatch(me . getKey(), me . getValue()) ; <nl> + } catch (Exception e) { <nl> + throw context . conContext . fatal(Alert . INTERNAL_ERROR, <nl> + ""Unhandled exception"", e) ; <nl> + } <nl> new file <nl> ppp SSLEngineDecodeBadPoint . java <nl> + import javax . net . ssl . SSLContext ; <nl> + import javax . net . ssl . SSLEngine ; <nl> + import javax . net . ssl <nl>",handshaker do not send an alert after a bad parameter,1
50a7a04e9adef8d6e7adffb83b01d551e22cd910,2023-09-27 08:16:34+00:00,mmm ObjectSynchronizer . java <nl> ppp ObjectSynchronizer . java <nl> - Type type = db . lookupType("ObjectSynchronizer") ; <nl> - inUseList = type . getAddressField("_in_use_list") . getValue() ; <nl> + Type objectSynchronizerType = db . lookupType("ObjectSynchronizer") ; <nl> + Type monitorListType = db . lookupType("MonitorList") ; <nl> + Address monitorListAddr = objectSynchronizerType . getField("_in_use_list") . getStaticFieldAddress() ; <nl> + inUseListHead = monitorListType . getAddressField("_head") . getAddress(monitorListAddr) ; <nl> - if (inUseList != null) { <nl> - return new ObjectMonitorIterator() ; <nl> - } else { <nl> - return null ; <nl> - } <nl> + return new ObjectMonitorIterator() ; <nl>,do not return the most recent monitor and be incorrect if no monitor exists,1
0259da92831087e918d00b8a83e04c96a6877f41,2023-09-29 05:00:02+00:00,mmm ServerNameExtension . java <nl> ppp ServerNameExtension . java <nl> + import static sun . security . ssl . SSLExtension . SH_PRE_SHARED_KEY ; <nl> + shc . handshakeExtensions . remove(SH_PRE_SHARED_KEY) ; <nl> new file <nl> ppp ServerNameRejectedTLSSessionResumption . java <nl> + import java . nio . ByteBuffer ; <nl> + import java . util . List ; <nl> + import java . util . Objects ; <nl> + import javax . net . ssl . SNIHostName ; <nl> + import javax . net . ssl . SNIMatcher ; <nl> + import javax . net . ssl . SNIServerName ; <nl>,handshake fails if server_name do not match resume session,1
d7d1d42b67bcc8e6fe98e936b10e43edfd4989a2,2023-10-02 19:55:22+00:00,"mmm CredentialsUtil . java <nl> ppp CredentialsUtil . java <nl> - throw new KrbApErrException(Krb5 . KRB_AP_ERR_GEN_CRED, <nl> - ""No service creds"") ; <nl> + throw new KrbException(""No service creds"") ; <nl> mmm Krb5 . java <nl> ppp Krb5 . java <nl> + public static final int KDC_ERR_SERVER_NOMATCH       = 26 ;   //Requested server and ticket don't match <nl> + public static final int KDC_ERR_MUST_USE_USER2USER   = 27 ;   //Server principal valid for user2user only <nl> + public static final int KDC_ERR_PATH_NOT_ACCEPTED    = 28 ;   <nl>",have not define message for all error code,1
d2e2c4cef1f15a3fc7f1f619470d23ae6bb37725,2023-10-02 21:53:12+00:00,"mmm PKCS12KeyStore . java <nl> ppp PKCS12KeyStore . java <nl> + populateAttributes(entry) ; <nl> + populateAttributes(entry) ; <nl> + populateAttributes(certEntry) ; <nl> - return Collections . unmodifiableSet(new HashSet<>(getAttributes(entry))) ; <nl> + return Collections . unmodifiableSet(new HashSet<>(entry . attributes)) ; <nl> - ((CertEntry)entry) . cert, getAttributes(entry)) ; <nl> + ((CertEntry)entry) . cert, entry . attributes) ; <nl> - getAttributes(entry)) ; <nl> + entry . attributes) ; <nl> - getAttributes(entry)) ; <nl> + entry . attributes) ; <nl> - private Set<KeyStore . Entry . Attribute> getAttributes(Entry entry) { <nl> + private void populateAttributes(Entry entry) { <nl> - return entry . attributes <nl>",handshake fails because of concurrentmodificationexception in pkcs12keystore.enginegetentry,1
48f1a925e528cc9f8cd6c727129918e0e49b3429,2023-10-04 07:54:30+00:00,new file <nl> ppp TestMovingLoadBeforeStore . java <nl> + package compiler . loopopts . superword ; <nl> + import java . util . Random ; <nl> + import jdk . test . lib . Utils ; <nl> + public class TestMovingLoadBeforeStore { <nl> + static int RANGE = 1024*64 ; <nl> + private static final Random random = Utils . getRandomInstance() ; <nl> + public static void main(String[] strArr) { <nl> + byte a[] = new byte[RANGE] ; <nl> + for (int i = 0 ; i < 100 ; i++) { <nl> + for (int j = 0 <nl>,"superword  wrong result , load should not be move before store if not comparable",1
d01112dede7ddc23555425ad6db5c1eb2525819d,2023-10-14 16:25:22+01:00,"mmm VirtualThread . java <nl> ppp VirtualThread . java <nl> + notifyJvmtiUnmount(false) ; <nl> - notifyJvmtiUnmount(false) ; <nl> - notifyJvmtiUnmount(false) ; <nl> - afterDone(true, true) ; <nl> + afterDone(true) ; <nl> - private void afterDone(boolean notifyContainer, boolean executed) { <nl> + private void afterDone(boolean notifyContainer) { <nl> - if (executed) { <nl> - notifyJvmtiUnmount(false) ; <nl> - } <nl> - afterDone(addedToContainer, false) ; <nl> + afterDone(addedToContainer) ; <nl>",fix jvmti notification,1
37eb98604f4e2c241d959c7e2b337beb047421da,2023-10-16 09:01:57+00:00,"mmm JLightweightFrame . java <nl> ppp JLightweightFrame . java <nl> - contentPane . add(component) ; <nl> - if (""true"" . equals(AccessController .  <nl> - doPrivileged(new GetPropertyAction(""swing . jlf . contentPaneTransparent"", ""false"")))) <nl> - { <nl> - contentPane . setOpaque(false) ; <nl> - } <nl> - setContentPane(contentPane) ; <nl> + contentPane . add(component) ; <nl> + contentPane . revalidate() ; <nl> + contentPane . repaint() ; <nl> + if (""true"" . equals(AccessController .  <nl> + doPrivileged(new GetPropertyAction(""swing . jlf . contentPaneTransparent"", ""false"")))) <nl> + { <nl> + contentPane . setOpaque(false) ; <nl> + } <nl> + setContentPane(contentPane) ; <nl>",do not resize when content size constraint be change,1
d9ce525a1c27f41ef66c39b3ec18e3a87bbd8dd3,2023-10-20 06:18:18+00:00,mmm ProxySelector . java <nl> ppp ProxySelector . java <nl> - import java . util . Locale ; <nl> + if (uri == null || sa == null || e == null) { <nl> + throw new IllegalArgumentException("Arguments can't be null . ") ; <nl> + } <nl> - public synchronized List<Proxy> select(URI uri) { <nl> - String scheme = uri . getScheme() . toLowerCase(Locale . ROOT) ; <nl> - if (scheme . equals("http") || scheme . equals("https")) { <nl> + public List<Proxy> select(URI uri) { <nl> + if (uri == null) { <nl> + throw new IllegalArgumentException("URI can't <nl>,should not throw nullpointerexceptions,1
1ddf826aea7fd18209336dce550821638d5ef89c,2023-10-24 18:32:01+00:00,"mmm Main . java <nl> ppp Main . java <nl> - private Main() { } <nl> - kt . run(args, System . out) ; <nl> + int exitCode = kt . run(args, System . out) ; <nl> + if (exitCode != 0) { <nl> + System . exit(exitCode) ; <nl> + } <nl> + } <nl> + private static class ExitException extends RuntimeException { <nl> + @java . io . Serial <nl> + static final long serialVersionUID = 0L ; <nl> + private final int errorCode ; <nl> + public ExitException(int errorCode) { <nl> + this . errorCode = <nl>",tool should not call system.exit,1
c099cf53f25496c99629dc578045aa5186e1109d,2023-11-04 06:52:19+00:00,"mmm DefaultPollerProvider . java <nl> ppp DefaultPollerProvider . java <nl> - Poller readPoller() throws IOException { <nl> + Poller readPoller(boolean subPoller) throws IOException { <nl> - Poller writePoller() throws IOException { <nl> + Poller writePoller(boolean subPoller) throws IOException { <nl> mmm PollsetPoller . java <nl> ppp PollsetPoller . java <nl> + private final int event ; <nl> - super(read) ; <nl> + this . event = (read) ? Net . POLLIN : Net . POLLOUT ; <nl> - int ret = Pollset . pollsetCtl(setid, Pollset . PS_MOD, fd, <nl> - Pollset . PS_POLLPRI | (this . reading() ? Net <nl>",poller thread be virtual thread,1
541ff7149f9c6480535219ab06a2576f8399703a,2023-11-07 12:05:58+00:00,"mmm SwitchBootstraps . java <nl> ppp SwitchBootstraps . java <nl> + if (!(value instanceof Enum<?> enumValue)) { <nl> + return false ; <nl> + } <nl> - if (value . getClass() != clazz) { <nl> + if (enumValue . getDeclaringClass() != clazz) { <nl> mmm SwitchBootstrapsTest . java <nl> ppp SwitchBootstrapsTest . java <nl> - MethodType switchType = MethodType . methodType(int . class, target . getClass(), int . class) ; <nl> + testEnum(target . getClass(), target, start, result, labels) ; <nl> + } <nl> + private void testEnum(Class<?> targetClass, Enum<?> target, int start, int result, Object .  . <nl>",on enum constant with body compiles but fail with matchexception,1
a26f7c03c72e4efe6d3219d294294c554aebc631,2023-11-09 01:05:00+00:00,mmm RTFParser . java <nl> ppp RTFParser . java <nl> + import java . nio . ByteBuffer ; <nl> + import java . nio . CharBuffer ; <nl> + import java . nio . charset . CharsetDecoder ; <nl> + import java . nio . charset . CoderResult ; <nl> + protected CharsetDecoder decoder = null ; <nl> + private byte[] ba = new byte[2] ; <nl> + protected ByteBuffer decoderBB = ByteBuffer . wrap(ba) ; <nl> + static final char REPLACEMENT_CHAR = '\uFFFD' ; <nl> + decoderBB . clear() ; <nl> + decoderBB . limit(1) ; <nl> + <nl>,character in rtf be not decode,1
7d8adfa855e51a90c2f125fc20a06f9a488e6248,2023-11-09 10:14:03+00:00,"new file <nl> ppp TestUnlockOSR . java <nl> + public class TestUnlockOSR { <nl> + static void test_method(Object a, Object b, int limit) { <nl> + synchronized(a) { // allocate space for monitors <nl> + synchronized(b) { <nl> + } <nl> + } // free space to test allocation in reused space <nl> + synchronized(a) { // reuse the space <nl> + synchronized(b) { <nl> + for (int i = 0 ; i < limit ; i++) {} <nl> + } <nl> + } <nl> + } <nl> + public static void main(String[] args) { <nl> + Object a <nl>",of lock-stack do not match the unlocked object,1
c9657cad124d2be10b8d6006d0ca9a038b1c5945,2023-11-10 14:24:22+00:00,"mmm SequenceLayoutImpl . java <nl> ppp SequenceLayoutImpl . java <nl> - boolean max = (Long . MAX_VALUE / elementLayout . byteSize()) == elemCount ; <nl> + boolean max = (Long . MAX_VALUE / Math . max(1, elementLayout . byteSize())) == elemCount ; <nl> mmm TestLayouts . java <nl> ppp TestLayouts . java <nl> + @Test <nl> + public void testSequenceLayoutWithZeroLength() { <nl> + SequenceLayout layout = MemoryLayout . sequenceLayout(0, JAVA_INT) ; <nl> + assertEquals(layout . toString(), ""[0:i4]"") ; <nl> + SequenceLayout nested = MemoryLayout . sequenceLayout(0, layout) ; <nl> + assertEquals(nested . toString(), ""[0:[0:i4]]"") ; <nl> + SequenceLayout layout2 <nl>",tostring throw arithmeticexception,1
b5b32bb5323b47d9d9ea2313c2bec515826d6366,2023-11-11 09:15:06+00:00,"mmm VirtualThread . java <nl> ppp VirtualThread . java <nl> - return InnocuousThread . newThread(""VirtualThread-unparker"", task) ; <nl> + Thread t = InnocuousThread . newThread(""VirtualThread-unparker"", task) ; <nl> + t . setDaemon(true) ; <nl> + return t ; <nl>",unparker should always be daemon thread,1
346dbd6d1c1ac24da374dcdf4f432c0adf68efeb,2023-11-14 17:38:09+00:00,mmm Symbol . java <nl> ppp Symbol . java <nl> + public Type implicitReceiverType() { <nl> + ClassSymbol enclosingClass = enclClass() ; <nl> + if (enclosingClass == null) { <nl> + return null ; <nl> + } <nl> + Type enclosingType = enclosingClass . type ; <nl> + if (isConstructor()) { <nl> + return enclosingType . getEnclosingType() ; <nl> + } <nl> + if (!isStatic()) { <nl> + return enclosingType ; <nl> + } <nl> + return null ; <nl> + } <nl> mmm ClassReader . java <nl> ppp ClassReader . java <nl> - if (mt . recvtype != <nl>,do not return receiver type for method load from bytecode,1
bad6999634686dcfd04c88ddab855aa202cf35b9,2023-11-15 09:19:15+00:00,"new file <nl> ppp TestShiftConvertAndNotification . java <nl> + package compiler . ccp ; <nl> + public class TestShiftConvertAndNotification { <nl> + static long instanceCount ; <nl> + static void test() { <nl> + int i, i1 = 7 ; <nl> + for (i = 7 ; i < 45 ; i++) { <nl> + instanceCount = i ; <nl> + instanceCount &= i1 * i << i * Math . max(instanceCount, instanceCount) ; <nl> + switch (i % 2) { <nl> + case 8: <nl> + i1 = 0 ; <nl> + } <nl> + } <nl> + <nl>","phaseccp do not correctly track analysis dependency involve shift , convert , and mask",1
1d9688667e667dc710d64e52f1e918e047beaca3,2023-11-16 10:54:47+00:00,"mmm LeftOverInputStream . java <nl> ppp LeftOverInputStream . java <nl> + private static final int MAX_SKIP_BUFFER_SIZE = 2048 ; <nl> + @Override <nl> + public synchronized long skip(long n) throws IOException { <nl> + long remaining = n ; <nl> + int nr ; <nl> + if (n <= 0) { <nl> + return 0 ; <nl> + } <nl> + int size = (int)Math . min(MAX_SKIP_BUFFER_SIZE, remaining) ; <nl> + byte[] skipBuffer = new byte[size] ; <nl> + while (remaining > 0) { <nl> + if (server . isFinishing()) { <nl> + break ; <nl> + } <nl> <nl>",discardrequestbody could be improve,0
f3ed27582e16c3a323f590863cbeec6d35e20b58,2023-11-16 14:59:27+00:00,mmm UNIXToolkit . java <nl> ppp UNIXToolkit . java <nl> + Window oppositeWindow = e . getOppositeWindow() ; <nl> + if (oppositeWindow != null) { <nl> + if (window == oppositeWindow . getParent() ) { <nl> + addWaylandWindowFocusListenerToWindow(oppositeWindow) ; <nl> + return ; <nl> + } <nl> + if (window . getParent() == oppositeWindow) { <nl> + return ; <nl> + } <nl> + } <nl> + private static void addWaylandWindowFocusListenerToWindow(Window window) { <nl> + if (!Arrays <nl> +  . asList(window . getWindowFocusListeners()) <nl> +  . contains(waylandWindowFocusListener) <nl> + ) { <nl> + window . addWindowFocusListener(waylandWindowFocusListener) ; <nl>,that request focus be not show on linux with wayland,1
de51aa19d6a8cbd3b83bf469cb89da16f4b6f498,2023-11-20 06:56:49+00:00,mmm AquaComboBoxButton . java <nl> ppp AquaComboBoxButton . java <nl> - import java . awt . * ; <nl> - import javax . swing . * ; <nl> + import java . awt . Color ; <nl> + import java . awt . Component ; <nl> + import java . awt . Graphics ; <nl> + import java . awt . Insets ; <nl> + import javax . accessibility . AccessibleContext ; <nl> + import javax . swing . ButtonModel ; <nl> + import javax . swing . CellRendererPane ; <nl> + import javax . swing . DefaultButtonModel ; <nl>,magnifier do not show the magnified text for jcombobox,1
fcb4df26f18c7a10e4511f4be948c887f14ee093,2023-11-20 23:28:48+00:00,"mmm SHA3 . java <nl> ppp SHA3 . java <nl> - System . arraycopy(state, 0, out, ofs, engineGetDigestLength()) ; <nl> + int availableBytes = buffer . length ; <nl> + int numBytes = engineGetDigestLength() ; <nl> + while (numBytes > availableBytes) { <nl> + System . arraycopy(state, 0, out, ofs, availableBytes) ; <nl> + numBytes -= availableBytes ; <nl> + ofs += availableBytes ; <nl> + keccak() ; <nl> + } <nl> + System . arraycopy(state, 0, out, ofs, numBytes) ; <nl> new file <nl> ppp SHAKE128 . java <nl> + package sun . security . provider ; <nl> <nl>",do not work correctly if n > = 137,0
604d29a8c911c1064ba0fab17f9192bb4e640709,2023-11-21 10:04:54+00:00,"mmm JavapTask . java <nl> ppp JavapTask . java <nl> + if (className . indexOf(' . ') > 0) { <nl> + try { <nl> + for (Set<Location> locations: fileManager . listLocationsForModules(StandardLocation . SYSTEM_MODULES)) { <nl> + for (Location systemModule: locations) { <nl> + fo = fileManager . getJavaFileForInput(systemModule, className, JavaFileObject . Kind . CLASS) ; <nl> + if (fo != null) return fo ; <nl> + } <nl> + } <nl> + } catch (UnsupportedOperationException e) { <nl> + } <nl> + } <nl>",system flag do not override system apis,1
12723688ca49d379d43fd0fd0e55a28afe299687,2023-11-27 09:01:22+00:00,"mmm CSS . java <nl> ppp CSS . java <nl> + @Override <nl> + public int hashCode() { <nl> + return Objects . hashCode(svalue) ; <nl> + } <nl> + @Override <nl> + public boolean equals(Object val) { <nl> + return val instanceof CSS . BackgroundImage img <nl> + && Objects . equals(svalue, img . svalue) ; <nl> + } <nl> mmm CSSAttributeEqualityBug . java <nl> ppp CSSAttributeEqualityBug . java <nl> + ""background-image: none"", <nl> + ""background-image: url(image . png)"", <nl> + {""background-image: none"", ""background-image: url(image . png)""}, <nl>",do not implement equal,1
78bc97cf735e87e4fae131ec8d17dafb85fc4d2e,2023-11-28 18:22:57-05:00,"mmm VirtualThread . java <nl> ppp VirtualThread . java <nl> - Future<?> unblocker = null ; <nl> - if (recheckInterval > 0) { <nl> - unblocker = UNPARKER . schedule(this::unblock, getBlockTime(recheckInterval), MILLISECONDS) ; <nl> - } <nl> - if (unblocker != null) unblocker . cancel(false) ; <nl> + } else { <nl> + Future<?> unblocker = null ; <nl> + int recheckInterval = this . recheckInterval ; <nl> + if (recheckInterval > 0 && state() == BLOCKED) { <nl> + unblocker = delayedTaskScheduler() . schedule(this::unblock, getBlockTime(recheckInterval), MILLISECONDS) ; <nl> + if (state() != BLOCKED) { <nl> + unblocker . <nl>",fix deadlock due to synchronize in nativereferencequeue,1
56d4c33f4096d98d08eba870070b5f21125f80be,2023-12-01 01:53:20+00:00,"mmm JPackageCommand . java <nl> ppp JPackageCommand . java <nl> + Optional<Path> nullableOutputBundle() { <nl> + try { <nl> + return Optional . ofNullable(outputBundle()) ; <nl> + } catch (Exception ex) { <nl> + return Optional . empty() ; <nl> + } <nl> + } <nl> - } else if (ThrowingSupplier . toSupplier(() -> TKit . deleteIfExists( <nl> - outputBundle())) . get()) { <nl> - TKit . trace( <nl> - String . format(""Deleted [%s] file before running jpackage"", <nl> - outputBundle())) ; <nl> + } else { <nl> + nullableOutputBundle() . ifPresent(path -> { <nl> + if (ThrowingSupplier . <nl>",malformed -app-image the error message be awful,1
3b30095a63bdf8224a5625507a69942210a203a0,2023-12-01 13:11:07+00:00,mmm CLayouts . java <nl> ppp CLayouts . java <nl> - public static final ValueLayout . OfLong C_LONG_LONG = (ValueLayout . OfLong) LINKER . canonicalLayouts() . get("long") ; <nl> + public static final ValueLayout . OfLong C_LONG_LONG = (ValueLayout . OfLong) LINKER . canonicalLayouts() . get("long long") ; <nl>,do not build any more after 8254693 on 32 bit platform,1
0d0a657414563a2211bcc3474aa7e4317307f98b,2023-12-04 07:30:17+00:00,mmm JTable . java <nl> ppp JTable . java <nl> - if( getComponentOrientation() . isLeftToRight() ) { <nl> - for(int i = 0 ; i < column ; i++) { <nl> - r . x += cm . getColumn(i) . getWidth() ; <nl> - } <nl> - } else { <nl> - for(int i = cm . getColumnCount()-1 ; i > column ; i--) { <nl> - r . x += cm . getColumn(i) . getWidth() ; <nl> - } <nl> + for (int i = 0 ; i < column ; i++) { <nl> + r . x <nl>,do not properly layout it content,1
fddc02e046e926af75661ce167d4531393438c7a,2023-12-05 18:12:54+00:00,"mmm HotSpotResolvedObjectTypeImpl . java <nl> ppp HotSpotResolvedObjectTypeImpl . java <nl> - return compilerToVM() . getResolvedJavaType(this, config() . subklassOffset, false) == null ; <nl> + return UNSAFE . getLong(this . getKlassPointer() config() . subklassOffset) == 0 ; <nl>",should not create strong reference,1
aaaae3ee3cc966d05f6cf6fa81cecc122a8f9294,2023-12-06 02:36:02+00:00,mmm Flow . java <nl> ppp Flow . java <nl> - if (!def . hasTag(METHODDEF) && ((TreeInfo . flags(def) & STATIC) != 0) == isStatic) <nl> + boolean isDefStatic = ((TreeInfo . flags(def) | (TreeInfo . symbolFor(def) == null ? 0 : TreeInfo . symbolFor(def) . flags_field)) & STATIC) != 0 ; <nl> + if (!def . hasTag(METHODDEF) && (isDefStatic == isStatic)) <nl> new file <nl> ppp LambdaCapture08 . java <nl> + import java . util . function . * ; <nl> + interface LambdaCapture08 { <nl> + Object O = new Object() { <nl> + IntSupplier x(int m) <nl>,be not accept correct code,0
2678e4cd9424ca4e33ebb9693c84f9a86bf5504c,2023-12-06 09:58:06+00:00,"mmm X-ScopedMemoryAccess . java . template <nl> ppp X-ScopedMemoryAccess . java . template <nl> - msp . unsafeGetBase(), msp . unsafeGetOffset() + offset, <nl> + msp . unsafeGetBase(), msp . unsafeGetOffset() offset, true, <nl> - msp . unsafeGetBase(), msp . unsafeGetOffset() + offset, m, offsetInRange, <nl> + msp . unsafeGetBase(), msp . unsafeGetOffset() offset, true, m, offsetInRange, <nl> - msp . unsafeGetBase(), msp . unsafeGetOffset() + offset, <nl> + msp . unsafeGetBase(), msp . unsafeGetOffset() offset, true, <nl> - msp . unsafeGetBase(), msp . unsafeGetOffset() + offset, <nl> + msp . unsafeGetBase(), msp . unsafeGetOffset() offset, true, <nl> mmm <nl>",memorysegment heap access be not consistently intrinsified,1
49fff0132bb470d8ae28355e4d5f4789a1b6d54d,2023-12-07 10:45:55+00:00,"mmm GenerateJfrFiles . java <nl> ppp GenerateJfrFiles . java <nl> + String level = """" ; <nl> + pos . writeUTF(level) ; <nl> + currentType . level = getString(attributes, ""level"") ; <nl> - out . write(""  jlong  cutoff_ticks ;"") ; <nl> + out . write(""  jlong  miscellaneous ;"") ; <nl> mmm EventControl . java <nl> ppp EventControl . java <nl> + import jdk . jfr . internal . settings . LevelSetting ; <nl> + private static final Type TYPE_LEVEL = TypeLibrary . createType(LevelSetting . class) ; <nl> + if (eventType . hasLevel()) { <nl> + <nl>",deprecated jfr event,1
b5933b186f03baffdd4d53b8a48c710e15d1318a,2023-12-07 11:54:32+00:00,"mmm Aggregator . java <nl> ppp Aggregator . java <nl> + SET(""SET""), <nl> mmm FieldBuilder . java <nl> ppp FieldBuilder . java <nl> - import java . util . Collections ; <nl> + if (fieldName . equals(""stackTrace . topFrame . class"")) { <nl> + configureTopFrameClassField() ; <nl> + return true ; <nl> + } <nl> + private void configureTopFrameClassField() { <nl> + field . alignLeft = true ; <nl> + field . label = ""Class"" ; <nl> + field . dataType = ""java . lang . Class"" ; <nl> + field . valueGetter = e -> { <nl> + <nl>",create view for deprecate method,1
354ea4c28f1449479f71e89831c64047c50e1a61,2023-12-07 23:18:23+00:00,"mmm HeapDumpParallelTest . java <nl> ppp HeapDumpParallelTest . java <nl> - appOut . shouldNotContain(""Merge heap files complete"") ; <nl> mmm VThreadInHeapDump . java <nl> ppp VThreadInHeapDump . java <nl> + extraVMArgs . add(""-Xlog:heapdump"") ; <nl> + test(snapshot, VThreadInHeapDumpTarg . VThreadUnmountedReferenced . class) ; <nl>",dump do not contain virtual thread stack reference,1
11e4a925bec3c1f79e03045d48def53188b655e6,2023-12-07 23:25:56+00:00,"mmm RSASignature . java <nl> ppp RSASignature . java <nl> + if (MessageDigest . isEqual(padded, decrypted)) { <nl> + return true ; <nl> + } <nl> + encoded = RSAUtil . encodeSignatureWithoutNULL(digestOID, digest) ; <nl> + padded = padding . pad(encoded) ; <nl> mmm RSAUtil . java <nl> ppp RSAUtil . java <nl> - public static byte[] decodeSignature(ObjectIdentifier oid, byte[] sig) <nl> - throws IOException { <nl> - DerInputStream in = new DerInputStream(sig, 0, sig . length, false) ; <nl> - DerValue[] values = in . getSequence(2) ; <nl> - if ((values . length != 2) || (in . <nl>",signature verification fail on sign data that do not encode params correctly,1
cb7e3d263a6ed65257b316ffcbbd5e19142eb8d1,2023-12-08 01:24:25+00:00,"mmm HeapDumpParallelTest . java <nl> ppp HeapDumpParallelTest . java <nl> + appOut . shouldNotContain(""Merge heap files complete"") ; <nl> mmm VThreadInHeapDump . java <nl> ppp VThreadInHeapDump . java <nl> - extraVMArgs . add(""-Xlog:heapdump"") ; <nl> - test(snapshot, VThreadInHeapDumpTarg . VThreadUnmountedReferenced . class) ; <nl>",heap dump do not contain virtual thread stack reference,1
ce4b257fa539d35a7d14bba2d5d3342093d714e1,2023-12-11 19:05:40+00:00,"mmm InternalErrorTest . java <nl> ppp InternalErrorTest . java <nl> + import java . lang . foreign . MemorySegment ; <nl> + private static final int NUM_TESTS = 4 ; <nl> - FileChannel fileChannel = new RandomAccessFile(file, ""r"") . getChannel() ; <nl> + FileChannel fileChannel = new RandomAccessFile(file, ""rw"") . getChannel() ; <nl> - fileChannel . map(FileChannel . MapMode . READ_ONLY, 0, fileChannel . size()) ; <nl> + fileChannel . map(FileChannel . MapMode . READ_WRITE, 0, fileChannel . size()) ; <nl> - for (int i = 0 ; i < 3 ; i++) { <nl> + for (int i <nl>",be not guard,0
363840d66894899c9efe26dedbbbb3931f0790f3,2023-12-12 11:09:13+00:00,mmm PinnedThreadPrinter . java <nl> ppp PinnedThreadPrinter . java <nl> - InternalLock lock = (InternalLock) JIOPSA . lock(out) ; <nl> - if (lock != null && lock . tryLock()) { <nl> + Object lockObj = JIOPSA . lock(out) ; <nl> + if (lockObj instanceof InternalLock lock && lock . tryLock()) { <nl>,pinnedthreadprinter should check for internal lock,1
b25ed57b764fc485e4e8ca4118ffb1cc70fdfe7f,2023-12-12 18:30:41+00:00,"mmm WDesktopPeer . java <nl> ppp WDesktopPeer . java <nl> + import sun . awt . shell . ShellFolder ; <nl> - String errMsg = ShellExecute(file . getAbsolutePath(), verb) ; <nl> + String errMsg = ShellFolder . invoke( <nl> + () -> ShellExecute(file . getAbsolutePath(), verb)) ; <nl> - throw new IOException(""Failed to "" + verb + "" "" + file + "" .  Error message: "" + errMsg) ; <nl> + throw new IOException(""Failed to "" verb "" "" file + <nl> + "" .  Error message: "" errMsg) ; <nl> - String errmsg = ShellExecute(uri <nl>",method fails if early coinitialize call a coinit_multithreaded,1
4fb5c12813c6d447709d3fef690387ddab0e8dae,2023-12-12 20:55:17+00:00,"mmm StringUTF16 . java <nl> ppp StringUTF16 . java <nl> - if (len < 0) { <nl> - throw new NegativeArraySizeException() ; <nl> - } <nl> - if (len > MAX_LENGTH) { <nl> - throw new OutOfMemoryError(""UTF16 String size is "" + len + <nl> - "", should be less than "" + MAX_LENGTH) ; <nl> - } <nl> - return new byte[len << 1] ; <nl> + return new byte[newBytesLength(len)] ; <nl> - if (len > MAX_LENGTH) { <nl> + if (len >= MAX_LENGTH) { <nl> new file <nl> ppp MaxSizeUTF16String . java <nl> + import org . <nl>",for non-latin1 string size too large exception be off by one,1
fde5b16817c3263236993f2e8c2d2469610d99bd,2023-12-14 14:39:04+00:00,"mmm StringUTF16 . java <nl> ppp StringUTF16 . java <nl> - return extractCodepoints(val, index, len, buf, 0) ; <nl> + return extractCodepoints(val, index, end, buf, 0) ; <nl> mmm Chars . java <nl> ppp Chars . java <nl> + testIntsSubrange(ccExp) ; <nl> + testIntsSubrange(ccExp) ; <nl> + static void testIntsSubrange(int[] expected) { <nl> + int[] offsets = { 7, 31 } ;   // offsets to test <nl> + int LENGTH = 13 ; <nl> + for (int i = 0 ; i < offsets . length ; i++) { <nl> + int offset = Math . max(0, <nl>",string get construct incorrectly from codepoints if compactstrings be not enable,1
2d609557ffe8e15ab81fb51dce90e40780598371,2023-12-20 17:00:44+00:00,"mmm SequenceInputStream . java <nl> ppp SequenceInputStream . java <nl> + long numTransferred = in . transferTo(out) ; <nl> - transferred = Math . addExact(transferred, in . transferTo(out)) ; <nl> + transferred = Math . addExact(transferred, numTransferred) ; <nl> - return Long . MAX_VALUE ; <nl> + transferred = Long . MAX_VALUE ; <nl> mmm TransferTo . java <nl> ppp TransferTo . java <nl> + import java . io . IOException ; <nl> + import static org . testng . Assert . assertNotEquals ; <nl> + @Test <nl> + public void testHugeStream() throws Exception { <nl> + InputStream is1 <nl>",should not return as soon a long.max_value byte have be transfer,1
3b908c478186cbfd9d449422aaa5adacd5e5c2d4,2023-12-21 18:51:50+00:00,mmm CheckLargePages . java <nl> ppp CheckLargePages . java <nl> - private final static WhiteBox WHITE_BOX = WhiteBox . getWhiteBox() ; <nl> + private final static long LP_1G = 1024 * 1024 * 1024 ; <nl> + private final static boolean LARGE_PAGES_ENABLED ; <nl> + private final static long LARGE_PAGE_SIZE ; <nl> + static { <nl> + WhiteBox whiteBox = WhiteBox . getWhiteBox() ; <nl> + LARGE_PAGES_ENABLED = whiteBox . getBooleanVMFlag("UseLargePages") ; <nl> + LARGE_PAGE_SIZE = (whiteBox . getBooleanVMFlag("UseLargePages")) ? whiteBox . getVMLargePageSize() : 0 ; <nl> + } <nl> + private static boolean isLargePageSizeEqual(long size) { <nl> + <nl>,huge page be not use for codecache,1
4db7a1c3bb6b56cc7416aa27350406da27fe04a8,2024-01-04 05:59:52+00:00,"mmm VirtualThread . java <nl> ppp VirtualThread . java <nl> - int initialState = state() ; <nl> + int initialState = state() & ~SUSPENDED ; <nl> - case RUNNING, PINNED -> { <nl> + case RUNNING, PINNED, TIMED_PINNED -> { <nl> - default -> throw new InternalError() ; <nl> + default -> throw new InternalError("""" initialState) ; <nl> new file <nl> ppp GetStackTraceALotWhenPinned . java <nl> + import java . util . concurrent . atomic . AtomicInteger ; <nl> + import java . util . concurrent . locks . LockSupport ; <nl> + public class GetStackTraceALotWhenPinned { <nl> + <nl>",getstacktrace can fail with internalerror if virtual thread be timed-parked when pin,1
f3be138eb80c9e7f6cc21afb75cda9e49b667c8a,2024-01-09 22:04:02+00:00,"mmm SystemModulesPlugin . java <nl> ppp SystemModulesPlugin . java <nl> + List<Map . Entry<String, String>> systemModulesMap = map . entrySet() <nl> +  . stream() . sorted(Map . Entry . comparingByKey()) . toList() ; <nl> - for (String moduleName : sorted(map . keySet())) { <nl> + for (Map . Entry<String,String> entry : systemModulesMap) { <nl> -  . constantInstruction(moduleName) <nl> +  . constantInstruction(entry . getKey()) <nl> - for (String className : sorted(map . values())) { <nl> + for (Map . Entry<String,String> entry : systemModulesMap) { <nl> -  . constantInstruction(className . replace('/', ' . ')) <nl> +  <nl>",classnames and modulenames array do not match the order,1
82a63a03c0155288e8e43b9f766c8be70be50b6a,2024-01-12 07:53:41+00:00,mmm SynthTreeUI . java <nl> ppp SynthTreeUI . java <nl> - private Icon expandedIconWrapper = new ExpandedIconWrapper() ; <nl> + private Icon expandedIconWrapper ; <nl> + private Icon collapsedIconWrapper ; <nl> + @Override <nl> + public Icon getCollapsedIcon() { <nl> + return collapsedIconWrapper ; <nl> + } <nl> + expandedIconWrapper = new IconWrapper(expandedIcon) ; <nl> + collapsedIconWrapper = new IconWrapper(collapsedIcon) ; <nl> - private class ExpandedIconWrapper implements SynthIcon { <nl> + private class IconWrapper implements SynthIcon { <nl> + Icon iconType ; <nl> + public IconWrapper(Icon type) { <nl> + super() ; <nl> + iconType = type ; <nl> <nl>,image do not show correctly with gtk laf,0
be900f1253fe130347385f0daec772c20a79ed57,2024-01-12 13:12:37+00:00,mmm PlatformRecording . java <nl> ppp PlatformRecording . java <nl> + import java . security . PrivilegedActionException ; <nl> + import java . security . PrivilegedExceptionAction ; <nl> - private SafePath dumpOnExitDirectory = new SafePath(" . ") ; <nl> + private SafePath dumpDirectory ; <nl> - private AccessControlContext noDestinationDumpOnExitAccessControlContext ; <nl> + private final AccessControlContext dumpDirectoryControlContext ; <nl> - this . noDestinationDumpOnExitAccessControlContext = AccessController . getContext() ; <nl> + this . dumpDirectoryControlContext = AccessController . getContext() ; <nl> + if (dest == null && dumpDirectory != null) { <nl> + dest = makeDumpPath() ; <nl> + } <nl> + <nl>,auto-generated filename do not work with time-limited recording,1
21f647310b49a5002cec4742a1c6310d746ac211,2024-01-16 13:59:29+00:00,"mmm ConstantMap . java <nl> ppp ConstantMap . java <nl> - Logger . log(LogTag . JFR_SYSTEM_PARSER, LogLevel . INFO, ""Missing object id="" + id + "" in pool "" + getName() + "" .  All ids should reference an object"") ; <nl> + String msg = ""Missing object ID "" id "" in pool "" getName() "" .  All IDs should reference an object"" ; <nl> + Logger . log(LogTag . JFR_SYSTEM_PARSER, LogLevel . INFO, msg) ; <nl> + assert false : msg ; <nl>",fail-fast mode when constant can not be resolve,1
72f199024d58b53a1dff2f79dd2050ae0044e809,2024-01-22 10:55:10+00:00,mmm JavaCompiler . java <nl> ppp JavaCompiler . java <nl> - import java . util . Collections ; <nl> + import java . util . Comparator ; <nl> + import java . util . function . ToIntFunction ; <nl> - if (deferredDiagnosticHandler != null) { <nl> - deferredDiagnosticHandler . reportDeferredDiagnostics() ; <nl> - log . popDiagnosticHandler(deferredDiagnosticHandler) ; <nl> - } <nl> + reportDeferredDiagnosticAndClearHandler() ; <nl> - deferredDiagnosticHandler . reportDeferredDiagnostics() ; <nl> - log . popDiagnosticHandler(deferredDiagnosticHandler) ; <nl> + reportDeferredDiagnosticAndClearHandler() ; <nl> - deferredDiagnosticHandler . reportDeferredDiagnostics() ; <nl> - log . popDiagnosticHandler(deferredDiagnosticHandler) ; <nl> + reportDeferredDiagnosticAndClearHandler() ; <nl> - deferredDiagnosticHandler <nl>,error may be report before unrecoverable error when annotation processing be skip,1
68206b533b09e07e4d556df794414ed4538889c0,2024-02-01 08:37:24+00:00,"mmm P11PSSSignature . java <nl> ppp P11PSSSignature . java <nl> - mechanism . freeHandle() ; <nl> mmm SunPKCS11 . java <nl> ppp SunPKCS11 . java <nl> + Set<Long> brokenMechanisms = Set . of() ; <nl> + if (P11Util . isNSS(token)) { <nl> + CK_VERSION nssVersion = slotInfo . hardwareVersion ; <nl> + if (nssVersion . major < 3 || <nl> + nssVersion . major == 3 && nssVersion . minor < 65) { <nl> + brokenMechanisms = Set . of(CKM_RSA_PKCS_PSS, <nl> + CKM_SHA1_RSA_PKCS_PSS, <nl> + CKM_SHA224_RSA_PKCS_PSS, <nl> + CKM_SHA256_RSA_PKCS_PSS, <nl> + CKM_SHA384_RSA_PKCS_PSS, <nl> + CKM_SHA512_RSA_PKCS_PSS, <nl> + CKM_SHA3_224_RSA_PKCS_PSS, <nl> <nl>",native memory leak in pcks11-nss security provider,1
783ae56634a3bca23516c22b071d224fec18591f,2024-02-02 09:01:45+00:00,"mmm Table . java <nl> ppp Table . java <nl> - table . put(HtmlAttr . ARIA_LABELLEDBY, defaultTabId . name()) ; <nl> -  . put(HtmlAttr . ROLE, ""tabpanel"") ; <nl> +  . put(HtmlAttr . ROLE, ""tabpanel"") <nl> +  . put(HtmlAttr . ARIA_LABELLEDBY, defaultTabId . name()) ; <nl> mmm script . js . template <nl> ppp script . js . template <nl> - document . querySelector('div#' + tableId +'  . summary-table') <nl> + document . getElementById(tableId ' . tabpanel') <nl> mmm TestHtmlTableStyles . java <nl> ppp TestHtmlTableStyles . java <nl> - <div class=""summary-table three-column-summary"" aria-labelledby=""method-summary-table-tab0"">"""""") ; <nl> <nl>",component with aria role 'tabpanel ' do not have a programmatically associate name,1
80642dd7af3fcc7c042f11798c5cc899e20b9368,2024-02-05 06:19:02+00:00,new file <nl> ppp TestAlwaysPreTouchBehavior . java <nl> + package gc . parallel ; <nl> + import java . lang . management . ManagementFactory ; <nl> + import java . lang . management . ThreadInfo ; <nl> + import java . lang . management . ThreadMXBean ; <nl> + import java . nio . file . Files ; <nl> + import java . nio . file . Path ; <nl> + import java . nio . file . Paths ; <nl> + import java . io . IOException ; <nl> + import java . util . * ; <nl> <nl>,gc do not pre-touch all heap page when alwayspretouch enable and large page disable,1
0f5f3c9b9718c610406088327401210486447462,2024-02-06 19:49:30+00:00,mmm P11Key . java <nl> ppp P11Key . java <nl> - boolean keySensitive = (attrs[0] . getBoolean() || <nl> - attrs[1] . getBoolean() || !attrs[2] . getBoolean()) ; <nl> + boolean keySensitive = <nl> + (attrs[0] . getBoolean() && P11Util . isNSS(session . token)) || <nl> + attrs[1] . getBoolean() || !attrs[2] . getBoolean() ; <nl>,private and secret key be not necessarily sensitive,1
e0d98dd3019b2fd6b95dd341296899dc0b470cb1,2024-02-07 06:59:48+00:00,"mmm Lower . java <nl> ppp Lower . java <nl> -  . TypeTest(tree . expr, make . Type(types . boxedClass(tree . pattern . type) . type)) <nl> +  . TypeTest(make . Ident(dollar_s), make . Type(types . boxedClass(tree . pattern . type) . type)) <nl> mmm PrimitiveInstanceOfTest . java <nl> ppp PrimitiveInstanceOfTest . java <nl> + public void testInstanceOfObjectToPrimitive() { <nl> + assertEval(""Object o = 1L ;"") ; <nl> + assertEval(""o instanceof long"") ; <nl> + assertEval(""o instanceof Long"") ; <nl> + } <nl> + public void testInstanceOfPrimitiveToPrimitiveInvokingExactnessMethod() { <nl> + assertEval(""int b = 1024 ;"") ; <nl> <nl>",report nosuchfielderror with instanceof primitive type,1
69b2674c6861fdb7d9f9cb39e07d50515c73e33a,2024-02-09 14:36:59+00:00,mmm NativePRNG . java <nl> ppp NativePRNG . java <nl> - public NativePRNG() { <nl> - super() ; <nl> + public NativePRNG(SecureRandomParameters params) { <nl> + if (params != null) { <nl> + throw new IllegalArgumentException("Unsupported params: " params . getClass()) ; <nl> + } <nl> - public Blocking() { <nl> - super() ; <nl> + public Blocking(SecureRandomParameters params) { <nl> + if (params != null) { <nl> + throw new IllegalArgumentException("Unsupported params: " params . getClass()) ; <nl> + } <nl> - public NonBlocking() { <nl> - super() ; <nl> + public NonBlocking(SecureRandomParameters params) { <nl> + if <nl>,nosuchmethoderror when instantiate nativeprng,1
088e54f5602f5f46fde1e5e335ae323d8e4516be,2024-02-13 11:08:51+00:00,"mmm script . js . template <nl> ppp script . js . template <nl> - }, 50) ; <nl> + }, 100) ; <nl> - if (windowWidth != window . innerWidth) { <nl> + if (windowWidth !== window . innerWidth) { <nl>",of content scroll timeout not long enough,1
56c50841ee1d4382203e200e9b9c803ee6021097,2024-02-19 13:15:13+00:00,"mmm RasterPrinterJob . java <nl> ppp RasterPrinterJob . java <nl> + bandGraphics . translate(-deviceAddressableX, deviceAddressableY) ; <nl> - int bandX = deviceLeft deviceAddressableX ; <nl> + int bandX = deviceLeft ; <nl> - int bandY = deviceTop + bandTop deviceAddressableY ; <nl> + int bandY = deviceTop ; <nl> - printBand(data, bandX, bandY, bandWidth, bandHeight) ; <nl> + printBand(data, bandX, bandTop bandY, bandWidth, bandHeight) ; <nl> new file <nl> ppp AlphaPrintingOffsets . java <nl> + import java . awt . BasicStroke ; <nl> + import java . awt . Color ; <nl> + import java . awt . Graphics <nl>",band raster path do not account for device offset value,1
f62b5789add23adda2634a1cfb80f48b4387be74,2024-02-26 16:49:01+00:00,"mmm Alert . java <nl> ppp Alert . java <nl> - return new SSLException(reason, cause) ; <nl> + return new SSLException(""("" description "") "" reason, cause) ; <nl> - return new SSLProtocolException(reason, cause) ; <nl> + return new SSLProtocolException(""("" description "") "" reason, cause) ; <nl> - return new SSLHandshakeException(reason, cause) ; <nl> + return new SSLHandshakeException(""("" description "") "" reason, cause) ; <nl> - return new SSLException(reason, cause) ; <nl> + return new SSLException(""("" description "") "" reason, cause) ; <nl> mmm CertificateMessage . java <nl> ppp CertificateMessage . java <nl> - throw shc . conContext . fatal(Alert <nl>",should not send bad_certificate alert when the client do not send any certificate,1
5fb7ae7ecf1381b29ce1b04da5ac84f176ab4234,2012-08-07 19:03:00-07:00,mmm IdentityDatabase . java <nl> ppp IdentityDatabase . java <nl> - import java . io . IOException ; <nl> - import org . thoughtcrime . securesms . crypto . IdentityKey ; <nl> - import org . thoughtcrime . securesms . crypto . InvalidKeyException ; <nl> - import org . thoughtcrime . securesms . crypto . MasterCipher ; <nl> - import org . thoughtcrime . securesms . crypto . MasterSecret ; <nl> - import org . thoughtcrime . securesms . util . Base64 ; <nl> + import org . thoughtcrime . securesms . crypto . IdentityKey ; <nl> + import <nl>,fix for npe during a secure session with no sender identity key,1
b4e48f9dba3a42a524e0bdcd1e2a3a2e76c46fb8,2012-08-07 19:06:23-07:00,mmm PassphrasePromptActivity . java <nl> ppp PassphrasePromptActivity . java <nl> + import android . text . Editable ; <nl> - String passphrase         = passphraseText . getText() . toString() ; <nl> + Editable text             = passphraseText . getText() ; <nl> + String passphrase         = (text == null ? "" : text . toString()) ; <nl>,"fix for npe which should never happen , but apparently do",1
faa3d2276ef96b90c82be267532af8aa85fb7e72,2012-08-07 19:09:16-07:00,mmm PassphraseChangeActivity . java <nl> ppp PassphraseChangeActivity . java <nl> - import org . thoughtcrime . securesms . crypto . InvalidPassphraseException ; <nl> - import org . thoughtcrime . securesms . crypto . MasterSecret ; <nl> - import org . thoughtcrime . securesms . crypto . MasterSecretUtil ; <nl> - import org . thoughtcrime . securesms . util . MemoryCleaner ; <nl> + import android . text . Editable ; <nl> + import org . thoughtcrime . securesms . crypto . InvalidPassphraseException ; <nl> + import org . thoughtcrime . securesms . crypto . MasterSecret ; <nl> + import <nl>,fix for another npe which should never happen but apparently do,1
c13a3a8181e6f28598c5e1002675384fc9753723,2012-10-21 17:41:44-07:00,mmm ConversationActivity . java <nl> ppp ConversationActivity . java <nl> - private boolean sendEncrypted ; <nl> + private boolean isEncryptedConversation ; <nl> - if (isSingleConversation() && sendEncrypted) <nl> + if (isSingleConversation() && isEncryptedConversation) <nl> - if (sendEncrypted) { <nl> + if (isEncryptedConversation) { <nl> - case R . id . menu_context_send_unencrypted: sendMessage(false) ; return true ; <nl> + case R . id . menu_context_send_unencrypted: sendMessage(true) ; return true ; <nl> - if (sendEncrypted) { <nl> + if (isEncryptedConversation) { <nl> - this . sendEncrypted       = true ; <nl> - this . characterCalculator = <nl>,fix `` group thread '' so that message be encrypt when possible,1
0e5ff9bdac9b79e4c31a4fb0233d660aaffd05de,2012-12-01 16:02:55-08:00,"mmm RecipientFactory . java <nl> ppp RecipientFactory . java <nl> - import java . util . ArrayList ; <nl> + import java . util . LinkedList ; <nl> + import java . util . List ; <nl> - ArrayList<Recipient> results = new ArrayList<Recipient>() ; <nl> - StringTokenizer tokenizer    = new StringTokenizer(recipientIds . trim(), "" "") ; <nl> + if (recipientIds == null || recipientIds . trim() . length() == 0) <nl> + return new Recipients(new LinkedList<Recipient>()) ; <nl> + List<Recipient> results   = new LinkedList<Recipient>() ; <nl> + StringTokenizer tokenizer = new StringTokenizer(recipientIds . trim(), <nl>",fix for occasional npe,1
b805c4db4e28ec98e7783252187e441c4c75eba5,2013-01-01 12:54:12-08:00,"mmm MmsDownloader . java <nl> ppp MmsDownloader . java <nl> - for (int i=0 ;i<retrieved . getBody() . getPartsNum() ;i++) { <nl> - Log . w(""MmsDownloader"", ""Sent MMS part of content-type: "" + new String(retrieved . getBody() . getPart(i) . getContentType())) ; <nl> - } <nl> - throw new IOException(""Bad retrieved PDU"") ; <nl> + throw new IOException(""Bad retrieved PDU"") ; <nl> + for (int i=0 ;i<retrieved . getBody() . getPartsNum() ;i++) { <nl> + Log . w(""MmsDownloader"", ""Sent MMS part of content-type: "" + <nl> + new String(retrieved . getBody() . getPart(i) . getContentType())) ; <nl> + } <nl>",fix for npe on empty mm pdu,1
abd7fc67daf63dab82f3f7e826adad7686de2849,2013-01-01 15:38:09-08:00,"mmm LinkedBlockingLifoQueue . java <nl> ppp LinkedBlockingLifoQueue . java <nl> + import org . thoughtcrime . securesms . util . deque . LinkedBlockingDeque ; <nl> new file <nl> ppp BlockingDeque . java <nl> + package org . thoughtcrime . securesms . util . deque ; <nl> + import java . util . Iterator ; <nl> + import java . util . NoSuchElementException ; <nl> + import java . util . concurrent . BlockingQueue ; <nl> + import java . util . concurrent . TimeUnit ; <nl> + public interface BlockingDeque<E> extends BlockingQueue<E>, Deque<E> { <nl> + void addFirst(E e) <nl>",fix noclassdeffound error on 2.2 device,1
209711ae408e50027a816c8fb07395eede4e8c29,2013-02-03 18:41:34-08:00,"mmm ConversationActivity . java <nl> ppp ConversationActivity . java <nl> + import android . os . AsyncTask ; <nl> + @Override <nl> + protected void onPause() { <nl> + super . onPause() ; <nl> + MessageNotifier . setVisibleThread(-1L) ; <nl> + } <nl> + MessageNotifier . setVisibleThread(threadId) ; <nl> + markThreadAsRead() ; <nl> + private void markThreadAsRead() { <nl> + new AsyncTask<Long, Void, Void>() { <nl> + @Override <nl> + protected Void doInBackground(Long .  .  .  params) { <nl> + DatabaseFactory . getThreadDatabase(ConversationActivity . this) . setRead(params[0]) ; <nl> + MessageNotifier . updateNotification(ConversationActivity . this) ; <nl>",fix notification behavior,0
b044a68168d1a8831bdadae60931d8cfe667d6c1,2013-02-04 21:51:25-08:00,"mmm ConversationAdapter . java <nl> ppp ConversationAdapter . java <nl> + import org . thoughtcrime . securesms . contacts . ContactPhotoFactory ; <nl> - if (address == null) recipient = recipients . getPrimaryRecipient() ; <nl> - else                 recipient = RecipientFactory . getRecipientsFromString(context, address, false) . getPrimaryRecipient() ; <nl> + if (address == null)   recipient = recipients . getPrimaryRecipient() ; <nl> + else                   recipient <nl>",fix for mysterious 'anonymous sender ' npe,1
49ea135e371e1f1d0b8208e9664118048f6dae6d,2013-02-06 16:40:09-08:00,mmm MmsDatabase . java <nl> ppp MmsDatabase . java <nl> - DatabaseFactory . getThreadDatabase(context) . setRead(threadId) ; <nl> mmm SmsDatabase . java <nl> ppp SmsDatabase . java <nl> - DatabaseFactory . getThreadDatabase(context) . setRead(threadId) ; <nl>,do not auto-set thread to read on send,1
5bf5b404a1bea37720bf582f92262875130715e9,2013-02-20 20:44:38-08:00,"mmm MessageNotifier . java <nl> ppp MessageNotifier . java <nl> - String address        = cursor . getString(cursor . getColumnIndexOrThrow(SmsDatabase . ADDRESS)) ; <nl> + String address = cursor . getString(cursor . getColumnIndexOrThrow(SmsDatabase . ADDRESS)) ; <nl> - String type = cursor . getString(cursor . getColumnIndexOrThrow(MmsSmsDatabase . TRANSPORT)) ; <nl> + String type           = cursor . getString(cursor . getColumnIndexOrThrow(MmsSmsDatabase . TRANSPORT)) ; <nl> + Recipients recipients = null ; <nl> - return getSmsRecipient(context, cursor) ; <nl> + recipients = getSmsRecipient(context, cursor) ; <nl> <nl>",fix for notification npe on unknown sender,1
eb9b2ef31866d8172df25ac357733518d9375c4d,2013-02-26 22:56:15-08:00,"mmm MmsSendHelper . java <nl> ppp MmsSendHelper . java <nl> - Log . w(""MmsSender"", ""Sending MMS1 of length: "" + mms . length) ; <nl> + Log . w(""MmsSender"", ""Sending MMS1 of length: "" (mms != null ? mms . length : ""null"")) ; <nl>",fix for npe on null mm byte,1
5ca7b1080ce58a02a827260692539d84d277e1b7,2013-02-26 22:56:48-08:00,"mmm MmsDownloader . java <nl> ppp MmsDownloader . java <nl> - if (!isConnected()) { <nl> - if (!isConnectivityPossible() && !pendingMessages . isEmpty()) { <nl> - DatabaseFactory . getMmsDatabase(context) . markDownloadState(pendingMessages . remove() . getMessageId(), MmsDatabase . Types . DOWNLOAD_NO_CONNECTIVITY) ; <nl> - toastHandler . makeToast(context <nl> -  . getString(R . string . MmsDownloader_no_connectivity_available_for_mms_download_try_again_later)) ; <nl> - Log . w(""MmsDownloadService"", ""Unable to download MMS, please try again later . "") ; <nl> - finishConnectivity() ; <nl> + LinkedList<DownloadItem> downloadItems = (LinkedList<DownloadItem>)pendingMessages . clone() ; <nl> + if (isConnected()) { <nl> + pendingMessages . clear() ; <nl> + for (DownloadItem <nl>",fix for concurrentmodificationexception on race condition,1
48576dbb584464efa2bfc5c98a88cfa434965c64,2013-02-26 22:57:09-08:00,"mmm SmsSender . java <nl> ppp SmsSender . java <nl> + } catch (IllegalArgumentException iae) { <nl> + Log . w(""SmsSender"", iae) ; <nl> + DatabaseFactory . getSmsDatabase(context) . markAsSentFailed(messageId) ; <nl>",catch mysterious sm too large exception,1
f2475491fe7b26ee4e341a538d7ccf8f5415e8be,2013-04-23 14:49:32-07:00,mmm MessageMac . java <nl> ppp MessageMac . java <nl> - if (message . length <= MAC_LENGTH) <nl> + if (message == null || message . length <= MAC_LENGTH) <nl>,fix for npe on null encrypt mm message,1
79c554fcc72a9202539f633180214f606014bd5e,2013-05-06 08:40:56-07:00,"mmm MmsDatabase . java <nl> ppp MmsDatabase . java <nl> - notifyConversationListeners(threadId) ; <nl> - DatabaseFactory . getThreadDatabase(context) . update(threadId) ; <nl> + DatabaseFactory . getThreadDatabase(context) . update(threadId) ; <nl> + notifyConversationListeners(threadId) ; <nl> - return new Pair<Long, Long>(threadId, messageId) ; <nl> + return new Pair<Long, Long>(messageId, threadId) ; <nl> mmm SmsDatabase . java <nl> ppp SmsDatabase . java <nl> - values . put(DATE_RECEIVED, Long . valueOf(System . currentTimeMillis())) ; <nl> + values . put(DATE_RECEIVED, System . currentTimeMillis()) ; <nl> - values . put(READ, Integer . valueOf(0)) ; <nl> + values . put(READ, 0) ; <nl>",fix group in-thread notification,1
01658cc454874e0a644d2a0b11d8a22ad7930b16,2013-05-06 14:07:28-07:00,"mmm MessageNotifier . java <nl> ppp MessageNotifier . java <nl> + if (!PreferenceManager . getDefaultSharedPreferences(context) <nl> +  . getBoolean(ApplicationPreferencesActivity . NOTIFICATION_PREF, true)) <nl> + { <nl> + return ; <nl> + } <nl> + if (!PreferenceManager . getDefaultSharedPreferences(context) <nl> +  . getBoolean(ApplicationPreferencesActivity . NOTIFICATION_PREF, true)) <nl> + { <nl> + return ; <nl> + } <nl>",fix for notification preference regression,1
7090ca4a422ab6aeaebbecfb9213adb72df49ceb,2013-05-06 19:09:36-07:00,"mmm SmsTransport . java <nl> ppp SmsTransport . java <nl> - String encryptedMessage = getAsymmetricEncrypt(masterSecret, message . getBody() . getBody(), <nl> - message . getIndividualRecipient()) ; <nl> - OutgoingTextMessage transportMessage = OutgoingTextMessage . from(message) . withBody(encryptedMessage) ; <nl> + OutgoingTextMessage transportMessage               = OutgoingTextMessage . from(message) ; <nl> + if (message . isSecure()) { <nl> + String encryptedMessage = getAsymmetricEncrypt(masterSecret, message . getBody() . getBody(), <nl> + message . getIndividualRecipient()) ; <nl> + transportMessage = transportMessage . withBody(encryptedMessage) ; <nl> + } <nl>",do not remote-encrypt key exchange message,1
ff41c6763dd0b14a730b05c81867b682d40260fe,2013-05-06 19:33:31-07:00,"mmm ConversationListFragment . java <nl> ppp ConversationListFragment . java <nl> - ConversationListFragment . this . queryFilter = query ; <nl> - ConversationListFragment . this . getLoaderManager() . restartLoader(0, null, ConversationListFragment . this) ; <nl> - return true ; <nl> + if (isAdded()) { <nl> + ConversationListFragment . this . queryFilter = query ; <nl> + ConversationListFragment . this . getLoaderManager() . restartLoader(0, null, ConversationListFragment . this) ; <nl> + return true ; <nl> + } <nl> + return false ; <nl>",fix for detach illegalstateexception,1
43214a854c370d8ca56899108258169ec6aadef9,2013-05-06 19:45:05-07:00,"mmm MmsSendHelper . java <nl> ppp MmsSendHelper . java <nl> + import org . thoughtcrime . securesms . util . Util ; <nl> + if (Util . isEmpty(targetUrl . getHost())) <nl> + throw new IOException(""Invalid target host: "" targetUrl . getHost() "" , "" targetUrl) ; <nl>",fix for illegalargumentexception with null url host,1
b99cca8bfa9a060cef3506ee82993bfce59e973a,2013-05-17 12:53:16-07:00,mmm ConversationItem . java <nl> ppp ConversationItem . java <nl> - message . obj     = messageRecord . getBody() ; <nl> + message . obj     = messageRecord . getBody() . getBody() ; <nl>,fix for npe on failed icon click,1
0534f9d95a1f379f02ec007cee8f4704020d1366,2013-05-30 20:29:13-07:00,"mmm MmsDatabase . java <nl> ppp MmsDatabase . java <nl> - cvb . add(ADDRESS, headers . getEncodedStringValue(PduHeaders . FROM) . getTextString()) ; <nl> + if (headers . getEncodedStringValue(PduHeaders . FROM) != null) <nl> + cvb . add(ADDRESS, headers . getEncodedStringValue(PduHeaders . FROM) . getTextString()) ; <nl> + else <nl> + cvb . add(ADDRESS, null) ; <nl>",fix for npe on null from in mm header,1
ad1d927437a27fdd2f1f701f9f73d368afd613e0,2013-05-30 20:35:56-07:00,"mmm ContactSelectionActivity . java <nl> ppp ContactSelectionActivity . java <nl> - recipients . append(groupsFragment . getSelectedContacts()) ; <nl> + recipients . append(groupsFragment . getSelectedContacts(this)) ; <nl> mmm ContactSelectionGroupsFragment . java <nl> ppp ContactSelectionGroupsFragment . java <nl> - public Recipients getSelectedContacts() { <nl> + public Recipients getSelectedContacts(Context context) { <nl> -  . getGroupMembership(getActivity(), groupData . id) ; <nl> +  . getGroupMembership(context, groupData . id) ; <nl>",fix for npe when group selection fragment be no longer attach to activity,1
d2a78ea84cd8c5be4573dae62c54c232e1f38a52,2013-06-01 12:42:45-07:00,"mmm ConversationActivity . java <nl> ppp ConversationActivity . java <nl> + if (getRecipients() == null) { <nl> + Toast . makeText(this, getString(R . string . ConversationActivity_invalid_recipient), <nl> + Toast . LENGTH_LONG) . show() ; <nl> + return ; <nl> + } <nl>",fix for contrive npe on invalid recipient during conversation compose,1
7d07d56fc3220ed816c51b14f5a0bd75bb9f7a7b,2013-07-22 15:04:31-07:00,"new file <nl> ppp MultipartSmsIdentifier . java <nl> + package org . thoughtcrime . securesms . sms ; <nl> + import java . util . HashMap ; <nl> + public class MultipartSmsIdentifier { <nl> + private static final MultipartSmsIdentifier instance = new MultipartSmsIdentifier() ; <nl> + public static MultipartSmsIdentifier getInstance() { <nl> + return instance ; <nl> + } <nl> + private final HashMap<String, Integer>  idMap = new HashMap<String, Integer>() ; <nl> + public synchronized byte getIdForRecipient(String recipient) { <nl> + Integer currentId ; <nl> + if (idMap . containsKey(recipient)) { <nl> + currentId = idMap . get(recipient) <nl>",fix for 'bad encrypt message ' error,1
91b52bed18e4b661eda5659ffa0b16bcaf84329a,2013-12-14 16:55:24+00:00,"mmm MarkReadReceiver . java <nl> ppp MarkReadReceiver . java <nl> - import android . util . Log ; <nl> - final long[]       threadIds    = intent . getLongArrayExtra(""thread_ids"") ; <nl> - if (threadIds != null && masterSecret != null) { <nl> - Log . w(""MarkReadReceiver"", ""threadIds length: "" + threadIds . length) ; <nl> + if (masterSecret != null) { <nl> - for (long threadId : threadIds) { <nl> - Log . w(""MarkReadReceiver"", ""Marking as read: "" + threadId) ; <nl> - DatabaseFactory . getThreadDatabase(context) . setRead(threadId) ; <nl> - } <nl>",do not stick thread id in the intent extra data always mark all thread read from notification,1
dde2d2564ac2d33bf3f06d219510c45e6c654724,2014-01-06 19:49:35-08:00,mmm ApplicationPreferencesActivity . java <nl> ppp ApplicationPreferencesActivity . java <nl> + private static final String KITKAT_DEFAULT_PREF   = "pref_set_default" ; <nl> - this . findPreference(LED_COLOR_PREF) <nl> + this . findPreference(TextSecurePreferences . LED_COLOR_PREF) <nl> - this . findPreference(LED_BLINK_PREF) <nl> + this . findPreference(TextSecurePreferences . LED_BLINK_PREF) <nl> - this . findPreference(RINGTONE_PREF) <nl> + this . findPreference(TextSecurePreferences . RINGTONE_PREF) <nl> - initializeListSummary((ListPreference) findPreference(LED_COLOR_PREF)) ; <nl> - initializeListSummary((ListPreference) findPreference(LED_BLINK_PREF)) ; <nl> - initializeRingtoneSummary((RingtonePreference) findPreference(RINGTONE_PREF)) ; <nl> + initializeListSummary((ListPreference) findPreference(TextSecurePreferences . LED_COLOR_PREF)) ; <nl> + initializeListSummary((ListPreference) findPreference(TextSecurePreferences . LED_BLINK_PREF)) ; <nl> + initializeRingtoneSummary((RingtonePreference) findPreference(TextSecurePreferences . RINGTONE_PREF)) ; <nl> - generalCategory . removePreference(findPreference(ALL_SMS_PREF)) ; <nl>,fix rebase error,1
b79bc4c23449f1bce7e66ca4bc22bbd758fe2ab2,2014-02-15 11:44:47-08:00,"mmm PushReceiver . java <nl> ppp PushReceiver . java <nl> - Log . w(""PushReceiver"", ""Processing: "" + new String(message . getBody())) ; <nl> - IncomingTextMessage   textMessage = new IncomingTextMessage(message, """", messageContent . getGroup()) ; <nl> + IncomingTextMessage   textMessage = new IncomingTextMessage(message, """", <nl> + messageContent . hasGroup() ? <nl> + messageContent . getGroup() : null) ; <nl>",fix for non-group threading issue,1
0cdc6fd87d71558323339e857f0b3e0bd9a8e0af,2014-02-19 15:01:10-08:00,"mmm ConversationListItem . java <nl> ppp ConversationListItem . java <nl> + import android . util . Log ; <nl> + private final static String TAG = ConversationListItem . class . getSimpleName() ; <nl> - contactPhotoImage . setOnClickListener(new View . OnClickListener() { <nl> - @Override <nl> - public void onClick(View v) { <nl> - if (recipient . getContactUri() != null) { <nl> - QuickContact . showQuickContact(context, contactPhotoImage, recipient . getContactUri(), QuickContact . MODE_LARGE, null) ; <nl> - } else { <nl> - Intent intent = new Intent(Intents . SHOW_OR_CREATE_CONTACT,  Uri . fromParts(""tel"", recipient . getNumber(), null)) ; <nl> - <nl>","embrace the darkness , do not open quickcontact for group",1
8093b14922cc0f6bd056c60d8a17d220d7794219,2014-02-23 14:38:41-08:00,mmm MmsTransport . java <nl> ppp MmsTransport . java <nl> + import org . thoughtcrime . securesms . util . TextSecurePreferences ; <nl> + if (TextSecurePreferences . isPushRegistered(context) && <nl> + !TextSecurePreferences . isSmsFallbackEnabled(context)) <nl> + { <nl> + throw new UndeliverableMessageException("MMS Transport is not enabled!") ; <nl> + } <nl>,be sure we do not let mm out if the transport be disable,1
dec7fd4c8a5b8884831ae813feed09b69e41fd3a,2014-02-25 17:54:49-08:00,mmm AudioSlide . java <nl> ppp AudioSlide . java <nl> - part . setContentType(cursor . getString(0) . getBytes()) ; <nl> + part . setContentType(cursor . getString(0) . getBytes()) ; <nl> - throw new IOException("Unable to query content type . ") ; <nl> + throw new IOException("Unable to query content type . ") ; <nl> - cursor . close() ; <nl> + if (cursor != null) <nl> + cursor . close() ; <nl>,fix for npe with audio attachment,1
3b25b87aa8450a20dd224aeff40972ddd0772977,2014-02-26 12:42:16-08:00,mmm PartDatabase . java <nl> ppp PartDatabase . java <nl> + import android . text . TextUtils ; <nl> - new File(cursor . getString(0)) . delete() ; <nl> + String data = cursor . getString(0) ; <nl> + if (!TextUtils . isEmpty(data)) { <nl> + new File(cursor . getString(0)) . delete() ; <nl> + } <nl>,fix for npe,1
